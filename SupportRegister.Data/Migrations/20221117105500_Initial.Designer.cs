// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SupportRegister.Data.EF;

namespace SupportRegister.Data.Migrations
{
    [DbContext(typeof(ProjectSupportRegisterContext))]
    [Migration("20221117105500_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AppUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("a1cc5915-f635-4813-a91f-2998de193566"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("3d44ceab-8216-47bf-90c1-b1ac5607ebc4"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("e90ecdae-8445-47dc-be63-18ca9abac388"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("8005ba7b-d4b8-4706-86bd-618758b211c0"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("b2ad653d-3048-49e7-b3ee-f07076a294f9"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("2efca73d-089c-433a-a62d-3eb8fe224980"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("95d89305-f31b-4c24-bd30-eda39134f9cd"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("03b705af-6b55-4152-83fd-acbaa5423071"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("0c3ebc2a-cfde-4471-919c-d56c61db0473"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("b4704ffc-5b52-4b1f-8bab-9316d2f523ea"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("d0f5a293-eb2c-4df5-8a58-a3134fb8be19"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("db77656b-6e0a-49ea-95d1-44d2cfc58558"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("6f71bdc6-4bbd-428a-9c11-f436d37c7737"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("ef18dd97-1744-4260-9ee4-2a6eadfb36b9"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("1372ffda-c440-4a5e-8987-8856aefdec6f"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("976fe0c7-9396-4458-9e29-d8baa2d2d89f"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("c2b58604-3210-456d-ae23-df85644b555c"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("0f799f73-41e5-400c-905b-4fa2f680ba95"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("049d0711-2893-4e0c-9830-79fcb87006ed"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("b7fa6ab5-f298-4577-9c95-bb613ed53280"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("8d051f8e-9d84-4cc9-90b8-bf58ee39a34e"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("bd1f6efa-1629-48fe-9ec9-9f03e81d6117"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("1ce197a9-51ad-4e32-89cf-ccf1d414c087"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("8a80c189-c866-4a48-b887-cd772d106aa0"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("e85534cd-6c64-4c66-ab46-10aa135105b0"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("27f47fff-2190-418e-a5ea-8ea5878af3ae"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("4e76012a-7b95-4513-9d46-91cd17741a2c"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("a8502205-a79d-47dc-b8f9-8b8df983fe3f"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("2af57213-22fa-4fcc-9c18-fa424d54371f"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("90a694d2-d5e1-4c8e-a9d4-113f775ccd03"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("d6d6d1be-7cea-4f90-8fc8-de96f56550f6"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("0afc92af-e16b-4086-bbb1-a7bb3fb0a254"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("95bea5b6-a046-41db-ac2c-e1139a592332"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("f7833a56-4305-4e12-b4ed-5673277653f3"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("462617dd-e276-4066-946a-79736c9f4d91"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("2a867f04-0fca-4dce-9ab2-27f49d9c7613"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("abc87ddc-4d6f-4bab-8673-1b72f6ecec91"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("c75efa30-51e7-465b-abd0-0d39e869587f"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("45675f17-ed01-4627-b320-550b81d1895c"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("c9d49df6-86d3-4eed-b145-83f7a89d4e28"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("f16d9e63-f743-41d3-a2ba-787186a8b719"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("dbcb0cce-a5e9-436a-8f58-4b848e229a2e"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("f21b5736-4e1b-4a01-b665-7fdaeab5e985"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("ed67b0c8-b211-48f8-ae85-34564f4629f8"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("e1607665-0b43-4b68-8132-86554a0e5f07"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("71e479af-3f35-4b06-bce1-a3bd1f4b89f6"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("d418469e-cfe0-4f78-82e8-c28b3e15c819"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("29d46f1f-212a-4bc6-848a-ef55c142d330"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("3f87e1c7-be78-484f-8f0f-6789984920b2"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("de70013a-cf70-4665-9f64-6407039827da"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("dabff61d-e067-4c3d-b0ba-834d4c466f97"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("81161214-bbb5-4fae-bce4-7613dc84bb3f"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("17557f2a-be60-49b2-9cab-1bea6fe0fa01"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("b1a6e79d-33b5-4be8-9aa7-60f6ebb15f75"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("7860d176-cd9b-4fe6-9cdc-c6829bff2304"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("b99c7b85-53ee-4067-a41e-403545cdef54"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("baa097d4-56d1-4741-8c47-9744c1e178a0"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("ae14c8c6-f241-493d-8a7f-ef9a3b35894c"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("089b2abf-11f1-41db-b40a-04711e05e078"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("c0dbe0c0-f0c3-4843-9d17-295d90644139"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("d2ab768b-d650-4b06-a57d-2d7d0bc63813"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("4ee8867c-feff-42a8-989f-803fb3421351"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("9ccd656b-8be9-4cd9-a456-4a4446c7a5e5"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("25c59a1f-d9d0-4f6c-a391-3467bd68b36a"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("4d2b4f64-2d07-4d55-b46e-eb4a54774e70"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("4f267353-b003-4b0c-90ff-d20f881da99a"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("528fde9f-b7e9-41a3-867a-a23bcf1c9b21"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("087afe30-2643-46e6-9e33-b296b5608b6b"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("eb767016-9e06-4c56-9903-ef9ac85cf402"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("4bdf10e6-4aa1-4bbe-8de5-b58a909a3f3b"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("b5fe3cd8-1256-463f-9062-e26d905f640d"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("dcffb626-b7a0-4204-9a5c-9361e5a9cd5b"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("1074b04d-e70a-4e15-b789-a210b8fc64d6"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("d9b7128e-5c58-499a-9843-c527a16745c5"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("8b12049b-7bb8-4573-b67a-03ffa91995a7"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("0fa1e14d-4011-40af-b3db-d6dd90089a01"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("68fd5fb8-eb1e-491b-a1f3-eb1798bb2f84"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("503e2155-7fc9-4f96-8bb2-04fe277cdb31"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("1b352943-8a5e-49e7-bd20-73f36b33debe"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("e0ee13a6-a833-40a6-b8a4-a7a021ba3338"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("9324178a-f398-4e69-bab0-23897f36bb24"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("aae9d43f-8ed3-4d2a-8d76-72b0d837efb3"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("8139add9-3d31-412c-9aea-02c27e18e3a5"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("bed10234-220c-4521-865f-92d9cc2b6f23"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("634bcaf6-f0fb-4057-83c2-c4429a871287"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("9279047b-0319-4c2e-a13b-65e247f027a8"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("f08e285e-7df6-4718-974e-48129e6e9715"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("2ef30f4d-89a3-47ec-ada1-64795e191e1c"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("d7032b13-1712-4afa-a15a-316dcd84b37a"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        },
                        new
                        {
                            UserId = new Guid("894ae027-a595-4891-ac27-bcc42b7e8db0"),
                            RoleId = new Guid("bff91054-dc92-421e-a233-d1080f630928")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d04dce2-969a-435d-bba4-df3f325983dc"),
                            ConcurrencyStamp = "c8a4550b-a8ab-4aa2-8a6f-40f04a727192",
                            Description = "Administrator role",
                            Name = "admin",
                            NormalizedName = "admin"
                        },
                        new
                        {
                            Id = new Guid("bff91064-dc92-421e-a233-d1080f630928"),
                            ConcurrencyStamp = "92352dd9-e93f-42be-978f-08e332b78014",
                            Description = "Staff role",
                            Name = "staff",
                            NormalizedName = "staff"
                        },
                        new
                        {
                            Id = new Guid("bff91054-dc92-421e-a233-d1080f630928"),
                            ConcurrencyStamp = "ebef076b-1da8-4240-8cdc-d6a04fd37742",
                            Description = "Student role",
                            Name = "student",
                            NormalizedName = "student"
                        });
                });

            modelBuilder.Entity("SupportRegister.Data.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bff91064-dc92-421e-a233-d1080f630928"),
                            AccessFailedCount = 0,
                            Address = "Hưng Lợi, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "70f12fc6-dd39-421f-852c-423fbe23c30c",
                            Email = "yenb1809323@student.ctu.edu.vn",
                            EmailConfirmed = false,
                            FullName = "Đỗ Xuân Yên",
                            LockoutEnabled = false,
                            NormalizedEmail = "yenb1809323@student.ctu.edu.vn",
                            NormalizedUserName = "YenDX",
                            PasswordHash = "AQAAAAEAACcQAAAAEJFe1VaFZ8Dvj9w0wN9RXaWKEGAostmWyn33MZG+YCYYw1RPitjhM4l0jr9iD6xiUg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "YenDX"
                        },
                        new
                        {
                            Id = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AccessFailedCount = 0,
                            Address = "Hưng Lợi, Ninh Kiều, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d3980a6b-0a1b-4b18-a675-0990ffd0343c",
                            Email = "trucb1809323@student.ctu.edu.vn",
                            EmailConfirmed = false,
                            FullName = "Võ Thị Thanh Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "trucb1809323@student.ctu.edu.vn",
                            NormalizedUserName = "TrucVTT",
                            PasswordHash = "AQAAAAEAACcQAAAAEK57B1kA6P388jd2NJAaDq5Mf2FM5sae7re9Gzv/b5prjaI/kSjOtl8euNuGTt2DSQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "TrucVTT"
                        },
                        new
                        {
                            Id = new Guid("bff91065-dc92-421e-a233-d1080f630928"),
                            AccessFailedCount = 0,
                            Address = "Hưng Lợi, Ninh Kiều, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c9ae03b1-c2ac-4533-9622-b31ffef0a4b6",
                            Email = "haob1809323@student.ctu.edu.vn",
                            EmailConfirmed = false,
                            FullName = "Vương Như Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "haob1809323@student.ctu.edu.vn",
                            NormalizedUserName = "HaoVN",
                            PasswordHash = "AQAAAAEAACcQAAAAEHwMQPpKXAq9DESBkTABpH1uHc8VPsRtt/DeNAFW/5YGEQbDJvsv9Uh+kiW0qrZR4w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "HaoVN"
                        },
                        new
                        {
                            Id = new Guid("85ba1fde-b003-4dbd-a026-d56831b6bbf8"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f7c3c844-2957-4a8b-8617-aab7497a1f42",
                            Email = "B180990@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B180990@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B180990",
                            PasswordHash = "AQAAAAEAACcQAAAAEN/2RVkz10lN0l/wAf04deF3sC6ieN1Ye+99owJtfLJi2Oirf/3+mWFybg6KcU9+pQ==",
                            PhoneNumber = "09817744610",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e321b40f-49ce-458c-8e14-2ef4951d27cd",
                            TwoFactorEnabled = false,
                            UserName = "B180990"
                        },
                        new
                        {
                            Id = new Guid("4ee8867c-feff-42a8-989f-803fb3421351"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dfb335a2-5e85-4162-824d-439d8eed5c9c",
                            Email = "B180991@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B180991@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B180991",
                            PasswordHash = "AQAAAAEAACcQAAAAEC3WXn2FaDGas52rQOcy9MSTalc2GHZL5F1wbF/QforGG59IQiXBtU43D3V7eoOoVg==",
                            PhoneNumber = "09817744611",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d80a195d-b0a2-47cb-a14d-3152ab2b2d50",
                            TwoFactorEnabled = false,
                            UserName = "B180991"
                        },
                        new
                        {
                            Id = new Guid("bfefbec5-c208-42d7-9883-75ac611aa69f"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "311902b3-5474-48a0-825c-6e27f6e5556d",
                            Email = "B180992@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B180992@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B180992",
                            PasswordHash = "AQAAAAEAACcQAAAAEAz92ML+6QQC3McB3qm1i4cxFz83kRIGoXk6VJjdwa1tsB8u2SmOtM2paBRwRVyBvA==",
                            PhoneNumber = "09817744612",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f7354bd0-14d3-4f3e-8875-272247ef21bd",
                            TwoFactorEnabled = false,
                            UserName = "B180992"
                        },
                        new
                        {
                            Id = new Guid("5af29074-61c8-4718-9389-53e98d3572df"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "768b6788-cda8-4311-ab39-7472158400ae",
                            Email = "B180993@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B180993@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B180993",
                            PasswordHash = "AQAAAAEAACcQAAAAEHeGQ7IYP/ZzYNme1OrnQAM0a9lewdi55oWXaUM4w+9e5vu5mkXL0syjUUXuPNGx9w==",
                            PhoneNumber = "09817744613",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0c61eeef-91df-416d-a7ab-0b0f950a78d5",
                            TwoFactorEnabled = false,
                            UserName = "B180993"
                        },
                        new
                        {
                            Id = new Guid("b4704ffc-5b52-4b1f-8bab-9316d2f523ea"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "cfc1a4a2-8637-443d-a221-30d7208271d8",
                            Email = "B180994@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B180994@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B180994",
                            PasswordHash = "AQAAAAEAACcQAAAAEI4lySVvAO3MULycsocrv1v2jWfDwHtE4F+tEBhZg89IcGS4rOm3s48rzt4UJx0LEw==",
                            PhoneNumber = "09817744614",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "556bb241-c01b-486c-9c00-3ce1027f4237",
                            TwoFactorEnabled = false,
                            UserName = "B180994"
                        },
                        new
                        {
                            Id = new Guid("18cad4e4-4937-4559-981d-d6e8144a76bf"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7f06e5d2-7b97-4604-94cb-e3765b9a3f09",
                            Email = "B180995@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B180995@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B180995",
                            PasswordHash = "AQAAAAEAACcQAAAAEG1FQAy4TjXAJi7ZfXkmUf+4sLH1pvtQkklLj7a7lxJUo4KqCkeekk5rNbOqGWYusQ==",
                            PhoneNumber = "09817744615",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0e758c9d-758a-4f76-9ecb-78e01808f203",
                            TwoFactorEnabled = false,
                            UserName = "B180995"
                        },
                        new
                        {
                            Id = new Guid("1b352943-8a5e-49e7-bd20-73f36b33debe"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c16f11cc-fa97-4b3b-9930-c257dad0bbc0",
                            Email = "B180996@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B180996@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B180996",
                            PasswordHash = "AQAAAAEAACcQAAAAEKhj1IiWT1c+0TZZ9dFlulA4k7ISnARzth9bNKk5ChfrUXibYPlpZ+m5lS/xrj87+Q==",
                            PhoneNumber = "09817744616",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4fb7501c-79c8-4f7a-8922-446185b702c4",
                            TwoFactorEnabled = false,
                            UserName = "B180996"
                        },
                        new
                        {
                            Id = new Guid("afca891b-c143-4bd1-b2d0-d26cc8775e17"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "42713724-01af-4ac1-abba-4832ad1eadd7",
                            Email = "B180997@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B180997@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B180997",
                            PasswordHash = "AQAAAAEAACcQAAAAEG0mU7jOCBwfiitdVqV9UCVsL5SuwebJW1u8WyJbovjAACmsPcXSKK0Pnmqe2cuzjA==",
                            PhoneNumber = "09817744617",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "39008eea-6fd7-4da7-ab8b-8a2db8e218dd",
                            TwoFactorEnabled = false,
                            UserName = "B180997"
                        },
                        new
                        {
                            Id = new Guid("22f56273-134d-440f-8404-c93cb419f931"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "44344622-c1a9-4553-b2c7-14c867303654",
                            Email = "B180998@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B180998@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B180998",
                            PasswordHash = "AQAAAAEAACcQAAAAEKErcm1019+WpOiYU4AexVGq6X8/xVc/oMYHz2CvuXWtNcQHK78yHvrfM6DzgPe83g==",
                            PhoneNumber = "09817744618",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "339fdb7d-c7e3-4995-bb32-6b425a12a5cd",
                            TwoFactorEnabled = false,
                            UserName = "B180998"
                        },
                        new
                        {
                            Id = new Guid("6ee1ee30-2953-4c3e-8ff8-0007b12bc8b9"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ff58705d-b9e3-4bb8-9d71-430b89aed6da",
                            Email = "B180999@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B180999@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B180999",
                            PasswordHash = "AQAAAAEAACcQAAAAEKk4Znk/ooMpqBd6c0yQJLFkt3Rh+3db7KG8Lh/7KV7SWs5htr1rPxC4QYImhz4acA==",
                            PhoneNumber = "09817744619",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9970bb28-d5b1-424e-bd7f-ad830f7ddc73",
                            TwoFactorEnabled = false,
                            UserName = "B180999"
                        },
                        new
                        {
                            Id = new Guid("51cf2a94-9f64-4e0a-bd42-60ba518f6f06"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5a1cd717-0ce5-441b-bc41-645ae94aebbe",
                            Email = "B1809910@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809910@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809910",
                            PasswordHash = "AQAAAAEAACcQAAAAELrFyy11ilSjk9gb+I+/WPzD29Ysr34kvIABsA3whpu2lkwHJA/Fed1uYy8B29VPTw==",
                            PhoneNumber = "098177446110",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "dd222547-6e41-4b1d-8de4-a4671371b1e3",
                            TwoFactorEnabled = false,
                            UserName = "B1809910"
                        },
                        new
                        {
                            Id = new Guid("d623f5be-a2b6-4db3-9b6c-9f2e62175c88"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0406cc0e-02f6-4c57-b4d1-2a98eccb9f29",
                            Email = "B1809911@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809911@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809911",
                            PasswordHash = "AQAAAAEAACcQAAAAEF5Hr1q5Su1OqSiwOIZvC3jvdoBbfn0YmnmR3RRTeYrmnb5wxk/Yi298E4X72rHm3g==",
                            PhoneNumber = "098177446111",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6c80ddfb-901e-402b-84ba-7f090e26048f",
                            TwoFactorEnabled = false,
                            UserName = "B1809911"
                        },
                        new
                        {
                            Id = new Guid("882ccd9e-36cf-4940-88e5-ea7fbd477c37"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "acd29645-4cdc-4a49-b12a-8e4c0f2ac86b",
                            Email = "B1809912@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809912@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809912",
                            PasswordHash = "AQAAAAEAACcQAAAAEMo2pLSBoKW2s6J2N32mMQeIjO4iSMeDUvHx0DOOHUWv8W2YWmPWuO2Js9wP4/jSIw==",
                            PhoneNumber = "098177446112",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c662f1ea-5e46-45e6-bccf-3aa32e8fc6d7",
                            TwoFactorEnabled = false,
                            UserName = "B1809912"
                        },
                        new
                        {
                            Id = new Guid("a55e3e12-6287-4c86-a86f-89f004f332ed"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "72168dc2-3831-4485-b311-bf3f18d126fc",
                            Email = "B1809913@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809913@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809913",
                            PasswordHash = "AQAAAAEAACcQAAAAEOgHvYeJyH0fHuaDOBK5fk3/kBMvvTNWrKWubFy0wUHVjCMnrQT2V+QG15MbceilQg==",
                            PhoneNumber = "098177446113",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5897bfc2-1d2e-4e01-80ab-f86cd4876c87",
                            TwoFactorEnabled = false,
                            UserName = "B1809913"
                        },
                        new
                        {
                            Id = new Guid("eef44e4d-8de7-4675-8949-84bf629809b9"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b2600fc4-8bbe-48d3-9535-9b4f23aeab1a",
                            Email = "B1809914@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809914@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809914",
                            PasswordHash = "AQAAAAEAACcQAAAAEOJaH1VJmEM1mY3phyw/QRpNi5656SbNAId5SAzk32tNPGp1btJD17DlZ9uQLL1KvQ==",
                            PhoneNumber = "098177446114",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "92abc99c-0605-4d58-b90c-40ad3ca2af34",
                            TwoFactorEnabled = false,
                            UserName = "B1809914"
                        },
                        new
                        {
                            Id = new Guid("05ef55e7-1566-4e42-a955-020e90a69802"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "73fa487a-9977-4834-aa77-e4de9092c177",
                            Email = "B1809915@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809915@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809915",
                            PasswordHash = "AQAAAAEAACcQAAAAEHFO7Bsq5vQMaMWMYNmaU5zUFU65vYNHe7RxfwRibaeAffpIUWE3OTaRwBDLxXLIyA==",
                            PhoneNumber = "098177446115",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a4202a41-0cdb-4507-b1f9-8fe8b0b47b61",
                            TwoFactorEnabled = false,
                            UserName = "B1809915"
                        },
                        new
                        {
                            Id = new Guid("68fd5fb8-eb1e-491b-a1f3-eb1798bb2f84"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fc681869-371c-475f-8488-7b915e158983",
                            Email = "B1809916@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809916@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809916",
                            PasswordHash = "AQAAAAEAACcQAAAAEEYVTNQI3EnahgNxhKCWTEAHNOj0O4g/2ux4v+ohWVRkomBIAqnI8f9gQBA2vN7CWA==",
                            PhoneNumber = "098177446116",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "885eaf13-df68-4d25-a61b-fc0de98b9136",
                            TwoFactorEnabled = false,
                            UserName = "B1809916"
                        },
                        new
                        {
                            Id = new Guid("894ae027-a595-4891-ac27-bcc42b7e8db0"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "bb8483ed-1d83-4f3f-9c6a-e349d1021bcd",
                            Email = "B1809917@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809917@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809917",
                            PasswordHash = "AQAAAAEAACcQAAAAEEVPviF7V0WjCJ4RInKjPyYu6YKd0QlGeYt95dT8Vs3hAUf/uVt2fGWqFWtabR26qA==",
                            PhoneNumber = "098177446117",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "02314f63-f686-4a2d-b272-2a734bcfda46",
                            TwoFactorEnabled = false,
                            UserName = "B1809917"
                        },
                        new
                        {
                            Id = new Guid("d8a24afc-ea59-4553-80f8-538d2787faae"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "352e3043-1ea8-4ca2-96d6-63cc0cac2c70",
                            Email = "B1809918@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809918@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809918",
                            PasswordHash = "AQAAAAEAACcQAAAAEK7nxaxAjb4zK85aeqLtjBo7U3nJmkQ9sVOHdhX9ZtF5l8B7Ze5hlFPQhD5A4wHaBA==",
                            PhoneNumber = "098177446118",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "16aff3a9-764c-4939-ae69-bc0ac81ac898",
                            TwoFactorEnabled = false,
                            UserName = "B1809918"
                        },
                        new
                        {
                            Id = new Guid("dcffb626-b7a0-4204-9a5c-9361e5a9cd5b"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fedeb61c-7bc3-428a-bec7-f1d87b5dc58d",
                            Email = "B1809919@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809919@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809919",
                            PasswordHash = "AQAAAAEAACcQAAAAEDNuQAwPo0jv2ww2rLsu2FdUbRLVgga9bBZXhOumyahPMRjijbjRdqjlsRT53RI0OA==",
                            PhoneNumber = "098177446119",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b03a5741-ef92-481c-80ad-61e8741278c7",
                            TwoFactorEnabled = false,
                            UserName = "B1809919"
                        },
                        new
                        {
                            Id = new Guid("15607863-96fb-4e17-bc19-8f85ee9eb85e"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "21bf2edc-e809-4b30-a36b-66c9fe13675b",
                            Email = "B1809920@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809920@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809920",
                            PasswordHash = "AQAAAAEAACcQAAAAEK6mtAJqpi+/Gv2fIYkC/7AK+oGBilrnZz92yANbdlUzTp8C899YzMD07naRfc7Dwg==",
                            PhoneNumber = "098177446120",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e44ab4f0-1591-461f-be05-96370c6413f5",
                            TwoFactorEnabled = false,
                            UserName = "B1809920"
                        },
                        new
                        {
                            Id = new Guid("089b2abf-11f1-41db-b40a-04711e05e078"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a2197c2d-d1f8-42e2-abb9-249fcdffb1b6",
                            Email = "B1809921@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809921@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809921",
                            PasswordHash = "AQAAAAEAACcQAAAAEK0ddljgKzWeEhQapxDQNe9FE7UkBrrZPZ6HQV1nvrd//yMB/HGNRAuArKekZn4sZA==",
                            PhoneNumber = "098177446121",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d48d85f9-08c7-4c5a-894a-8620c68824ef",
                            TwoFactorEnabled = false,
                            UserName = "B1809921"
                        },
                        new
                        {
                            Id = new Guid("71e75106-5a1c-4962-812a-d240e1a887cd"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "22535cbd-1290-4210-847a-e0bfb2edb436",
                            Email = "B1809922@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809922@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809922",
                            PasswordHash = "AQAAAAEAACcQAAAAEJD3CbCL1UB90Cs23/YSh7i5Z67+fqjkmTtjz4gVzmcPsPXqanSsida5eDfuIfCIHg==",
                            PhoneNumber = "098177446122",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "310b599e-3e7a-4272-aa62-0a06aa3757c2",
                            TwoFactorEnabled = false,
                            UserName = "B1809922"
                        },
                        new
                        {
                            Id = new Guid("6f71bdc6-4bbd-428a-9c11-f436d37c7737"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "490de114-b520-4f36-9776-5600c0a87869",
                            Email = "B1809923@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809923@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809923",
                            PasswordHash = "AQAAAAEAACcQAAAAEGkZzdepGNoAgW0MKXOdigAz1TIPZQ7p0Dj7t3e3fYDXCYZUc/eUUh928QPdjjp//g==",
                            PhoneNumber = "098177446123",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7de9c111-79fc-42a6-9bae-e04a8ce82c8f",
                            TwoFactorEnabled = false,
                            UserName = "B1809923"
                        },
                        new
                        {
                            Id = new Guid("82c2022c-79a4-4424-92c2-e5b8bbbc02bd"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "71313525-68c1-4e9a-9bb1-8072c8daf48f",
                            Email = "B1809924@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809924@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809924",
                            PasswordHash = "AQAAAAEAACcQAAAAEN0CBoMB2pi+JWaFEaV5zSWmMV0g1TDyyOiBqLpk+//9LAW5HT6xh3eSBqW4GKMjCg==",
                            PhoneNumber = "098177446124",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "838db171-3a0a-487c-b589-f01612d793fd",
                            TwoFactorEnabled = false,
                            UserName = "B1809924"
                        },
                        new
                        {
                            Id = new Guid("b2ad653d-3048-49e7-b3ee-f07076a294f9"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6f87f60f-e8d2-41f2-bfb2-d657cc99b948",
                            Email = "B1809925@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809925@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809925",
                            PasswordHash = "AQAAAAEAACcQAAAAEGapAhThfhE8lx5m2cxW/E75bFPuW0hcEXjK8xI6dJ0TKJfW1ZgpVw9kgdRuLBzo9w==",
                            PhoneNumber = "098177446125",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "cb75db1d-0c6a-4323-8693-42bcca664f8a",
                            TwoFactorEnabled = false,
                            UserName = "B1809925"
                        },
                        new
                        {
                            Id = new Guid("c5a4ac50-9fdc-4715-bc0c-ba0645587b9d"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "69e4382f-6bb8-4304-922a-5d83a2e9fd43",
                            Email = "B1809926@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809926@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809926",
                            PasswordHash = "AQAAAAEAACcQAAAAEDHjZxa7G6RPsqbzkuOAMl0kSThB1tLtKY0EPhjhjMcz5FlzlVfC/ELfeGgVmBsgPQ==",
                            PhoneNumber = "098177446126",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "70ffac47-c238-46a9-a930-87840a720e58",
                            TwoFactorEnabled = false,
                            UserName = "B1809926"
                        },
                        new
                        {
                            Id = new Guid("c5754a1f-458c-4f1f-8cfe-34446401d826"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "81fb1ed8-f7aa-44fb-8763-beafbfc03007",
                            Email = "B1809927@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809927@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809927",
                            PasswordHash = "AQAAAAEAACcQAAAAEJWYDaPSNBcuUTduONdBC/ed522aN4C9kCpZwiUpzUUPM6aSci5k7hTSBZ9Mm0REyg==",
                            PhoneNumber = "098177446127",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "dbb29c45-60be-4142-99ec-4336902540c6",
                            TwoFactorEnabled = false,
                            UserName = "B1809927"
                        },
                        new
                        {
                            Id = new Guid("5f869759-4f5f-4c17-9e3e-2cacd27a6919"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5b7bc263-68e0-4af9-bd5e-793e929f4b87",
                            Email = "B1809928@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809928@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809928",
                            PasswordHash = "AQAAAAEAACcQAAAAEJnNxCOhcEC1GsdGCOLZ6kjIgKkql0L5Z29EcD/WHOHlymoXmbfc3l+lSAWRTpodrg==",
                            PhoneNumber = "098177446128",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "57eafafb-4c2f-4cb7-a452-a6c2c979e2be",
                            TwoFactorEnabled = false,
                            UserName = "B1809928"
                        },
                        new
                        {
                            Id = new Guid("f829d5ff-00be-4368-b49a-0588c291c448"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "427b9ed7-76e0-4b2f-b3fd-453b55df4315",
                            Email = "B1809929@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809929@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809929",
                            PasswordHash = "AQAAAAEAACcQAAAAEPSsMroj/jLNDrKhKxnIoFkLFFWURH7KuR9rRug/6wtSSt1+t+ADNtty4uuT2usviA==",
                            PhoneNumber = "098177446129",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "69634f47-6e75-4c89-a588-cb4aa09d0eef",
                            TwoFactorEnabled = false,
                            UserName = "B1809929"
                        },
                        new
                        {
                            Id = new Guid("f08e285e-7df6-4718-974e-48129e6e9715"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "94c23a6e-9518-4b82-981e-f63a5b6303a2",
                            Email = "B1809930@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809930@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809930",
                            PasswordHash = "AQAAAAEAACcQAAAAENoElyCZ/UBl7waZR4+t0cSDDkOm4vVM3gwBCJIJ05Ut1EIxPwINc3zpG0ZzWC4eiA==",
                            PhoneNumber = "098177446130",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f1f96a67-0b6e-4a4c-9428-eb1e8857f232",
                            TwoFactorEnabled = false,
                            UserName = "B1809930"
                        },
                        new
                        {
                            Id = new Guid("6a5c4b2e-5a17-4300-8eb3-dc048436c2ab"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6023ac9e-a985-4f3e-aeb1-85ba4d9327e2",
                            Email = "B1809931@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809931@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809931",
                            PasswordHash = "AQAAAAEAACcQAAAAEGj5FpdRxN2VlR+ZFv37iMHgRed8LJDiOS6nNsCYhfFAkIf04Q3jOpvfoLtYNPgHlw==",
                            PhoneNumber = "098177446131",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "00604584-4de0-4fb2-816e-9daac59a98ba",
                            TwoFactorEnabled = false,
                            UserName = "B1809931"
                        },
                        new
                        {
                            Id = new Guid("5dd9a5d7-c2ca-40c7-a066-f626a8f2d2d2"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3be6bf02-b96b-4de7-98f8-1494c8916986",
                            Email = "B1809932@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809932@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809932",
                            PasswordHash = "AQAAAAEAACcQAAAAEFmwuXmSaMkE2PEW3YU0AMwXtB1N2g1+/Z9XQyjki5wEaq3h3a346daNxx2YL2NO/g==",
                            PhoneNumber = "098177446132",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9c01e340-dbfd-4675-b194-8dbba28a1bf6",
                            TwoFactorEnabled = false,
                            UserName = "B1809932"
                        },
                        new
                        {
                            Id = new Guid("83534383-3514-42b9-910c-cb0d47f19b56"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "cffc8cc8-d51d-432b-87ef-74823f49db7d",
                            Email = "B1809933@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809933@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809933",
                            PasswordHash = "AQAAAAEAACcQAAAAEK7gmCFG3s65u45pV+Qf/5BVq7/0yor1EeXsECfiJIPRG2CheWvbXAz6uCZB+ZR4BA==",
                            PhoneNumber = "098177446133",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ed5d87af-6d2e-41c3-a4b7-a7b363c980e7",
                            TwoFactorEnabled = false,
                            UserName = "B1809933"
                        },
                        new
                        {
                            Id = new Guid("f7833a56-4305-4e12-b4ed-5673277653f3"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "710f21d5-4467-435f-97b1-8e6f67ccfa7e",
                            Email = "B1809934@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809934@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809934",
                            PasswordHash = "AQAAAAEAACcQAAAAEPuiDZE8duJS5aibdYfN9vi7m0zpnWAeOjpPFYzs2oMZGhTXE7MyYRIoFtbNmwMdTA==",
                            PhoneNumber = "098177446134",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7b8377c2-79d5-4e53-ae1a-a9860b11c493",
                            TwoFactorEnabled = false,
                            UserName = "B1809934"
                        },
                        new
                        {
                            Id = new Guid("faee1ffe-8a33-4b18-8088-b8c285c2119b"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ad797202-a531-486c-b879-a16a2217a5da",
                            Email = "B1809935@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809935@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809935",
                            PasswordHash = "AQAAAAEAACcQAAAAEIx/E3fXhnzvhv1WNkzthrbHVd5hUZx6G9BZikK9OzIVvuzRhgFBuntq0F8UbnbWHA==",
                            PhoneNumber = "098177446135",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d0f86dee-fab6-46dd-8f3f-56c50bbb1e3b",
                            TwoFactorEnabled = false,
                            UserName = "B1809935"
                        },
                        new
                        {
                            Id = new Guid("118893c0-ddbf-40f2-8a14-9d432dd1b22e"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c3c29c54-bdb5-4d3b-90d5-33e1a33cb57a",
                            Email = "B1809936@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809936@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809936",
                            PasswordHash = "AQAAAAEAACcQAAAAEInVf5XLOqvfmmCzFsAE02QDdaFX/edmIv/lsMebRYiIKw25g+rYdunkWMzQaSQubg==",
                            PhoneNumber = "098177446136",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "eca08e4d-23ee-4389-a828-4be367f70bfe",
                            TwoFactorEnabled = false,
                            UserName = "B1809936"
                        },
                        new
                        {
                            Id = new Guid("3fd80720-04a1-4c86-954e-41377a8a2f4e"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c0f77d77-d1c1-4a38-9caa-50f6a3b5a016",
                            Email = "B1809937@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809937@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809937",
                            PasswordHash = "AQAAAAEAACcQAAAAEEFmmeyEDHGp0MkQ8vSluB6v+UBbp3+OPdEsgkC3Vi5doFWjIp0U63hvPMpJbLC4og==",
                            PhoneNumber = "098177446137",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6959a641-76a9-4a5f-88df-0fe765355e79",
                            TwoFactorEnabled = false,
                            UserName = "B1809937"
                        },
                        new
                        {
                            Id = new Guid("e9a35a9e-b65b-406d-af8c-69d1fc2184f3"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c620bdfe-022f-4d83-8efb-79296de257ee",
                            Email = "B1809938@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809938@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809938",
                            PasswordHash = "AQAAAAEAACcQAAAAEBvWV4IEUFtLqjRpheuZ905Wsl54qXYTY8FX51QfXfUCKCG3M6O+ghO9IrBwqUFSLQ==",
                            PhoneNumber = "098177446138",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "947bed6f-ca92-4125-ad48-e690e11f4fb0",
                            TwoFactorEnabled = false,
                            UserName = "B1809938"
                        },
                        new
                        {
                            Id = new Guid("95d89305-f31b-4c24-bd30-eda39134f9cd"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ef190b20-ad28-4372-a73f-8942fd6ad2ad",
                            Email = "B1809939@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809939@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809939",
                            PasswordHash = "AQAAAAEAACcQAAAAECcBQ93Ey7WEMOR8Xx6bdDRIJd1MmGLtdWbZKjYIr2emq0sEVo7nInMMyczQtg//tA==",
                            PhoneNumber = "098177446139",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "2c5fd951-7441-40ee-950b-5f0e8b0dfed2",
                            TwoFactorEnabled = false,
                            UserName = "B1809939"
                        },
                        new
                        {
                            Id = new Guid("8a966b22-74b4-4fdf-b587-4d9f7365e7e9"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f2391eed-9b96-4486-8d34-384f7e47a346",
                            Email = "B1809940@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809940@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809940",
                            PasswordHash = "AQAAAAEAACcQAAAAEFGz0d3IEI7xgjbc74uBCKfipqGooQ2n0dHSs1OGx9fk0FHsUsHQmsYm8YX29dJguA==",
                            PhoneNumber = "098177446140",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "73d0c854-291e-48c9-9b93-b603a4bb284b",
                            TwoFactorEnabled = false,
                            UserName = "B1809940"
                        },
                        new
                        {
                            Id = new Guid("80f66855-695e-42bd-86df-adfcc096a6fa"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "93fb936b-3019-47db-be0f-7178343014bc",
                            Email = "B1809941@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809941@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809941",
                            PasswordHash = "AQAAAAEAACcQAAAAEFL2Bvvik3fIVGP4CD8JegXFgKI+C1Pgl3ewZhzj3hLi1g7h/Y0ToW+INk9jE3LGOA==",
                            PhoneNumber = "098177446141",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "18f230ca-6ffd-4b2c-96de-7ab8468cdaab",
                            TwoFactorEnabled = false,
                            UserName = "B1809941"
                        },
                        new
                        {
                            Id = new Guid("429f7cdd-fa29-4112-b667-7479b8f2aa15"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ec8f5cb9-c248-4d0c-bfaa-58cc12a09e51",
                            Email = "B1809942@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809942@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809942",
                            PasswordHash = "AQAAAAEAACcQAAAAENbk4qtWMFfkuRi3eE0WbMJ19fOFcx34O8Qe5tE09uHzUpQ5yWXd164zp5sMfQL0mg==",
                            PhoneNumber = "098177446142",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5219c757-0eaa-47f1-a2b5-540ec0f79b3e",
                            TwoFactorEnabled = false,
                            UserName = "B1809942"
                        },
                        new
                        {
                            Id = new Guid("aa14e86a-6f2c-4200-850c-7dd7360a08c9"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "530a5109-dc1e-4398-808a-93e63846611d",
                            Email = "B1809943@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809943@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809943",
                            PasswordHash = "AQAAAAEAACcQAAAAENg2hYK7tE4fQdvskS+E7nSUp1GqiS98Gj24nH26H+cWXJgY5daRuDdYudvCnfFIJw==",
                            PhoneNumber = "098177446143",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d8352e50-299a-4ebe-aa1c-2a3cd1bcc72b",
                            TwoFactorEnabled = false,
                            UserName = "B1809943"
                        },
                        new
                        {
                            Id = new Guid("43f0f2dc-ed06-488e-b8ff-33e5fedce4b8"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b25f35a2-c36b-4d77-8a75-3e3d4ef86e75",
                            Email = "B1809944@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809944@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809944",
                            PasswordHash = "AQAAAAEAACcQAAAAEOSoIm6ACck34+dtdjUQ7iNt3nPrbZq3oCfiiEaQhhglDVJwW5y+w4LgVDpeVz64uQ==",
                            PhoneNumber = "098177446144",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "693046ba-4454-48a7-b8af-e11e57f732a7",
                            TwoFactorEnabled = false,
                            UserName = "B1809944"
                        },
                        new
                        {
                            Id = new Guid("3abcd768-4197-4229-8273-befb3436932c"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3a8b1a46-4e94-4c29-a0e4-8952ea189c19",
                            Email = "B1809945@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809945@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809945",
                            PasswordHash = "AQAAAAEAACcQAAAAEAy6AUPN3VLw7CVhuYhcRBEW4pdIbDqn2Nl1fiZlyJeREqUisnS8/+79d4jjLSOWXg==",
                            PhoneNumber = "098177446145",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "cea29f9b-7676-4548-bf16-2818ed1563fd",
                            TwoFactorEnabled = false,
                            UserName = "B1809945"
                        },
                        new
                        {
                            Id = new Guid("480bd134-5225-4e70-958d-bd7e5824fea7"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d2e68b91-333d-4a63-9be6-689400d85676",
                            Email = "B1809946@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809946@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809946",
                            PasswordHash = "AQAAAAEAACcQAAAAEEf/smzc9GaUihTCiq0QHHzZAVVYANtpCyRC6F7dKFXVJjpsnT/apGKggB+SX7SnVQ==",
                            PhoneNumber = "098177446146",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "44575c89-d6c0-4b51-a3bf-a994b159606b",
                            TwoFactorEnabled = false,
                            UserName = "B1809946"
                        },
                        new
                        {
                            Id = new Guid("ec7919a8-a3c2-470d-bf29-e5c186a4ac14"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c98bf4f2-b9f5-4abc-adf0-648171c0f46c",
                            Email = "B1809947@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809947@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809947",
                            PasswordHash = "AQAAAAEAACcQAAAAEKl72+YqlL0Gmv616pYaRoQ3rI4YnRPytjvEf3tNURinVjea6AZwamhSJwDEoS98WA==",
                            PhoneNumber = "098177446147",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "2ee26251-c621-42ab-907c-f795ce53dcc5",
                            TwoFactorEnabled = false,
                            UserName = "B1809947"
                        },
                        new
                        {
                            Id = new Guid("f3205131-ae39-4762-a936-f8cfed27d96b"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0981679a-f6dd-4cfb-be10-3d9ce0bc6b27",
                            Email = "B1809948@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809948@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809948",
                            PasswordHash = "AQAAAAEAACcQAAAAELxWnrRb65TeUxHzweD5VGPbf21BpL4AJXUIozKKhLVsRn+Kd131N8lcH7IXP/ZpvQ==",
                            PhoneNumber = "098177446148",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9637b394-455a-4b60-a957-d50ee6999bbe",
                            TwoFactorEnabled = false,
                            UserName = "B1809948"
                        },
                        new
                        {
                            Id = new Guid("c1dc4885-f7eb-4b8d-930f-7344db72b5f7"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "2adac114-4fbd-48ee-aa6e-f74fb4a59819",
                            Email = "B1809949@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809949@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809949",
                            PasswordHash = "AQAAAAEAACcQAAAAEJuIamm/TnCdvfQkOp9by0Dzhte1D1jbdDyvb0BBWNdhcolXha1QbPs9B6iCi9lHFg==",
                            PhoneNumber = "098177446149",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ee54ace6-7b30-4042-95d2-b97d03297f32",
                            TwoFactorEnabled = false,
                            UserName = "B1809949"
                        },
                        new
                        {
                            Id = new Guid("4d2b4f64-2d07-4d55-b46e-eb4a54774e70"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7fb67a1d-aaad-4b89-a70d-3cdd01b12ed5",
                            Email = "B1809950@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809950@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809950",
                            PasswordHash = "AQAAAAEAACcQAAAAEHnn6XUPxpSvdvH4ci98h3eZnaCPYrk8iAYpVghDH+pJIpbwG0LLpkSg1mOzNggqFA==",
                            PhoneNumber = "098177446150",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "926aa790-80ea-45f5-a5bc-7c8c6a320770",
                            TwoFactorEnabled = false,
                            UserName = "B1809950"
                        },
                        new
                        {
                            Id = new Guid("3d44ceab-8216-47bf-90c1-b1ac5607ebc4"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "1536cbe8-9382-415a-ac39-ad5217d0f777",
                            Email = "B1809951@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809951@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809951",
                            PasswordHash = "AQAAAAEAACcQAAAAEItI+BQ6509rLsm6xE//da4g/GVAOXlxRJXcaK2bo2bSP2UrzG6OpsJhLirSirGhag==",
                            PhoneNumber = "098177446151",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ed7ae504-7882-4f43-ad8b-6e5485bd0816",
                            TwoFactorEnabled = false,
                            UserName = "B1809951"
                        },
                        new
                        {
                            Id = new Guid("abc87ddc-4d6f-4bab-8673-1b72f6ecec91"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "be2f9a86-82f3-4825-9d4e-bc381452fe91",
                            Email = "B1809952@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809952@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809952",
                            PasswordHash = "AQAAAAEAACcQAAAAEDeXTFkM/l9pnp4dCEqfQfBz2Wzq5nrdXcew4aIIjMWzD/T6M8N8DXLJG2fJ1V9AdQ==",
                            PhoneNumber = "098177446152",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "aaa823ea-28a1-4fcd-9154-cd3cb50f23c9",
                            TwoFactorEnabled = false,
                            UserName = "B1809952"
                        },
                        new
                        {
                            Id = new Guid("5c327df4-b6f0-4b22-bfab-2a37b914127a"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d2e2d884-db73-4ebd-b38f-5efc527ba7c5",
                            Email = "B1809953@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809953@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809953",
                            PasswordHash = "AQAAAAEAACcQAAAAEDpvpN1EfblP3tEo3jVQVjZ564972R7BPMcs2WFKQqtaOVPZBSrS1PrhB830ZUT3Eg==",
                            PhoneNumber = "098177446153",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "aa96979b-5405-4624-a3ef-43b6fe5d9e89",
                            TwoFactorEnabled = false,
                            UserName = "B1809953"
                        },
                        new
                        {
                            Id = new Guid("bd94c7d1-68d8-4447-9654-0d820a8ccc69"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "17a74006-f0ad-4c4f-8939-8581bf7aaf05",
                            Email = "B1809954@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809954@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809954",
                            PasswordHash = "AQAAAAEAACcQAAAAEAvUrhQn75Wkicaj2KVzykbJnBnhQnubcHJ+Sc42/g2hgrYd8e00dM136x1tEbUD0w==",
                            PhoneNumber = "098177446154",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "bac2bf1c-3a1f-4983-a0e0-fa98defcd35a",
                            TwoFactorEnabled = false,
                            UserName = "B1809954"
                        },
                        new
                        {
                            Id = new Guid("723fb475-8c5f-45a6-8049-b1a34ba36bf0"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "21b3e92e-1ec0-4f54-9b78-e8c54baaad99",
                            Email = "B1809955@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809955@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809955",
                            PasswordHash = "AQAAAAEAACcQAAAAEB1u2kvrpTL0POHlko9O6Z715Wf7Vl0PWHGFVy4DKzlgyHnqGoBpyDWpOvTJ6WIHtA==",
                            PhoneNumber = "098177446155",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b2c59a12-f643-494e-8821-435dedba77c8",
                            TwoFactorEnabled = false,
                            UserName = "B1809955"
                        },
                        new
                        {
                            Id = new Guid("bd1f6efa-1629-48fe-9ec9-9f03e81d6117"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ea185389-c3b6-42d3-8ba5-4b02eda6273a",
                            Email = "B1809956@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809956@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809956",
                            PasswordHash = "AQAAAAEAACcQAAAAEKuqF4JKMzIaWZ9wqOo9qqnjZJvyQW0x/0Cs3/UmLpqMSP4igk1Qvo2DhCFIFKeHpw==",
                            PhoneNumber = "098177446156",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a9e2bb30-0dd3-4797-ba59-80e45cd63a24",
                            TwoFactorEnabled = false,
                            UserName = "B1809956"
                        },
                        new
                        {
                            Id = new Guid("a0efc4f1-e304-4c3d-ac7c-8ea7912c3500"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e12d98ef-15f7-425f-a3d9-38fcbbbc30cb",
                            Email = "B1809957@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809957@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809957",
                            PasswordHash = "AQAAAAEAACcQAAAAEDVvTMOIy1/OQ2I+WNTpEaZG+r/W1NE+0ODcXoyvfgz//mVYwUY+z9CgPwAt1U40/g==",
                            PhoneNumber = "098177446157",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0d0a6d6e-cc88-4670-9709-55cb53ea3123",
                            TwoFactorEnabled = false,
                            UserName = "B1809957"
                        },
                        new
                        {
                            Id = new Guid("2f930c21-4d2b-48e6-9410-493e7200a868"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dbc3e846-d9a9-42b0-bafb-011bc91fe6dd",
                            Email = "B1809958@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809958@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809958",
                            PasswordHash = "AQAAAAEAACcQAAAAEIv6oAMvbeEf2fg4wyKRrrKFQ7+5gaLOmOgWcKA2HEFQlum0HC6Mh7uw1J1RCKxH6w==",
                            PhoneNumber = "098177446158",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b9440de7-80b4-48b2-ab35-66131b6a9fe3",
                            TwoFactorEnabled = false,
                            UserName = "B1809958"
                        },
                        new
                        {
                            Id = new Guid("e0ee13a6-a833-40a6-b8a4-a7a021ba3338"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "efefcd1e-5fa4-41d3-ad9a-a7dd4fb4f2f2",
                            Email = "B1809959@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809959@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809959",
                            PasswordHash = "AQAAAAEAACcQAAAAEFbwEUGHuqow0NN0qcB/fcJaSov/Qe0Bmdcg/u3Wp+rp5Q5+On+qoA9ivEv7+dmRkQ==",
                            PhoneNumber = "098177446159",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "143cc7e5-22a7-4d08-aa4c-aae89424afe0",
                            TwoFactorEnabled = false,
                            UserName = "B1809959"
                        },
                        new
                        {
                            Id = new Guid("25711150-b78e-4046-a858-1f526eae5443"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5ab319d6-eeec-4bba-9bb1-68eef878d6d1",
                            Email = "B1809960@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809960@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809960",
                            PasswordHash = "AQAAAAEAACcQAAAAEPutnKmD9o32BmkgkoJQRUxVhau3fRhmNuIr0KYf+yY6H6gyO9eqSNp46yDJPMFxyA==",
                            PhoneNumber = "098177446160",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d1ac081a-eef1-45ae-bd62-0a3385010b9a",
                            TwoFactorEnabled = false,
                            UserName = "B1809960"
                        },
                        new
                        {
                            Id = new Guid("4aa94747-b592-4fea-a74d-df048dace220"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "05c6b0dc-a4e9-431e-aae0-071d0ed6404e",
                            Email = "B1809961@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809961@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809961",
                            PasswordHash = "AQAAAAEAACcQAAAAEKlEgHDEn6xQ8sAOXC1cZRNhml0YIWvWR/OED3/8AsTFU9JE6Zs4mJYIpPgBhNbJpw==",
                            PhoneNumber = "098177446161",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ff1087be-f35b-44f2-985b-00de1484be28",
                            TwoFactorEnabled = false,
                            UserName = "B1809961"
                        },
                        new
                        {
                            Id = new Guid("257a18c5-d271-43f1-b209-730e310cffce"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "29b25480-d028-401e-9ada-54bc755a897b",
                            Email = "B1809962@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809962@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809962",
                            PasswordHash = "AQAAAAEAACcQAAAAEOF21BICznqmo/R0cqh+Gr+ULKnX66G5qFcCKWSOxnyO9MBk6gRAlZptCOHvrkq8oA==",
                            PhoneNumber = "098177446162",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4aaf2e31-f33c-4d3c-833b-9bd583608f67",
                            TwoFactorEnabled = false,
                            UserName = "B1809962"
                        },
                        new
                        {
                            Id = new Guid("528fde9f-b7e9-41a3-867a-a23bcf1c9b21"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7c8b28d3-cb18-4e39-b976-8f1d048f5fb3",
                            Email = "B1809963@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809963@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809963",
                            PasswordHash = "AQAAAAEAACcQAAAAEIFnylw5jzYeYu+8SbZBMobnspcv8wuCV61Ecvg6e89NO3dzxyd6p4SyfNAA4rCoNA==",
                            PhoneNumber = "098177446163",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "fd799305-c952-4bb5-b6f4-c8f57c0f25bd",
                            TwoFactorEnabled = false,
                            UserName = "B1809963"
                        },
                        new
                        {
                            Id = new Guid("9a645d43-0bc2-4008-a790-1a6d3b996543"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "71fa6f7e-1371-445b-a345-aa197a40e39f",
                            Email = "B1809964@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809964@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809964",
                            PasswordHash = "AQAAAAEAACcQAAAAEHHAv4u35oXHtDzFQjo4HfBwKQ7wEey4TqhbdH5LFUePHRQElww8trUjv+8roTNeaw==",
                            PhoneNumber = "098177446164",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7d758e1b-3c11-459b-a4fd-00a22f571e1e",
                            TwoFactorEnabled = false,
                            UserName = "B1809964"
                        },
                        new
                        {
                            Id = new Guid("882dc940-9666-4e52-82b1-83f4b2bb603f"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d2668696-80a6-45e6-9cb4-5d2e6e4b9cb5",
                            Email = "B1809965@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809965@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809965",
                            PasswordHash = "AQAAAAEAACcQAAAAEHjey+2cacgtybMWJSXd1K4nZefLP90hAwHN7cqSTwNwY1hTIOWSAgWd7lgzjoDuTg==",
                            PhoneNumber = "098177446165",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "87e75b3e-45c7-4b02-a691-c9ef4927b193",
                            TwoFactorEnabled = false,
                            UserName = "B1809965"
                        },
                        new
                        {
                            Id = new Guid("86596b57-de69-4576-a2f0-f6896bea0601"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "442a3470-6692-4f2f-b727-683fd5480f6c",
                            Email = "B1809966@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809966@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809966",
                            PasswordHash = "AQAAAAEAACcQAAAAEJFas0RGEK6s4/9FsHOsZBemVLzLxt+WBGpctyj31xYpUFi/mwF5AAxXc6uFM2vvqg==",
                            PhoneNumber = "098177446166",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1478a889-da82-49af-8757-8f545156a774",
                            TwoFactorEnabled = false,
                            UserName = "B1809966"
                        },
                        new
                        {
                            Id = new Guid("fe4c6c23-0cfc-4b25-aeb0-d4c160c48306"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "bbee6ae1-f3fb-4d34-a8f1-ca2bf5bdc121",
                            Email = "B1809967@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809967@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809967",
                            PasswordHash = "AQAAAAEAACcQAAAAEGXNH6EiTzRpcH0/no2I4YD1oqb9DrwkanzSENQeX5Kl1pVJWULa+Bx0SA91r0paYg==",
                            PhoneNumber = "098177446167",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7d0e79d8-245f-4f80-9e15-70b032564c1f",
                            TwoFactorEnabled = false,
                            UserName = "B1809967"
                        },
                        new
                        {
                            Id = new Guid("bb8fad11-9838-42f7-97b0-99e56ff1dced"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c5d5eb6d-2292-48b9-ade3-aa535f8f3fc8",
                            Email = "B1809968@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809968@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809968",
                            PasswordHash = "AQAAAAEAACcQAAAAEN4AYfpRzcMiz6IHwuIFGwPtcuJbVZ0AoE3SSW8wDAHf8roYCXcsZtB6u6VlWQKA4w==",
                            PhoneNumber = "098177446168",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6b3492c8-f926-4fd6-855d-7b975435111b",
                            TwoFactorEnabled = false,
                            UserName = "B1809968"
                        },
                        new
                        {
                            Id = new Guid("4f267353-b003-4b0c-90ff-d20f881da99a"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "8e657961-5df8-4043-906c-fb76ba127a38",
                            Email = "B1809969@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809969@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809969",
                            PasswordHash = "AQAAAAEAACcQAAAAEDQx9FK9JWDEw1sD6fFsKvyaiFZH4PsM5qNzO4gkr+eGeHHexcqMZfA2comNsjay0Q==",
                            PhoneNumber = "098177446169",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "da437226-3e79-441f-bfac-74abe0cde696",
                            TwoFactorEnabled = false,
                            UserName = "B1809969"
                        },
                        new
                        {
                            Id = new Guid("09a1b152-971e-4a25-b550-85439e305fe5"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5afef087-f75c-47d8-b76a-5e769ec5e524",
                            Email = "B1809970@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809970@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809970",
                            PasswordHash = "AQAAAAEAACcQAAAAEAjspVWCrCvdKa8ErnKV4UqHSTnwPTtu3/7QB4/tYkRMABRuwbjMGAR6mXZYiA/atw==",
                            PhoneNumber = "098177446170",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5601e83e-6245-4897-9627-115bc9235984",
                            TwoFactorEnabled = false,
                            UserName = "B1809970"
                        },
                        new
                        {
                            Id = new Guid("0afc92af-e16b-4086-bbb1-a7bb3fb0a254"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "1c6b0a0a-85c4-42d2-b054-df41ce3f0255",
                            Email = "B1809971@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809971@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809971",
                            PasswordHash = "AQAAAAEAACcQAAAAEMQFsRsT8eiXtUlB6SiIWEdFYX96dbbKDMD4Y0WCsEpmmAPXH3YGE1JyCG/Bt6YUOQ==",
                            PhoneNumber = "098177446171",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "93f15c8d-c095-4501-88a4-d6b2e45b4634",
                            TwoFactorEnabled = false,
                            UserName = "B1809971"
                        },
                        new
                        {
                            Id = new Guid("4187d623-6d50-4db8-8075-7cb978d0cddf"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "461cc53f-1f67-4a80-9e22-7babacec4dbf",
                            Email = "B1809972@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809972@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809972",
                            PasswordHash = "AQAAAAEAACcQAAAAEDM3ImoFK9xMo/jTCqxmYXfTqXXw1ONjf/a+IQKDkHU65jLaDECIIDmXmBOgapleDA==",
                            PhoneNumber = "098177446172",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b578ab1b-d3da-4d0d-8247-f48c4dd51f95",
                            TwoFactorEnabled = false,
                            UserName = "B1809972"
                        },
                        new
                        {
                            Id = new Guid("522e0e93-008f-4d45-8ec8-1e370538edf4"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "80859b91-1154-4342-9bea-9c2befdf5307",
                            Email = "B1809973@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809973@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809973",
                            PasswordHash = "AQAAAAEAACcQAAAAECDBALdIV++cyYQmfj94WQvgwko46d4uNNNSvpPCT4L6jVcTH5mjHuf+5EapybK9aA==",
                            PhoneNumber = "098177446173",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "50f6203d-cc1f-47c4-ac51-ee67ec2a2812",
                            TwoFactorEnabled = false,
                            UserName = "B1809973"
                        },
                        new
                        {
                            Id = new Guid("ae14c8c6-f241-493d-8a7f-ef9a3b35894c"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "13b69436-9ed1-4862-93fc-04b4c6a461d3",
                            Email = "B1809974@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809974@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809974",
                            PasswordHash = "AQAAAAEAACcQAAAAEA/u9TQ9yOm1bfsQmzUERbma377e743dw8wr5ljVEIUq5pIJL5A6jruFFwQcSfvBqA==",
                            PhoneNumber = "098177446174",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0256625d-9bae-41dd-b3ef-c62be1cdbecc",
                            TwoFactorEnabled = false,
                            UserName = "B1809974"
                        },
                        new
                        {
                            Id = new Guid("6713249c-06ec-42af-9003-e1e9f684cb7e"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "01b0ec2d-e59f-41d0-9549-d153dc03101e",
                            Email = "B1809975@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809975@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809975",
                            PasswordHash = "AQAAAAEAACcQAAAAEP0MDIsQRTMVn/4wSzc/t0VqhAVXRdFtXrVXR+l9Ht4kvB+t1xl2+O1V5pMOwlNrYQ==",
                            PhoneNumber = "098177446175",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f88a85fa-0ae4-4faf-9505-c6189a37f30e",
                            TwoFactorEnabled = false,
                            UserName = "B1809975"
                        },
                        new
                        {
                            Id = new Guid("05b854a7-dc47-4391-a239-f08becee68b2"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "57559a47-c589-4430-8332-005cd398428c",
                            Email = "B1809976@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809976@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809976",
                            PasswordHash = "AQAAAAEAACcQAAAAEGfwt8N/iUEMCG/ENbSseAjInZ430UN/8kULFXuq9sPUuxrxvvJWovxYPOyMxaDqyg==",
                            PhoneNumber = "098177446176",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "46475b81-de5e-49ab-92df-30d346f73526",
                            TwoFactorEnabled = false,
                            UserName = "B1809976"
                        },
                        new
                        {
                            Id = new Guid("285acc3e-34be-48c4-b4ed-1c5135197cd2"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "346b642d-0e4c-474b-9b4e-f64473252932",
                            Email = "B1809977@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809977@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809977",
                            PasswordHash = "AQAAAAEAACcQAAAAENPpLNqhbI59eqqs+fwsPf0+W8FXkqSKRoCi60Ps04fh1peOcYAbLK/gP69dKo1iUA==",
                            PhoneNumber = "098177446177",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "fac64388-7756-4299-946f-4cf635a2ff4b",
                            TwoFactorEnabled = false,
                            UserName = "B1809977"
                        },
                        new
                        {
                            Id = new Guid("59640aa2-4d97-46a9-b27e-aabc7d0c8574"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0b4b9f3a-8498-47d0-9153-569d7418364a",
                            Email = "B1809978@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809978@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809978",
                            PasswordHash = "AQAAAAEAACcQAAAAEGIWhxJ9yST97Gae+ySurXECyg/HMXaj26YoOf0kB7x4tBYQ0Q5zTBjUp+tYPnMVbw==",
                            PhoneNumber = "098177446178",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "33068933-4fa1-4b3c-b2a6-f34378191aec",
                            TwoFactorEnabled = false,
                            UserName = "B1809978"
                        },
                        new
                        {
                            Id = new Guid("29d46f1f-212a-4bc6-848a-ef55c142d330"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "bbbcb67b-9928-47dc-87ed-b0016a94e39f",
                            Email = "B1809979@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809979@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809979",
                            PasswordHash = "AQAAAAEAACcQAAAAECnmn0u7byy5TZ2ZdBrEQ3yRHTQx7cJrQhf7GZ/yw+u57+vWC5g9fHQp6inTw6tzvw==",
                            PhoneNumber = "098177446179",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "aaad842f-a548-4ee7-9551-18d1955b601b",
                            TwoFactorEnabled = false,
                            UserName = "B1809979"
                        },
                        new
                        {
                            Id = new Guid("e1d51102-e29f-4ce2-9a9a-523ededa0f9d"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5c3c986f-121a-4fde-a373-03054f50318f",
                            Email = "B1809980@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809980@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809980",
                            PasswordHash = "AQAAAAEAACcQAAAAENi5PSwmvrMgHKxEBg83CKAfnVYctVUm3+mJswEPuuYC6hL45z21nZI6CI0QM7iCXw==",
                            PhoneNumber = "098177446180",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ae7b6571-d0dc-4b96-b7e9-ebc1f5654dd0",
                            TwoFactorEnabled = false,
                            UserName = "B1809980"
                        },
                        new
                        {
                            Id = new Guid("6794e692-75be-4592-a787-03eb61a336a8"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dd6176dc-bc2b-4f20-a646-10d316b260bf",
                            Email = "B1809981@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809981@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809981",
                            PasswordHash = "AQAAAAEAACcQAAAAEIzLJk7DyGxE6/rIzv3+/qupEIL2+8QCHBEA7C4aq9VVlTfRqPN5VBRhprX7KZ668g==",
                            PhoneNumber = "098177446181",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0ceead2a-3261-4bdf-b91b-769b02199dd0",
                            TwoFactorEnabled = false,
                            UserName = "B1809981"
                        },
                        new
                        {
                            Id = new Guid("9cdce684-615e-47be-a1bb-1992bb1a63a5"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "14301a96-88f0-4c42-8667-1492ece99aae",
                            Email = "B1809982@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809982@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809982",
                            PasswordHash = "AQAAAAEAACcQAAAAED1z/Yop4BYrdZmhwF97fvG1gBqT5NEO3u/kCM8tVeLNfA3u3eVe/Z3lpVcbTvSamw==",
                            PhoneNumber = "098177446182",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "40f13b36-9958-4e90-98f3-f9e200fedc83",
                            TwoFactorEnabled = false,
                            UserName = "B1809982"
                        },
                        new
                        {
                            Id = new Guid("0803dc46-770f-461c-9e73-94deffbc55d7"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ac30a888-09e7-4228-a9d6-b0f601933758",
                            Email = "B1809983@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809983@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809983",
                            PasswordHash = "AQAAAAEAACcQAAAAEFqVMFMAPjdC7AaGTiUqvGU53fx7spK+CB8mkvl+pqy0lbyYgbCAz4KRI5adUO3t2w==",
                            PhoneNumber = "098177446183",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a5d4c373-370f-4a9c-bc09-023417063276",
                            TwoFactorEnabled = false,
                            UserName = "B1809983"
                        },
                        new
                        {
                            Id = new Guid("e4dc4f3b-a64e-48a2-858b-6ddeea64d0bb"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "2b27d153-49ea-460d-bdd5-2f0b5cac5655",
                            Email = "B1809984@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809984@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809984",
                            PasswordHash = "AQAAAAEAACcQAAAAEKtq/K1qWBBemEsq7MXs5Zoixtzj5m9Z29FLKjTE7Bqtq5B3t2orTBTerznUvkYGJQ==",
                            PhoneNumber = "098177446184",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "30d4171a-97b2-4a13-98fb-7587b64344eb",
                            TwoFactorEnabled = false,
                            UserName = "B1809984"
                        },
                        new
                        {
                            Id = new Guid("d08adf6b-297c-414b-bedb-c1a3886fd99d"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ea9cab7c-f9ca-4ae5-a160-d055c2174456",
                            Email = "B1809985@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809985@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809985",
                            PasswordHash = "AQAAAAEAACcQAAAAEBPGG42uQxL/CTm2rU9f/7rSWv7qmRHuFsz/ljJpGo6dnsXosxBuXW2+3CHRuclqSQ==",
                            PhoneNumber = "098177446185",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e30be272-ea82-4852-8d62-52495afa044a",
                            TwoFactorEnabled = false,
                            UserName = "B1809985"
                        },
                        new
                        {
                            Id = new Guid("214abb3d-1d2c-4f84-8d1d-3f4710891cdd"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "caa5d8ef-0084-4ff3-baa4-6ab6f2e2847e",
                            Email = "B1809986@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809986@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809986",
                            PasswordHash = "AQAAAAEAACcQAAAAECP/hzBQLtPwPqHDVuzPWbVNExoKg3vK/cV95PKO+hT8TZ5smGN2axydcgyZqzjFAQ==",
                            PhoneNumber = "098177446186",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b7725288-0c63-4b12-a78c-26fe3f1efaf3",
                            TwoFactorEnabled = false,
                            UserName = "B1809986"
                        },
                        new
                        {
                            Id = new Guid("8ac6839e-3dc9-447e-ac60-675f2ceb7b92"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7c23797e-f49c-413e-9b53-4946b9dad17c",
                            Email = "B1809987@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809987@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809987",
                            PasswordHash = "AQAAAAEAACcQAAAAELIBFYAdcECFCBlUtpgdLWr6iD0Phg9KLsEJMSueeO5jq7nTRLXDwNFZ4De+Ounv4g==",
                            PhoneNumber = "098177446187",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "46c07ff0-a3ce-4276-850d-31085062c3f4",
                            TwoFactorEnabled = false,
                            UserName = "B1809987"
                        },
                        new
                        {
                            Id = new Guid("f344eec1-c963-47fa-9dbb-496cc6931ef6"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9f87300a-0397-473c-a36b-5f6f55b3e3d4",
                            Email = "B1809988@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809988@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809988",
                            PasswordHash = "AQAAAAEAACcQAAAAEBXkwxHg4AUYqEV1Rhp26LXhS6nRVl5/R0jHuPx0Vt+VlVndo1qLXHjWCvV3Zva8eg==",
                            PhoneNumber = "098177446188",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a7436f6f-76c9-4087-b434-aab93ecd1d47",
                            TwoFactorEnabled = false,
                            UserName = "B1809988"
                        },
                        new
                        {
                            Id = new Guid("a2424871-33a7-4936-9bec-e893532661d0"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "01d1d59f-72f7-4be0-a6d4-4ca90134c688",
                            Email = "B1809989@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809989@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809989",
                            PasswordHash = "AQAAAAEAACcQAAAAEDFii+SKmDJ0kQDX5/F/RPRP8rryXsWzbsKPROFQJqnC+5lb2ODe1CX7g9NnWYhgww==",
                            PhoneNumber = "098177446189",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "792c88f5-cd79-4a8e-adbd-daa35d49b609",
                            TwoFactorEnabled = false,
                            UserName = "B1809989"
                        },
                        new
                        {
                            Id = new Guid("8139add9-3d31-412c-9aea-02c27e18e3a5"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "570cdc05-f65b-4124-9b95-67c6d60e047c",
                            Email = "B1809990@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809990@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809990",
                            PasswordHash = "AQAAAAEAACcQAAAAEB4mnQMh9cv4qc3oQT9MU1nWNu+bVqshAd81C6gHHt0BIJfnqjaEpCOZO4aaLCrG8g==",
                            PhoneNumber = "098177446190",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f7df5e40-8ced-4b04-8842-ff6ba76c870b",
                            TwoFactorEnabled = false,
                            UserName = "B1809990"
                        },
                        new
                        {
                            Id = new Guid("9279047b-0319-4c2e-a13b-65e247f027a8"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "35984fdc-dd3f-4221-82c1-7ddfd8bd886d",
                            Email = "B1809991@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809991@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809991",
                            PasswordHash = "AQAAAAEAACcQAAAAECIHcrwanEqnUL2UBstGSVYvRuSdVOy1RdxFGh9RUCyCNTdVl8CV1c+EWMpQnYyCVQ==",
                            PhoneNumber = "098177446191",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ea373929-6e40-48b3-9fda-0ee3b66bf4f6",
                            TwoFactorEnabled = false,
                            UserName = "B1809991"
                        },
                        new
                        {
                            Id = new Guid("8c9abf69-7fd0-41ee-adda-afc80d39c024"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fabf67d0-2b6b-48a9-a2fa-c5e7ca31efa3",
                            Email = "B1809992@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809992@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809992",
                            PasswordHash = "AQAAAAEAACcQAAAAEEQbNIL73j6OhLrGHNwDzZEgck/gve7qizHMq9+wTi8v3a1b8KvIxDB4566OJxR80w==",
                            PhoneNumber = "098177446192",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c0944218-252e-4e46-a220-e80ceab668b6",
                            TwoFactorEnabled = false,
                            UserName = "B1809992"
                        },
                        new
                        {
                            Id = new Guid("7c124e41-d330-4985-86ca-d52f16926e35"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b6b9fd09-f7a7-40d2-9a38-f61d877a693f",
                            Email = "B1809993@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809993@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809993",
                            PasswordHash = "AQAAAAEAACcQAAAAEM0jOzENZjgTWeRcxXe7QyTHwSBMzXeBf87C0RmAdX9oX4Xo2B4/iQeeM4jdVmFECQ==",
                            PhoneNumber = "098177446193",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "69a33e3d-6215-4919-9313-14ca492b3f18",
                            TwoFactorEnabled = false,
                            UserName = "B1809993"
                        },
                        new
                        {
                            Id = new Guid("0f799f73-41e5-400c-905b-4fa2f680ba95"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "2827aa18-8017-46a7-b67a-1600a55c0bb5",
                            Email = "B1809994@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809994@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809994",
                            PasswordHash = "AQAAAAEAACcQAAAAEFRrcaiWzpPhI3vWYfBpRstm84nIXrHIGivFWyzyOYaMMoUS5gjdiyvUDArB6D9bTQ==",
                            PhoneNumber = "098177446194",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3f594f5e-87a8-424d-9d9d-4e05411a20b2",
                            TwoFactorEnabled = false,
                            UserName = "B1809994"
                        },
                        new
                        {
                            Id = new Guid("fa043aa7-470a-4337-9398-9e2801455cb2"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "20f3fe3b-7e5b-4601-b1b5-b573f49cee0e",
                            Email = "B1809995@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809995@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809995",
                            PasswordHash = "AQAAAAEAACcQAAAAECD++S4EX7Ar+EtyIc6KeGsfpzom7yarKI3o+HPr1b7Hf4EPjNUxJ4I0cbgjXEOwww==",
                            PhoneNumber = "098177446195",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "caa983f4-b2bc-4153-90f6-cff8d58f3a7f",
                            TwoFactorEnabled = false,
                            UserName = "B1809995"
                        },
                        new
                        {
                            Id = new Guid("b157360a-7d09-4864-8ca6-9a9c85c7eb2b"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "2272af61-28eb-4f20-b25f-51e750d1608b",
                            Email = "B1809996@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809996@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809996",
                            PasswordHash = "AQAAAAEAACcQAAAAEP8atWRnKgzJ+UxZqj3gc9zDPYSJ3xxnRilpzn0hUSpid2bOIwzWNN5yUv2sHAov9g==",
                            PhoneNumber = "098177446196",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3bd1c275-1714-4533-92e5-46e602366633",
                            TwoFactorEnabled = false,
                            UserName = "B1809996"
                        },
                        new
                        {
                            Id = new Guid("ef18dd97-1744-4260-9ee4-2a6eadfb36b9"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d4dc3582-c9a7-4277-9f88-69cf6c6ec37a",
                            Email = "B1809997@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809997@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809997",
                            PasswordHash = "AQAAAAEAACcQAAAAEFU0P668FGELdqWVw9VrJ+AYpMfg+Lv6Rg9QkOLQTN5iBSUJbEcd9h8gT3VBsmZyXA==",
                            PhoneNumber = "098177446197",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f80d4e51-4c42-4c3a-8043-5bf899fa6bba",
                            TwoFactorEnabled = false,
                            UserName = "B1809997"
                        },
                        new
                        {
                            Id = new Guid("e90ecdae-8445-47dc-be63-18ca9abac388"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "61e1e63b-c60d-4daf-9aee-53def91c34a1",
                            Email = "B1809998@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809998@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809998",
                            PasswordHash = "AQAAAAEAACcQAAAAEEOXr9KOQGeffTmlY1Qvn+8zRfL5PAnr5zMO8fiHENBYbDr6CLYVTZ0O17CZAcB5wg==",
                            PhoneNumber = "098177446198",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "842ffd03-4797-4902-addd-e6701d137a5b",
                            TwoFactorEnabled = false,
                            UserName = "B1809998"
                        },
                        new
                        {
                            Id = new Guid("df1a75f0-b38e-40fd-be92-d7dacf942841"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7e0dff5c-b5c9-4c1a-a7eb-ade774acf53b",
                            Email = "B1809999@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B1809999@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B1809999",
                            PasswordHash = "AQAAAAEAACcQAAAAELgj+hxmjSZZ8QuDroguZeiI++jGkkp/Vieu/6ddAXG1yZH0b1VMi8hIlNsn2HmbJQ==",
                            PhoneNumber = "098177446199",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "90897949-6c97-4ec5-9da3-ec9fe52cbad7",
                            TwoFactorEnabled = false,
                            UserName = "B1809999"
                        },
                        new
                        {
                            Id = new Guid("4b85d614-ed82-43da-a408-86ddbfa12e19"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "66af964d-a582-4b6a-9c9f-44924962cf5c",
                            Email = "B18099100@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099100@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099100",
                            PasswordHash = "AQAAAAEAACcQAAAAEC1VxXSRb2kiRkfU0FBxzxLHRlLS5N6XX2LU6SzxRNStGezse+e+cF1j9M4eiVPZ1w==",
                            PhoneNumber = "0981774461100",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b69b9af6-727c-479c-a3df-4db7b8b2fb53",
                            TwoFactorEnabled = false,
                            UserName = "B18099100"
                        },
                        new
                        {
                            Id = new Guid("b10e29d4-af91-4ef5-a7ca-76bad4515fb3"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "77e7f37e-6b6c-437e-8652-d33b2f8bfadb",
                            Email = "B18099101@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099101@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099101",
                            PasswordHash = "AQAAAAEAACcQAAAAEFNPdaKTdggfDrHE80yuZSFNKraK+IpSAcYcW2Y8WLKTiIk487ecdmPbyUvL1d/n8A==",
                            PhoneNumber = "0981774461101",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3cd78e4e-df93-4e7c-b1e5-163654ada8b3",
                            TwoFactorEnabled = false,
                            UserName = "B18099101"
                        },
                        new
                        {
                            Id = new Guid("e85534cd-6c64-4c66-ab46-10aa135105b0"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "659308fc-2790-4118-b14b-497d1e74cca6",
                            Email = "B18099102@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099102@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099102",
                            PasswordHash = "AQAAAAEAACcQAAAAEPmIpamXXEWK5m1Hr/wjnliQ9ShtV55xAaxxwe1pJFXNav6m1sunIfVWyG6twt9jrg==",
                            PhoneNumber = "0981774461102",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "159bf080-f025-4f9b-bd42-7653180d6eb2",
                            TwoFactorEnabled = false,
                            UserName = "B18099102"
                        },
                        new
                        {
                            Id = new Guid("3ad8c1bf-c652-4ae4-97b1-47fd81de44ce"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6ae273bd-e21a-4127-8879-0875098ef910",
                            Email = "B18099103@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099103@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099103",
                            PasswordHash = "AQAAAAEAACcQAAAAEEe2CQkkxSS1MkL2PSvZ5nNcJ9QZOBdpwWUec8OCBnISH4RJy5ThzCQl8duR7rQFvg==",
                            PhoneNumber = "0981774461103",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "949af9e0-4a17-43b6-a7c7-67a0ff162ac1",
                            TwoFactorEnabled = false,
                            UserName = "B18099103"
                        },
                        new
                        {
                            Id = new Guid("bd406a97-75b7-4ce6-8177-c813372358a9"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "2037db2b-c41c-4917-ac47-d7cc8a72f87b",
                            Email = "B18099104@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099104@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099104",
                            PasswordHash = "AQAAAAEAACcQAAAAEPgM/wb3369vQ2CUpCEaJUuzkc9Sx7o1UqYEr1MggHM67lgJUlVZmS4lRUpEinPyKA==",
                            PhoneNumber = "0981774461104",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4a639ff2-5c76-4ecc-9058-5bac192ce27a",
                            TwoFactorEnabled = false,
                            UserName = "B18099104"
                        },
                        new
                        {
                            Id = new Guid("fee5c108-c51b-48a8-b65b-32bf20c05d2f"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b20db30d-b796-4447-ad17-34fa2f57b3d0",
                            Email = "B18099105@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099105@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099105",
                            PasswordHash = "AQAAAAEAACcQAAAAEPq/cKMQhm/A/5OmVxS7d35KRY4p6yKn1b6GYOufHcG6iVzeiUyIx+uWb8xpyAoZvg==",
                            PhoneNumber = "0981774461105",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1d0661b6-3c64-4152-8d3d-81ec9e779faf",
                            TwoFactorEnabled = false,
                            UserName = "B18099105"
                        },
                        new
                        {
                            Id = new Guid("c0dbe0c0-f0c3-4843-9d17-295d90644139"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "94be1044-000b-44db-90e3-c5a5576e4800",
                            Email = "B18099106@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099106@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099106",
                            PasswordHash = "AQAAAAEAACcQAAAAEC/bajwpCOCIKTAxQ4oLVNnXXN9/WtFdpDf6iysu+t8kjS55aJ7zBMWg0i0tsq7+fg==",
                            PhoneNumber = "0981774461106",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "2c5e50b9-995b-4e10-b635-5475fafccbfa",
                            TwoFactorEnabled = false,
                            UserName = "B18099106"
                        },
                        new
                        {
                            Id = new Guid("78bcc23e-c49f-47ba-a5c0-2bb504be62e1"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7e7471ee-5f9d-4c1f-be28-ed35790b9690",
                            Email = "B18099107@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099107@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099107",
                            PasswordHash = "AQAAAAEAACcQAAAAEF5a4P/WdGoqGkaruDbehiIyPnBcxaTx0mBqmBopJUu/izz/uAwvQu6OAujJGFVNmg==",
                            PhoneNumber = "0981774461107",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4f6b54d0-cb5b-4c74-b63c-b00cbfa5cf0a",
                            TwoFactorEnabled = false,
                            UserName = "B18099107"
                        },
                        new
                        {
                            Id = new Guid("3e727ea2-c051-4eec-8823-830ad7188b3a"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "62f98aaf-a15f-445e-9b17-e6d103b1e645",
                            Email = "B18099108@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099108@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099108",
                            PasswordHash = "AQAAAAEAACcQAAAAELu6EoVmsCnk6xlsADNqLTFFHaixoItvjjT02jZctfrWO6IGB7HdlCFVPvghG7SaUA==",
                            PhoneNumber = "0981774461108",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "802c9b41-2763-455e-aa1a-eb4feab19731",
                            TwoFactorEnabled = false,
                            UserName = "B18099108"
                        },
                        new
                        {
                            Id = new Guid("e91e9822-dc84-46a3-baac-b57f3a3c7679"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "74b4a5f9-7d55-4642-b794-3108618d1226",
                            Email = "B18099109@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099109@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099109",
                            PasswordHash = "AQAAAAEAACcQAAAAEHMwpoT8vim59W1OAE/CyBsqlAEsPasFpzFt0DOTWI6KoZVlq2cWkJyC4K76y0DOVA==",
                            PhoneNumber = "0981774461109",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e7743f06-55d8-4880-9ffb-3a4645b15923",
                            TwoFactorEnabled = false,
                            UserName = "B18099109"
                        },
                        new
                        {
                            Id = new Guid("ac11fb96-9e15-4493-85bd-c6a14a615e33"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b2877904-8637-465c-92cf-131acb7e4fb2",
                            Email = "B18099110@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099110@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099110",
                            PasswordHash = "AQAAAAEAACcQAAAAEFCO0HwvKI+rcFY2QdogeMBr5Gqboqw6xj+jlVgYY4cqVMIK+OygE1lJkXTdysoqvg==",
                            PhoneNumber = "0981774461110",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5fe08803-4480-4300-9bc3-4f126d22755b",
                            TwoFactorEnabled = false,
                            UserName = "B18099110"
                        },
                        new
                        {
                            Id = new Guid("4757251e-a13e-4c5a-9a22-02394e7fee19"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "58c48d58-b094-49bf-b3de-e2a6aeac7f7c",
                            Email = "B18099111@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099111@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099111",
                            PasswordHash = "AQAAAAEAACcQAAAAEEoMA1eIcYM8c/rDUIcBNCvc+tOAcwklHExiWINFDpX6K0YVlfk7stdcjxKU/UYOTA==",
                            PhoneNumber = "0981774461111",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9e646d54-bc5a-4f2c-bc98-8c9c18f5e991",
                            TwoFactorEnabled = false,
                            UserName = "B18099111"
                        },
                        new
                        {
                            Id = new Guid("f7fb10b0-6c53-4beb-9318-97de7108bc13"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6d86e335-5bfd-4850-a0fb-19fe6c18cc4d",
                            Email = "B18099112@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099112@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099112",
                            PasswordHash = "AQAAAAEAACcQAAAAENUm3xQypY6wabK+SSFe/yT1u6Kah0xsWzQQDYoayBrm+/bbMJ/xGCllciKfop4J+A==",
                            PhoneNumber = "0981774461112",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "116be113-28da-484b-bb39-bc98bf334197",
                            TwoFactorEnabled = false,
                            UserName = "B18099112"
                        },
                        new
                        {
                            Id = new Guid("05ac7a0c-1055-492f-8731-b5e0a5f434d9"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d1927bf0-f353-4666-930a-712321eea567",
                            Email = "B18099113@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099113@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099113",
                            PasswordHash = "AQAAAAEAACcQAAAAEOl79T0KZdmDlfjiXhoK5Dw4zi6Ly1r2lmcHDfkaqkTxuJKCkDhOEuJ/YXrJdfX+Qw==",
                            PhoneNumber = "0981774461113",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "df81bd5c-196b-43e5-a1a8-99fcffdd70d3",
                            TwoFactorEnabled = false,
                            UserName = "B18099113"
                        },
                        new
                        {
                            Id = new Guid("1b3baea5-cd59-4166-9ed6-feb23a451b82"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dad0a777-c1d5-4176-9dbf-c59dea809a49",
                            Email = "B18099114@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099114@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099114",
                            PasswordHash = "AQAAAAEAACcQAAAAEMx5QjSCDL/148orIma64ELuoNErkJv5QAdH24yMj3pEKD8aSQAcQHvkfpY7RPiIZw==",
                            PhoneNumber = "0981774461114",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "eaa2114a-66c7-44db-82bb-7d208c35dc6c",
                            TwoFactorEnabled = false,
                            UserName = "B18099114"
                        },
                        new
                        {
                            Id = new Guid("4fd9dcca-dda8-444c-b2ba-2772d60cac6c"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "12871880-bfd1-49f8-b723-b50f590c6a3f",
                            Email = "B18099115@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099115@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099115",
                            PasswordHash = "AQAAAAEAACcQAAAAEEfa7EyKxho8bSt8x5iAIS5Fl7K6IAbhqlMU7gcwqaRpHiBEkOKV9RMfJ7Ggc7X8tg==",
                            PhoneNumber = "0981774461115",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d23c8ac7-f430-4273-a790-a4c2e4c785bc",
                            TwoFactorEnabled = false,
                            UserName = "B18099115"
                        },
                        new
                        {
                            Id = new Guid("90a694d2-d5e1-4c8e-a9d4-113f775ccd03"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "bf3fe59c-bd75-4a92-a3f6-1e1b0a8e480d",
                            Email = "B18099116@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099116@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099116",
                            PasswordHash = "AQAAAAEAACcQAAAAEA+v+3d2IUxcDUzuTFhpAZg01sPC5ehuEPbnArZvJsblq2nR3IPlgvct6LO6TA/GrA==",
                            PhoneNumber = "0981774461116",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5aae7e60-d323-4bd0-93f2-abc522605da8",
                            TwoFactorEnabled = false,
                            UserName = "B18099116"
                        },
                        new
                        {
                            Id = new Guid("32f88a33-e861-4dc3-af21-213ed3ac8a80"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "69d91c08-77e4-42db-becb-856cbaeed96f",
                            Email = "B18099117@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099117@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099117",
                            PasswordHash = "AQAAAAEAACcQAAAAENDmISOLjV+ubbxmQfeBOVjT/e43FrfxMII78YBL9jPrBhlutkCpGVTWhujjQIB/pw==",
                            PhoneNumber = "0981774461117",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ad99f82a-62ad-4504-bf61-c2def80a92c8",
                            TwoFactorEnabled = false,
                            UserName = "B18099117"
                        },
                        new
                        {
                            Id = new Guid("e6d2c7ba-035a-4d54-8bb9-00db7e5c6173"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d2110474-b26f-46fc-8788-7cf2af2f58c4",
                            Email = "B18099118@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099118@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099118",
                            PasswordHash = "AQAAAAEAACcQAAAAEM/CvrPYgVdgk2izPdOP9ZFDXU1UDbtIU5P+8Xw7sG9ut4UrCC5WSg3sIeo1mc2HCw==",
                            PhoneNumber = "0981774461118",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "2cbfc43b-e018-4ec3-94ba-67a6d82bc0ca",
                            TwoFactorEnabled = false,
                            UserName = "B18099118"
                        },
                        new
                        {
                            Id = new Guid("e6a497f9-2895-40ab-96a4-1a17c52655a0"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "06d00104-cbbb-435b-a88b-425314fa96d4",
                            Email = "B18099119@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099119@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099119",
                            PasswordHash = "AQAAAAEAACcQAAAAECsLWlmKHach3mpSi/Fd6xNh1Q0WAdw/WvS1zdkVZJD/mV4ndhDeIgQBaRNIAnT0Mg==",
                            PhoneNumber = "0981774461119",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3d913e94-a462-4968-97da-ecff249862d3",
                            TwoFactorEnabled = false,
                            UserName = "B18099119"
                        },
                        new
                        {
                            Id = new Guid("50a3a8dc-d512-4f52-981b-b3942710e174"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4507e3ae-a609-4675-9d71-afb6c50c775b",
                            Email = "B18099120@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099120@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099120",
                            PasswordHash = "AQAAAAEAACcQAAAAEO1HnKpcy3DEzO86mE+ApcVD5aGJAO5FESKCFyKJQGDkCMCAp6lWeB/ysiCjAnUE+g==",
                            PhoneNumber = "0981774461120",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "57f45491-5bd4-44af-b4df-034399f38454",
                            TwoFactorEnabled = false,
                            UserName = "B18099120"
                        },
                        new
                        {
                            Id = new Guid("d0f5a293-eb2c-4df5-8a58-a3134fb8be19"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "88817816-a412-4aeb-b9bd-a515f2525072",
                            Email = "B18099121@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099121@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099121",
                            PasswordHash = "AQAAAAEAACcQAAAAEGoeFNihkcpq1aDLY2pfnXSpr2DG6XXXJded2+2l12ur/BFiiFfhfp6qHzUTU1q6UA==",
                            PhoneNumber = "0981774461121",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "23fcc2b4-8773-40ed-947e-bf9f75c8d6d9",
                            TwoFactorEnabled = false,
                            UserName = "B18099121"
                        },
                        new
                        {
                            Id = new Guid("db77656b-6e0a-49ea-95d1-44d2cfc58558"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "54c1e9d0-9f9a-40e1-b58b-524136cd4714",
                            Email = "B18099122@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099122@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099122",
                            PasswordHash = "AQAAAAEAACcQAAAAEOk4CUqZUZo/80n8aRsLkMiJLezCmBPovyXPVIVG/0JS7GZmLTvSl4irh7FeT1EUVA==",
                            PhoneNumber = "0981774461122",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d1910b96-a1e0-4c94-b5ca-6ec86f33012b",
                            TwoFactorEnabled = false,
                            UserName = "B18099122"
                        },
                        new
                        {
                            Id = new Guid("0e6c1b93-0b8a-45e0-bd03-9f25595c4906"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9e179bbe-666a-4631-a885-890f0defd980",
                            Email = "B18099123@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099123@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099123",
                            PasswordHash = "AQAAAAEAACcQAAAAEKmYlkQkBKnG/gbdRyykSOs6Q3gpakf7L0pfBXBt+4Oi5t53wjk3ywuCIRIAwHQcew==",
                            PhoneNumber = "0981774461123",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d2e62cf1-ee8a-44e0-87ce-d02d293331fd",
                            TwoFactorEnabled = false,
                            UserName = "B18099123"
                        },
                        new
                        {
                            Id = new Guid("1372ffda-c440-4a5e-8987-8856aefdec6f"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3489c62d-2076-43fa-b9d0-3b10f9b86af3",
                            Email = "B18099124@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099124@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099124",
                            PasswordHash = "AQAAAAEAACcQAAAAEHRs0cIi5B7tTw86i+L3PiUevgy2KCl9MJfxtu9gqQlfoksr5eirqMcuqhILprAYVg==",
                            PhoneNumber = "0981774461124",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "36105bc5-6109-4c38-be11-f67139bdfbf3",
                            TwoFactorEnabled = false,
                            UserName = "B18099124"
                        },
                        new
                        {
                            Id = new Guid("2ef30f4d-89a3-47ec-ada1-64795e191e1c"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a04691e2-00d7-434c-99bf-b1427081e19e",
                            Email = "B18099125@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099125@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099125",
                            PasswordHash = "AQAAAAEAACcQAAAAEHMl8q+XZUd1wxc4WnXZCw+rvZLix0EK/Fya/aw69AvJpJeIXqUFT7juPkFxFvsp/w==",
                            PhoneNumber = "0981774461125",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f8b064b0-e844-4a93-98ca-0a5b7c34ea13",
                            TwoFactorEnabled = false,
                            UserName = "B18099125"
                        },
                        new
                        {
                            Id = new Guid("dbcb0cce-a5e9-436a-8f58-4b848e229a2e"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c04413ba-8389-4a14-aa59-c740c43b0fef",
                            Email = "B18099126@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099126@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099126",
                            PasswordHash = "AQAAAAEAACcQAAAAEAkSvssk20Q9UBEs150DzIHU1eORj3ykwH6SCoM1EIUpmOZwm5VZBLzhl+C7DoOSCw==",
                            PhoneNumber = "0981774461126",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1c6d5afb-3f44-4074-8349-a542625fdf8f",
                            TwoFactorEnabled = false,
                            UserName = "B18099126"
                        },
                        new
                        {
                            Id = new Guid("b8f94450-c787-45f5-9d62-6cdcad553fef"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "becd9a28-6534-45dd-a13b-ac2bc03c5d0e",
                            Email = "B18099127@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099127@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099127",
                            PasswordHash = "AQAAAAEAACcQAAAAEHdCNM6CDNxjmX8MyoPaV14kpDhTW7fUhPbfZVRDqiV5ALGOENcTHis4EEE1Zcr6sA==",
                            PhoneNumber = "0981774461127",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5bc3d6cb-393a-46af-8f09-2819e8a0c5ae",
                            TwoFactorEnabled = false,
                            UserName = "B18099127"
                        },
                        new
                        {
                            Id = new Guid("4bdf10e6-4aa1-4bbe-8de5-b58a909a3f3b"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "eea90c38-51c3-4059-acb5-57814804e106",
                            Email = "B18099128@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099128@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099128",
                            PasswordHash = "AQAAAAEAACcQAAAAEOdrbqXcG5HHsfTF6TDhQFKnqLn2B5hknjfmiIWU7Y2x9n2i2YJp/K20S+ZvG+AmLA==",
                            PhoneNumber = "0981774461128",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8ff4e470-560a-41b3-9324-0aa84917b740",
                            TwoFactorEnabled = false,
                            UserName = "B18099128"
                        },
                        new
                        {
                            Id = new Guid("fce48743-13ce-4072-8ab3-9924d2af4717"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "00309789-2fd6-4e44-a9ba-e4f381595245",
                            Email = "B18099129@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099129@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099129",
                            PasswordHash = "AQAAAAEAACcQAAAAECauL62TwPLlDvcL0cymc3c/ZspNVYsqXOe+DSXIpilC6KNyx8FImurzK9fDXAjlPQ==",
                            PhoneNumber = "0981774461129",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "bb86be61-df72-4746-a4b4-ec13dc0ab895",
                            TwoFactorEnabled = false,
                            UserName = "B18099129"
                        },
                        new
                        {
                            Id = new Guid("462617dd-e276-4066-946a-79736c9f4d91"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a56cb9ee-1f0f-421a-8ee5-ca403b173937",
                            Email = "B18099130@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099130@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099130",
                            PasswordHash = "AQAAAAEAACcQAAAAECpD7mmivdQm9pvqJNvmSs0jDT5OtmLBRSOaOD3K4e4a9zm0ExOuYVYHJpOIWkAYxw==",
                            PhoneNumber = "0981774461130",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4a195730-6832-4297-a19a-142194069f9f",
                            TwoFactorEnabled = false,
                            UserName = "B18099130"
                        },
                        new
                        {
                            Id = new Guid("1ce197a9-51ad-4e32-89cf-ccf1d414c087"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5632349d-19ce-43bd-ac9f-35567226ed65",
                            Email = "B18099131@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099131@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099131",
                            PasswordHash = "AQAAAAEAACcQAAAAEI63aANs+xBqcWlfFJjW0X9yR3LKCGVliw7us82VAPZXYSL6aR6IdNTf4i5hkYF/SQ==",
                            PhoneNumber = "0981774461131",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e86b5db0-6994-40af-b79e-f5f25ec6a34f",
                            TwoFactorEnabled = false,
                            UserName = "B18099131"
                        },
                        new
                        {
                            Id = new Guid("60cb9f88-1b3c-4567-8e6c-d0cdc9017283"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9bab3e4d-b00e-422f-b0a0-c7c9a3cadb43",
                            Email = "B18099132@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099132@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099132",
                            PasswordHash = "AQAAAAEAACcQAAAAEFwnguaVzVbtUoIw9uoDmUVAy3k9Wh+23gdV4w5PzRFTYo9ULe7EbnJxOMkALyHWpA==",
                            PhoneNumber = "0981774461132",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9bfa00eb-7c9b-411a-98fa-2bbb466bbc0d",
                            TwoFactorEnabled = false,
                            UserName = "B18099132"
                        },
                        new
                        {
                            Id = new Guid("0aef8b94-022a-4d3c-96cf-7b7ea3687a04"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f6f33af9-4a90-4fd5-859b-24aed735acd2",
                            Email = "B18099133@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099133@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099133",
                            PasswordHash = "AQAAAAEAACcQAAAAEPgMmyrHQvbmbI/s5ndf7HJYsz8HWzCrH/YZi65VQT3Dqi0ZYf1ont/dAUoURD62zg==",
                            PhoneNumber = "0981774461133",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0d7ba893-0493-4562-8de4-d29049b845e2",
                            TwoFactorEnabled = false,
                            UserName = "B18099133"
                        },
                        new
                        {
                            Id = new Guid("b33dc930-4046-41ce-a309-1a41c7dec7a2"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fed7acd8-b690-4928-96ea-f7fce0946c44",
                            Email = "B18099134@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099134@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099134",
                            PasswordHash = "AQAAAAEAACcQAAAAELTXwvD8zT8PMslQ2ZCb9f5DrOH0TiwpDYZHcyjrwC+wzHh4uwXILnOn5L036aGzNg==",
                            PhoneNumber = "0981774461134",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "81188d5d-c8c2-48d8-8297-b1f3f891dd2a",
                            TwoFactorEnabled = false,
                            UserName = "B18099134"
                        },
                        new
                        {
                            Id = new Guid("a01af778-d757-4022-8673-44baab055929"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4a281174-2604-4283-b9a4-c1ebce5a5a79",
                            Email = "B18099135@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099135@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099135",
                            PasswordHash = "AQAAAAEAACcQAAAAEKhuR/16+ciqIl28Fl+Dnep15rc9HFA16cva7nrWrtJJzq3teUI1OaJi5mMrQXyNkA==",
                            PhoneNumber = "0981774461135",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4c56e93a-6063-4c9b-97bc-c96d28f61503",
                            TwoFactorEnabled = false,
                            UserName = "B18099135"
                        },
                        new
                        {
                            Id = new Guid("1adf1cbf-0441-4824-b5e9-b72cc702c640"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ebeadcef-e19c-41bb-b92c-3641279206ea",
                            Email = "B18099136@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099136@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099136",
                            PasswordHash = "AQAAAAEAACcQAAAAECG/s7I071i5iOlVuBWFgm/xhg31ZJYA6BjT9MjXHPO9mqr2j8WRBWM9iNPHCYQGPQ==",
                            PhoneNumber = "0981774461136",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "23202d41-1833-4df3-8a58-e8a09b2e8a82",
                            TwoFactorEnabled = false,
                            UserName = "B18099136"
                        },
                        new
                        {
                            Id = new Guid("83eaaa1e-d4ef-49ed-ae42-ef89a4bc7373"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c9d51f24-e5a7-4a98-9eda-9645bfbe1643",
                            Email = "B18099137@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099137@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099137",
                            PasswordHash = "AQAAAAEAACcQAAAAEIqU64CZeE5tW9m6YN8P3yqsCiY+QkNVr2ON1eXEqEH2qn/7ZZ3s1gYhraw3ela3Pw==",
                            PhoneNumber = "0981774461137",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ec92c143-25bd-4caa-96e5-7bb576969ba9",
                            TwoFactorEnabled = false,
                            UserName = "B18099137"
                        },
                        new
                        {
                            Id = new Guid("9b02b0f2-8394-4397-9e09-a1ddd0084960"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7b3826c6-9627-4236-89bb-03cf61a45109",
                            Email = "B18099138@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099138@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099138",
                            PasswordHash = "AQAAAAEAACcQAAAAEEGnGvpAOFALIyM03nkjLZjIw0Qe+hJr2WEiga+Z6gPalJWNX/RvvkFgd0JmRlonbw==",
                            PhoneNumber = "0981774461138",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "fa13426b-81f6-4f6b-8f36-661493210ce7",
                            TwoFactorEnabled = false,
                            UserName = "B18099138"
                        },
                        new
                        {
                            Id = new Guid("84fdf487-ca09-4e9f-901f-55d988398187"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "100f4c4c-8ab7-4b47-aea2-454b42f843da",
                            Email = "B18099139@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099139@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099139",
                            PasswordHash = "AQAAAAEAACcQAAAAEIsbI/jAyQvUDCiqFBEjs41NHWGoc51onRTGEPSm53iJIYr8jkiU86XwosdUkwfwZw==",
                            PhoneNumber = "0981774461139",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9a3df32f-9e62-4d5a-904d-10854510466a",
                            TwoFactorEnabled = false,
                            UserName = "B18099139"
                        },
                        new
                        {
                            Id = new Guid("64e720d4-9d05-485a-bd34-8ad675af5d95"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "664aafd0-40a9-4a4f-bf36-1f617bc4f360",
                            Email = "B18099140@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099140@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099140",
                            PasswordHash = "AQAAAAEAACcQAAAAEAmvYUCFMsv8B0OXaCrFxhtgiKBbJs8zFZxDrL13tx1/fEjX+KWv+4tD8cDMnqaHZg==",
                            PhoneNumber = "0981774461140",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "78807d8b-c808-4f99-aa8b-cce677b59e42",
                            TwoFactorEnabled = false,
                            UserName = "B18099140"
                        },
                        new
                        {
                            Id = new Guid("eb767016-9e06-4c56-9903-ef9ac85cf402"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "81f451f1-f6f1-403f-b092-3a9fef52662d",
                            Email = "B18099141@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099141@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099141",
                            PasswordHash = "AQAAAAEAACcQAAAAEP4JYgeMkId8C2IVf2Pj6sQpznAJoQ+OK/IVoXfo83c1MGzxshtdA02mfrG1ShlqGg==",
                            PhoneNumber = "0981774461141",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4426dbd6-d75d-45fb-9872-3700f160f10f",
                            TwoFactorEnabled = false,
                            UserName = "B18099141"
                        },
                        new
                        {
                            Id = new Guid("b15b1095-202d-49e2-92ad-5c47be931877"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f5275f0d-d931-4ef1-86b3-c6b933e771a5",
                            Email = "B18099142@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099142@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099142",
                            PasswordHash = "AQAAAAEAACcQAAAAEGlUreNMn7lrMSubrA4ymSxlmH9tjuafH2T8NCuKFvRRdJGT1i7CbUdMDRACaXfRPQ==",
                            PhoneNumber = "0981774461142",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0141b581-9be6-4854-a4b1-35647a65b08f",
                            TwoFactorEnabled = false,
                            UserName = "B18099142"
                        },
                        new
                        {
                            Id = new Guid("9a493d2d-3671-4c4b-9dd2-492095e5ab56"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "edb3cc8d-ad04-4bdd-b0f2-118e62321d49",
                            Email = "B18099143@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099143@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099143",
                            PasswordHash = "AQAAAAEAACcQAAAAEFLBwd3VyWmZTausFeGj4w4mnLDtiIQHzghz2noZv7MSK4EwVif0s/tO+pn7qjt6gQ==",
                            PhoneNumber = "0981774461143",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b1309517-84f8-4516-891f-447e924e2874",
                            TwoFactorEnabled = false,
                            UserName = "B18099143"
                        },
                        new
                        {
                            Id = new Guid("98c56511-afa2-4f6e-b110-4d44836299e8"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e8606b51-e6ca-4d33-a2f2-5cb172a73572",
                            Email = "B18099144@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099144@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099144",
                            PasswordHash = "AQAAAAEAACcQAAAAEJweUAZXf8kn2FxsbxkHAwdtL5puPY0MvBu/THRY04R9kwMcJqMkaH80wyVJyZnhEA==",
                            PhoneNumber = "0981774461144",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ee77f6a4-44cd-4161-bb44-859c735c3a9f",
                            TwoFactorEnabled = false,
                            UserName = "B18099144"
                        },
                        new
                        {
                            Id = new Guid("e920a5a4-3415-4a1d-8e2a-8982c4386ea6"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e3a883d6-a593-473f-a64f-b12b3fef783e",
                            Email = "B18099145@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099145@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099145",
                            PasswordHash = "AQAAAAEAACcQAAAAENpZiQB8iehzI4MGZMGJeMucxql8wbMIEuVi2FWlh7m3MsPbPt8uv6+W22TNKlxuqA==",
                            PhoneNumber = "0981774461145",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8672af78-34fc-4efb-ba32-47c1aef110ac",
                            TwoFactorEnabled = false,
                            UserName = "B18099145"
                        },
                        new
                        {
                            Id = new Guid("a1b8fe37-e767-4a4b-8172-7cf8605393a8"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f7cc46c4-3631-40e6-95f7-2c125cba9968",
                            Email = "B18099146@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099146@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099146",
                            PasswordHash = "AQAAAAEAACcQAAAAECyXoqGhbKjU93rfNzNovDrYjjThCtlDt/hLvnVKU/x1MPhapkQ8NXlCN/Mvg8zFMA==",
                            PhoneNumber = "0981774461146",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f7b62657-7d21-4719-b05d-507c7442e1d0",
                            TwoFactorEnabled = false,
                            UserName = "B18099146"
                        },
                        new
                        {
                            Id = new Guid("e7ce9ae0-5879-48d2-a52c-e933b77f1f1a"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "1eb19efe-dad3-4478-ba50-58fd1a5acd6b",
                            Email = "B18099147@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099147@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099147",
                            PasswordHash = "AQAAAAEAACcQAAAAEMC/7h6J+triP8mUrkCx2+7pJFDi/vaw+3a0FI19y3CCIuPfuEIJEsNZDL3RRHvRyQ==",
                            PhoneNumber = "0981774461147",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1acb1a1e-2bbd-4253-acea-ab1e03b5fdb4",
                            TwoFactorEnabled = false,
                            UserName = "B18099147"
                        },
                        new
                        {
                            Id = new Guid("4683d299-85ee-4b6b-a4ad-bb1ab2ee0d91"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3e66aac3-eda3-4d53-ba80-43f626ca9bf5",
                            Email = "B18099148@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099148@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099148",
                            PasswordHash = "AQAAAAEAACcQAAAAEM2eAGPT20ybWVQ5WiDQdDH5Vtyijniz4Gw/tMRrBveh8Xk42OnYAcNgw2dNaWDo/w==",
                            PhoneNumber = "0981774461148",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "84063dd8-dd93-4d99-9df2-b667de33b0f6",
                            TwoFactorEnabled = false,
                            UserName = "B18099148"
                        },
                        new
                        {
                            Id = new Guid("e6d20114-5812-4bd7-8690-0b1dd547b13b"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a3c7ed26-a2f8-4197-9359-3616028995b7",
                            Email = "B18099149@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099149@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099149",
                            PasswordHash = "AQAAAAEAACcQAAAAEAtAhEO11t5Lt6YtQy+2ccJ89kxQZJw+oXm3uTKRMQ5niHKm7W63XqAOQPdh1xbXrw==",
                            PhoneNumber = "0981774461149",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "73da283e-e94c-4f47-9f45-6d1d5b84ed07",
                            TwoFactorEnabled = false,
                            UserName = "B18099149"
                        },
                        new
                        {
                            Id = new Guid("990c62b6-8d6c-47fb-bcb6-7c68aa272587"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ffecaa34-3858-4d6c-b576-937b30d8f709",
                            Email = "B18099150@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099150@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099150",
                            PasswordHash = "AQAAAAEAACcQAAAAEErfsu1/JOM+o6EXiIovC/mShnnXyAksLJN8ahF8vOb8VNA7B1HvsOh/9v1qI93XhQ==",
                            PhoneNumber = "0981774461150",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b4aaf032-ad39-43d3-8306-e023f365755d",
                            TwoFactorEnabled = false,
                            UserName = "B18099150"
                        },
                        new
                        {
                            Id = new Guid("b99c7b85-53ee-4067-a41e-403545cdef54"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a020bdca-71d2-437c-9cbc-37355e797750",
                            Email = "B18099151@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099151@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099151",
                            PasswordHash = "AQAAAAEAACcQAAAAEDjKMbXKvYxVx5pyyfP40uCdTT44RIcvIW67V7emAfz2F1jM177x6qY4pAOch42/IQ==",
                            PhoneNumber = "0981774461151",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "464b7bfd-ee52-4dd8-b339-a6d874a94a1c",
                            TwoFactorEnabled = false,
                            UserName = "B18099151"
                        },
                        new
                        {
                            Id = new Guid("503e2155-7fc9-4f96-8bb2-04fe277cdb31"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ad4d7311-07a6-4deb-b4bb-9cb3af9ded4f",
                            Email = "B18099152@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099152@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099152",
                            PasswordHash = "AQAAAAEAACcQAAAAEGZl9SOQY2gYLMMFItyE8p1Z1rSsN3oNhZn6upRicn8ivS9P9yN8Hhf6XZIX/V/D3Q==",
                            PhoneNumber = "0981774461152",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3d68bace-7b9c-406c-83b3-b79c49c310a2",
                            TwoFactorEnabled = false,
                            UserName = "B18099152"
                        },
                        new
                        {
                            Id = new Guid("70ec207a-97db-415d-bbe3-cafcb81b9b8a"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0532fd99-655d-4b13-9693-41a9e3fad50d",
                            Email = "B18099153@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099153@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099153",
                            PasswordHash = "AQAAAAEAACcQAAAAEIsBrJv7jLbp5uw5TLzVmxfolzhuPVaCesCO9SElpbDrbcBJAMwbfgNAAYaanphN2g==",
                            PhoneNumber = "0981774461153",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0cbb6545-f44a-41b6-a515-668b3849ffde",
                            TwoFactorEnabled = false,
                            UserName = "B18099153"
                        },
                        new
                        {
                            Id = new Guid("81161214-bbb5-4fae-bce4-7613dc84bb3f"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "56e738e7-1176-4b18-99f4-6bc464d92a2c",
                            Email = "B18099154@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099154@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099154",
                            PasswordHash = "AQAAAAEAACcQAAAAEDCvv/Urre9uzjQi/X23iAbfPPGrf+wfAmU335hdT8W3ZbHx1xD4FeRA++jelzMWng==",
                            PhoneNumber = "0981774461154",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "fab7ed93-da07-4c00-90cd-569ea380df85",
                            TwoFactorEnabled = false,
                            UserName = "B18099154"
                        },
                        new
                        {
                            Id = new Guid("baa097d4-56d1-4741-8c47-9744c1e178a0"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "16927ee2-5fff-4c5e-be35-57a50e223985",
                            Email = "B18099155@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099155@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099155",
                            PasswordHash = "AQAAAAEAACcQAAAAEH+eYtLqNP51H1wsNzNp/SrXPVFWs8yoVX05vVFmcu9aFCCWXqga0h1+wlJbMCZDgw==",
                            PhoneNumber = "0981774461155",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8dbb54bd-f42a-4131-8502-5a28e3d4f047",
                            TwoFactorEnabled = false,
                            UserName = "B18099155"
                        },
                        new
                        {
                            Id = new Guid("2a867f04-0fca-4dce-9ab2-27f49d9c7613"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b52d7c94-b15c-4210-8903-745e8c024f73",
                            Email = "B18099156@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099156@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099156",
                            PasswordHash = "AQAAAAEAACcQAAAAEMLpKT1qYifKVTjjCycrLgOU+tIxBaoYz4VI4duk5Cgf8zN/bUN2hbv5FrK3YJSTNg==",
                            PhoneNumber = "0981774461156",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f394eb86-8029-450f-b1d9-1114964543d4",
                            TwoFactorEnabled = false,
                            UserName = "B18099156"
                        },
                        new
                        {
                            Id = new Guid("cc571974-7fc5-43f9-ab15-8f17111cd6f7"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "137bc81e-ed58-4fe9-bc37-2704f2467a28",
                            Email = "B18099157@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099157@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099157",
                            PasswordHash = "AQAAAAEAACcQAAAAEEPqQhYxyMYiFkRrZ5p3yfR2R2B+kmfpKED5hzb4wRJY2FXiCoZrW+nbhM7eNoBYlw==",
                            PhoneNumber = "0981774461157",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "77d772b3-c109-4917-8361-f6a5397c0781",
                            TwoFactorEnabled = false,
                            UserName = "B18099157"
                        },
                        new
                        {
                            Id = new Guid("3d91b138-a5c4-4ab1-9ca9-ffed7b92f910"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c938bd07-c620-4358-ae44-623f2d03deb7",
                            Email = "B18099158@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099158@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099158",
                            PasswordHash = "AQAAAAEAACcQAAAAEGpBrXm5YYm0KJwFJTPWyrqGnopJCS6GtdsKaIAl4psGaiTkMVnjVwMyZq4CYjeC9g==",
                            PhoneNumber = "0981774461158",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "cd075906-5c14-4c8e-9c77-a76c8c47b390",
                            TwoFactorEnabled = false,
                            UserName = "B18099158"
                        },
                        new
                        {
                            Id = new Guid("69d14ccd-458e-45c3-88eb-cfce2a0afa59"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "525d127e-6b1b-4b3c-a195-7c58d97ff777",
                            Email = "B18099159@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099159@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099159",
                            PasswordHash = "AQAAAAEAACcQAAAAEH3rFerDzMHzd9mLDkve9iCyzsm86kLmSNQMo1cj4eVxAbQUxH/mgybf454iJdhr8Q==",
                            PhoneNumber = "0981774461159",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a95d9ff3-0cd0-445c-84ed-4612b5b45e36",
                            TwoFactorEnabled = false,
                            UserName = "B18099159"
                        },
                        new
                        {
                            Id = new Guid("249f39b1-d370-4150-8689-b9c224d90d66"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7e9fdf94-8a7c-45f9-a5ce-00f6c1ea0c28",
                            Email = "B18099160@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099160@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099160",
                            PasswordHash = "AQAAAAEAACcQAAAAEAwLeofEIDFZQ1oE0W9D9py9smoxU7VEcfppJA+PECkGMzT3O1f45rDU83NbTce0Pg==",
                            PhoneNumber = "0981774461160",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a9298604-c65d-4086-84d8-f6cc4065aa6c",
                            TwoFactorEnabled = false,
                            UserName = "B18099160"
                        },
                        new
                        {
                            Id = new Guid("b691565f-72fb-4c5d-8451-63ff137f79ac"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d0168ae2-9760-4a5d-86e9-2e9d1b84d94a",
                            Email = "B18099161@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099161@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099161",
                            PasswordHash = "AQAAAAEAACcQAAAAEFXU5ehK7k0i+0d6lkwFkrVJ3wWd9jTf08MF3Ohln5ESOHpdwvpC5i+GVQC/rcsclg==",
                            PhoneNumber = "0981774461161",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4d0d6646-c5e9-4216-8b52-287de215fd3d",
                            TwoFactorEnabled = false,
                            UserName = "B18099161"
                        },
                        new
                        {
                            Id = new Guid("bed10234-220c-4521-865f-92d9cc2b6f23"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b5f9ddc7-5bef-4d1b-9450-4ef23983a0eb",
                            Email = "B18099162@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099162@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099162",
                            PasswordHash = "AQAAAAEAACcQAAAAEEhAo8zjGrNzscHubKk0aUc9FdHb/of7kydz0pk78iBDn9XhLDOZVWQ+LTbEgGA0Lg==",
                            PhoneNumber = "0981774461162",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "dd32e79e-889c-437e-a579-bbb270228c38",
                            TwoFactorEnabled = false,
                            UserName = "B18099162"
                        },
                        new
                        {
                            Id = new Guid("17557f2a-be60-49b2-9cab-1bea6fe0fa01"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "456742d7-df24-4fb0-8959-51d99f4e11dd",
                            Email = "B18099163@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099163@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099163",
                            PasswordHash = "AQAAAAEAACcQAAAAEK+bNYMFsVmFGgeXaXtZsX4PDxGI2P+CEXfSQy2BQNUZxF16CaFSEkIyDqYR2Swv4A==",
                            PhoneNumber = "0981774461163",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a6b2a929-6fda-4074-8e19-afc5232ad446",
                            TwoFactorEnabled = false,
                            UserName = "B18099163"
                        },
                        new
                        {
                            Id = new Guid("8be85bd5-1095-46dd-98de-f158021c9f12"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f29f05cd-6719-4011-931d-41c06889dd4b",
                            Email = "B18099164@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099164@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099164",
                            PasswordHash = "AQAAAAEAACcQAAAAECke85SsVeMAH5XR7udk8cY2dRdQV20//Wn3Al97RVCytAIWS7P8jVfxHe97Nirazg==",
                            PhoneNumber = "0981774461164",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a920bd23-15fb-43b2-a639-37419c74ea06",
                            TwoFactorEnabled = false,
                            UserName = "B18099164"
                        },
                        new
                        {
                            Id = new Guid("c86a5fb6-07df-4994-8f29-028964372568"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b8294ece-2c4d-4e27-a11c-0557ee7df927",
                            Email = "B18099165@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099165@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099165",
                            PasswordHash = "AQAAAAEAACcQAAAAEOAVED/D2wZVqh5BkctDZSDtM/dknke3A59JsbDL8MiBcEPpD0ybL/DAoRQjSheG3g==",
                            PhoneNumber = "0981774461165",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "43c561ec-4eeb-41a2-8b94-0728e6ae24b8",
                            TwoFactorEnabled = false,
                            UserName = "B18099165"
                        },
                        new
                        {
                            Id = new Guid("538aadc3-d225-4d2b-ae9e-2369f0b2cd1b"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ae812696-7b76-49a8-b78e-3e8d46dc2d67",
                            Email = "B18099166@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099166@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099166",
                            PasswordHash = "AQAAAAEAACcQAAAAEGMDDFZJIhn+3qVpC6io7ZhiomlDcEl2jWKxsum9gFJlNGMXBWged1PngPUaPNztOg==",
                            PhoneNumber = "0981774461166",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "2b35e40e-9046-496d-8acb-420aab6b873d",
                            TwoFactorEnabled = false,
                            UserName = "B18099166"
                        },
                        new
                        {
                            Id = new Guid("c1400430-6785-4c37-9bde-3bc2cea7b75e"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9ac2118b-883a-4dff-a820-86464ebf18ea",
                            Email = "B18099167@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099167@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099167",
                            PasswordHash = "AQAAAAEAACcQAAAAEDNUNSUNn492mcOuYA9UyJZ4xqfoHupsqhXlJQIdH5H7bsbHcFYUZR+itAsY/Q0IPA==",
                            PhoneNumber = "0981774461167",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e8ca33e5-fa08-4274-b96f-5c63b90082a7",
                            TwoFactorEnabled = false,
                            UserName = "B18099167"
                        },
                        new
                        {
                            Id = new Guid("dad2543e-6ce6-4db3-be0e-42361aae6382"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b87b3730-f0ee-47a3-ad36-70a622a703f9",
                            Email = "B18099168@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099168@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099168",
                            PasswordHash = "AQAAAAEAACcQAAAAEAISFuajRoR2+VV351eGDRD0Fs3oLPpQrbDSB7TRfIJx24FPKosjkuGPPRF5wNKeqA==",
                            PhoneNumber = "0981774461168",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9cb534d4-d0f9-43d0-b0f2-28e23eb51f42",
                            TwoFactorEnabled = false,
                            UserName = "B18099168"
                        },
                        new
                        {
                            Id = new Guid("03b705af-6b55-4152-83fd-acbaa5423071"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "85ab6595-ab79-44a9-a26a-6c9449af4f87",
                            Email = "B18099169@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099169@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099169",
                            PasswordHash = "AQAAAAEAACcQAAAAEP7uMY9iqLSwJPxyo1dLfKADV1u7D9h5AwVkF/WI06aIL/ZHOelPQNeiecgTK5Li7g==",
                            PhoneNumber = "0981774461169",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "02582308-8472-4c9c-ab23-fe667199e409",
                            TwoFactorEnabled = false,
                            UserName = "B18099169"
                        },
                        new
                        {
                            Id = new Guid("d4cbee19-5748-44c4-a61d-dc2ddd2ac53c"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b85f44f1-9dce-4c85-b726-6df5fe1896f4",
                            Email = "B18099170@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099170@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099170",
                            PasswordHash = "AQAAAAEAACcQAAAAEMmU4hR5guRSobhkxUQ5N1XID5cFDY2BGVchzqlpVAUjzSV+RuNxwPKqIJ//R7RSsg==",
                            PhoneNumber = "0981774461170",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "68d2b4da-227c-4989-bdc2-a833e64de6ae",
                            TwoFactorEnabled = false,
                            UserName = "B18099170"
                        },
                        new
                        {
                            Id = new Guid("98abd83b-2b91-45c9-97f0-cbead87b40a2"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "50fcd242-52ac-44a5-a5df-53dc8e27b0d3",
                            Email = "B18099171@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099171@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099171",
                            PasswordHash = "AQAAAAEAACcQAAAAEPEx96rlm2Gl9lNt62+icHMZN6XuSRpFmHCRxSRw8uWWcixIHtDUIM+uVgQ+VhUG+g==",
                            PhoneNumber = "0981774461171",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e4b9d077-87b9-430f-a46d-29f5e11a3732",
                            TwoFactorEnabled = false,
                            UserName = "B18099171"
                        },
                        new
                        {
                            Id = new Guid("b1a6e79d-33b5-4be8-9aa7-60f6ebb15f75"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fc26b0b4-79ba-4c5a-8bf1-cf7c3c549054",
                            Email = "B18099172@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099172@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099172",
                            PasswordHash = "AQAAAAEAACcQAAAAEM23nSvesgRPkA02etSg2YY62LFhl36ii8Iroeg56of/FBaduLGZDtTIbsgNj+3U7A==",
                            PhoneNumber = "0981774461172",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9e260455-09aa-4f9f-9aef-6cca05dd107b",
                            TwoFactorEnabled = false,
                            UserName = "B18099172"
                        },
                        new
                        {
                            Id = new Guid("6838d7c4-66e5-4de7-a1b6-aa49064874fa"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a32ea5f8-20ff-45b2-8479-31b3ff7f9085",
                            Email = "B18099173@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099173@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099173",
                            PasswordHash = "AQAAAAEAACcQAAAAEGLMHlUX9oGwnG0EOLhIqOKsURqpcRePw5y/IMrg8JsDdzMn9gBc4v6Jt+3t4P4G4g==",
                            PhoneNumber = "0981774461173",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6c8228a3-b3c1-4ba9-835b-f9de89059cd0",
                            TwoFactorEnabled = false,
                            UserName = "B18099173"
                        },
                        new
                        {
                            Id = new Guid("de70013a-cf70-4665-9f64-6407039827da"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "58c2cde4-d6cf-40b6-9d52-036b7730bba1",
                            Email = "B18099174@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099174@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099174",
                            PasswordHash = "AQAAAAEAACcQAAAAENxkA5sEGzWh+meoRQIhud0qdHrm4fzpKxBwDeqkyryuFZS5591RoEWXFV6fiqwyMQ==",
                            PhoneNumber = "0981774461174",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a1dd02e3-b893-4f6e-ba47-3f530afa452f",
                            TwoFactorEnabled = false,
                            UserName = "B18099174"
                        },
                        new
                        {
                            Id = new Guid("16299704-9d26-455d-94da-1302a25c42b6"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f87d3ca9-8a1d-47f2-8be5-aa4aedf090cc",
                            Email = "B18099175@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099175@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099175",
                            PasswordHash = "AQAAAAEAACcQAAAAEOXAc0YL5Ea15cVzk1yiFcZkm6/04ZG9lnLArC1I73DWdR9lcRaQANGoI8dw/jnIjw==",
                            PhoneNumber = "0981774461175",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "389342a4-281d-4a3a-930a-55aca20a3328",
                            TwoFactorEnabled = false,
                            UserName = "B18099175"
                        },
                        new
                        {
                            Id = new Guid("dd60dbb4-2ca7-4ce3-b6bc-b0d17ffb300b"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "da66cc00-f169-4fec-9277-fbde35dd7d3c",
                            Email = "B18099176@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099176@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099176",
                            PasswordHash = "AQAAAAEAACcQAAAAEDYEfhfJWSif16zPyH+xevZVKCcJymcz3Jk8AwaUD293gbN5TsDF2dBfV+IHG+/iww==",
                            PhoneNumber = "0981774461176",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e8017fae-a14f-4e42-bb7f-25b1292dd9b8",
                            TwoFactorEnabled = false,
                            UserName = "B18099176"
                        },
                        new
                        {
                            Id = new Guid("d6d6d1be-7cea-4f90-8fc8-de96f56550f6"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3f14d455-4fdb-43f4-8866-f7e53a5a6da4",
                            Email = "B18099177@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099177@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099177",
                            PasswordHash = "AQAAAAEAACcQAAAAEEvkAZ5ruRdRjjKezeXrMABSDjYIgNQFDwNp+H9vWsdlV7bpT1n7oYJquJ6/xhHVBg==",
                            PhoneNumber = "0981774461177",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "84f781c8-ed29-4e43-9ec3-224e28aea44a",
                            TwoFactorEnabled = false,
                            UserName = "B18099177"
                        },
                        new
                        {
                            Id = new Guid("f6d29461-dbc7-4501-be7d-00debc77915a"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7ded84e4-5229-4586-901e-90ed2b91e632",
                            Email = "B18099178@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099178@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099178",
                            PasswordHash = "AQAAAAEAACcQAAAAEJnPRV4/q67WAoJakbaY+Tx0A5+NvgDApx3oaLmoAZzkysqCqbKtJhmjOqB39+sJIQ==",
                            PhoneNumber = "0981774461178",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7806fb6a-8e8f-4a3d-8fb8-f0ce28f84e55",
                            TwoFactorEnabled = false,
                            UserName = "B18099178"
                        },
                        new
                        {
                            Id = new Guid("6675c38c-b749-4aa4-bbe5-fee86ca4616b"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "2bc45706-7ea7-4ff6-a3f4-5bbb703f8d7f",
                            Email = "B18099179@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099179@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099179",
                            PasswordHash = "AQAAAAEAACcQAAAAEO46gf8I4Ts2KZkVU1E539q60VSIeaSyRUVBFe+oiz3kGDsRkk/NaDUky1djBnix/A==",
                            PhoneNumber = "0981774461179",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f01d914f-298c-4f4d-a4d8-3c72c3333429",
                            TwoFactorEnabled = false,
                            UserName = "B18099179"
                        },
                        new
                        {
                            Id = new Guid("6538c877-4478-470d-a0a4-59d091813ba4"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "78d6cb5a-0e48-47cd-a7cf-68d15af57dc4",
                            Email = "B18099180@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099180@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099180",
                            PasswordHash = "AQAAAAEAACcQAAAAEOsTGXRPa710GXozNEpAuZU4bHyQZF6z9DgLQFgyciycoDOBVz2rq+lIlPrbYRmV4A==",
                            PhoneNumber = "0981774461180",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e037da18-3170-40ae-a799-46bdb1ec1146",
                            TwoFactorEnabled = false,
                            UserName = "B18099180"
                        },
                        new
                        {
                            Id = new Guid("7099201c-bc51-4f0e-a888-e68190a878ee"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c01bb746-12da-47e7-a222-cb7a6f987f20",
                            Email = "B18099181@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099181@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099181",
                            PasswordHash = "AQAAAAEAACcQAAAAEMj2hEvLu8hIIaMutCq3z0PoPTD4G0NemvdE/9BfsO4bru0bmTqQ1N4ZUr/46s9S8A==",
                            PhoneNumber = "0981774461181",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7d4e4510-8d26-4081-a722-fb8c6726a435",
                            TwoFactorEnabled = false,
                            UserName = "B18099181"
                        },
                        new
                        {
                            Id = new Guid("611dfe3b-6099-4dc5-81ac-59f0bea04757"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7cc3acdc-f47e-43b3-a3b9-b53e10197e2f",
                            Email = "B18099182@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099182@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099182",
                            PasswordHash = "AQAAAAEAACcQAAAAEA3LbNWSteRQZWgQdsclxVz9ybBH7bxiDR48WELg1bgCu1p/lufAfVeeLJko7No8oA==",
                            PhoneNumber = "0981774461182",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "628e307d-adce-4fd1-82a0-0778fb89b8fc",
                            TwoFactorEnabled = false,
                            UserName = "B18099182"
                        },
                        new
                        {
                            Id = new Guid("f21b5736-4e1b-4a01-b665-7fdaeab5e985"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "1d54a386-cee2-46cd-ad3c-71f88b8bd54f",
                            Email = "B18099183@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099183@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099183",
                            PasswordHash = "AQAAAAEAACcQAAAAEEdljSEzkPULz7MtV6RvVwan9OVyju2d1Bebw0FeAZfuwkS5tcurBfPoJ5wENefvtQ==",
                            PhoneNumber = "0981774461183",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ab15de94-7c24-478a-8eb3-cd94559ab211",
                            TwoFactorEnabled = false,
                            UserName = "B18099183"
                        },
                        new
                        {
                            Id = new Guid("50521053-b9d9-464d-b5e8-00c48fc4995c"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "289b4797-6f1a-4697-9db4-cf7bbf732488",
                            Email = "B18099184@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099184@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099184",
                            PasswordHash = "AQAAAAEAACcQAAAAEO42nJLZsnVQl02Opf+T3XggYE38L5dDRPcFY1oS2Y5iExEJn7nXuRgs1LgkSY20jA==",
                            PhoneNumber = "0981774461184",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "458d615e-16eb-4a66-a9de-5987ae264d86",
                            TwoFactorEnabled = false,
                            UserName = "B18099184"
                        },
                        new
                        {
                            Id = new Guid("3d6ef8e7-5af4-4f3d-bb56-66e56fd3fdac"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b82560f0-ab1f-4e36-81bc-93b0e75aca14",
                            Email = "B18099185@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099185@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099185",
                            PasswordHash = "AQAAAAEAACcQAAAAEIZcAgqPWj4mAmvVqNI3x/urA+GpsPIcXNtz0Y30U6Rw/S68+U7soJwMQ6CXmv7d1w==",
                            PhoneNumber = "0981774461185",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4cff3a79-1906-4fc6-83ec-b418ef502106",
                            TwoFactorEnabled = false,
                            UserName = "B18099185"
                        },
                        new
                        {
                            Id = new Guid("dc2c4ceb-be0b-4342-888b-c4a40c3d52a3"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "cf4dc231-9c45-4dff-ad7d-e3846f7888a4",
                            Email = "B18099186@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099186@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099186",
                            PasswordHash = "AQAAAAEAACcQAAAAEDh2s5xbqZ582C6yykUTTZ+THz4V1LhtDoxeIVrNXcGQAPeVgv31930H1WOISFmpqQ==",
                            PhoneNumber = "0981774461186",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "75a45d62-91a1-426b-aff2-b5d18caab2a6",
                            TwoFactorEnabled = false,
                            UserName = "B18099186"
                        },
                        new
                        {
                            Id = new Guid("9ccd656b-8be9-4cd9-a456-4a4446c7a5e5"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d24a2816-477f-4de5-a086-ca539b315a41",
                            Email = "B18099187@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099187@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099187",
                            PasswordHash = "AQAAAAEAACcQAAAAEESx9+IXM+bNp74sdlqcYhg1KyCh+5H7NQ7PQkm5u+amZPqYEwyX5rDLFoFq+m/sbQ==",
                            PhoneNumber = "0981774461187",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "9537693b-69de-430c-be1e-632747510785",
                            TwoFactorEnabled = false,
                            UserName = "B18099187"
                        },
                        new
                        {
                            Id = new Guid("2ab41b5f-1e9f-4177-b164-f1885dad768e"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9504dd3d-c2f9-47e9-ad45-fb5e7e1eeac1",
                            Email = "B18099188@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099188@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099188",
                            PasswordHash = "AQAAAAEAACcQAAAAENrxJjx0FEukwINufXlRDjYRvMENx7LPyS4t4WRbBATSpkZ4U9y7fhi6qEXc+G8j1w==",
                            PhoneNumber = "0981774461188",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a6b309be-8b9f-4487-bd99-798a3c82a401",
                            TwoFactorEnabled = false,
                            UserName = "B18099188"
                        },
                        new
                        {
                            Id = new Guid("7e898cd0-2d72-4ac3-b1e6-601e3edfad00"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "607b5af4-df4b-4899-bda0-0bd310b6c78d",
                            Email = "B18099189@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099189@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099189",
                            PasswordHash = "AQAAAAEAACcQAAAAEABDBfmeo3zfYy69KE/TjpS3cWIvldmuro5zyi9AmiLSCkZ3Taw0WIEC0gARP8fM8Q==",
                            PhoneNumber = "0981774461189",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c0de10b7-09ec-4c22-9a0a-e7fac0737b3c",
                            TwoFactorEnabled = false,
                            UserName = "B18099189"
                        },
                        new
                        {
                            Id = new Guid("8b12049b-7bb8-4573-b67a-03ffa91995a7"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6632af45-956b-4e3e-b5aa-da6e333529d9",
                            Email = "B18099190@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099190@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099190",
                            PasswordHash = "AQAAAAEAACcQAAAAEDMP5NtWb9g454O4/JucTSeVdNyV+3Eoz9VcUtii/W3FNE13oiYtSruKbOqL6ZhqMg==",
                            PhoneNumber = "0981774461190",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d2f304bd-263c-46e9-a328-8bd86e7b8580",
                            TwoFactorEnabled = false,
                            UserName = "B18099190"
                        },
                        new
                        {
                            Id = new Guid("dabff61d-e067-4c3d-b0ba-834d4c466f97"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "eeb9ed6c-bb6f-4e6f-8405-efd994303568",
                            Email = "B18099191@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099191@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099191",
                            PasswordHash = "AQAAAAEAACcQAAAAECuONM+GI355mlKitH/MKDDKg2Ekiuqw4EWJElbYpHyZpxeAGgHfKsk5RQBc0xP8nQ==",
                            PhoneNumber = "0981774461191",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c2d7d909-2f4e-4fa6-9652-f32e2870085f",
                            TwoFactorEnabled = false,
                            UserName = "B18099191"
                        },
                        new
                        {
                            Id = new Guid("e6881558-193e-4523-866d-dad134bf0e50"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4c5b6c64-7ff4-4739-a821-4539ab436c87",
                            Email = "B18099192@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099192@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099192",
                            PasswordHash = "AQAAAAEAACcQAAAAEK5TtQz09FlyQvVuSsXAJBTZAdLYpMhXOzw3NGvtUZiDSDCg4DLaYqmlvGGSrpPMmA==",
                            PhoneNumber = "0981774461192",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c0290d06-25e8-4a0c-a241-826ee7ee65d9",
                            TwoFactorEnabled = false,
                            UserName = "B18099192"
                        },
                        new
                        {
                            Id = new Guid("86cdf93f-7053-493d-a389-191383b73a9b"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "63f374e1-bc8a-45b2-960b-33ad65b59b96",
                            Email = "B18099193@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099193@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099193",
                            PasswordHash = "AQAAAAEAACcQAAAAEEeKxk0crfttZakz9mBQqClk1tOLTYSYvj1Gr4Ua4T8E93vkxdBPhBwAXRTvXuREjQ==",
                            PhoneNumber = "0981774461193",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "57477ffe-71bd-45dc-b2b7-19af98d9b9bd",
                            TwoFactorEnabled = false,
                            UserName = "B18099193"
                        },
                        new
                        {
                            Id = new Guid("d418469e-cfe0-4f78-82e8-c28b3e15c819"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "616f45b7-e809-4957-aaf6-d5bf5b3ce345",
                            Email = "B18099194@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099194@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099194",
                            PasswordHash = "AQAAAAEAACcQAAAAEOp22B+EzMkRGzkR6tPnOMWZn/4W4rmr908dSGpnJIuzKwzA6kr9BIrGJzw6jNl/dw==",
                            PhoneNumber = "0981774461194",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "07bbe168-fa94-4605-80e0-4ec0f1f77d35",
                            TwoFactorEnabled = false,
                            UserName = "B18099194"
                        },
                        new
                        {
                            Id = new Guid("6eecb6b8-67d5-420c-a111-933ca97a495c"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "49b723ab-e846-4003-9924-f57a61c6190a",
                            Email = "B18099195@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099195@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099195",
                            PasswordHash = "AQAAAAEAACcQAAAAEAKENj5EkaY+pqfPKHx9SmF15P7uv2wCcTY94Mbyva+BxS5MXpJ0zHqlHcL3uv2usg==",
                            PhoneNumber = "0981774461195",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e2e43dc6-127a-4437-bb13-75807f122281",
                            TwoFactorEnabled = false,
                            UserName = "B18099195"
                        },
                        new
                        {
                            Id = new Guid("634bcaf6-f0fb-4057-83c2-c4429a871287"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3c128149-f2bb-444a-9881-55b7e8e36b46",
                            Email = "B18099196@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099196@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099196",
                            PasswordHash = "AQAAAAEAACcQAAAAEF9FSANd0aocE+Sg80nt6tZDa0Xjo2wvnRI6oxIOU14CKVJZTep355AtKSLYB9oquw==",
                            PhoneNumber = "0981774461196",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4c9361b0-cdb2-4ec4-9794-1c7edf7c9cac",
                            TwoFactorEnabled = false,
                            UserName = "B18099196"
                        },
                        new
                        {
                            Id = new Guid("d87f20ae-a7ca-4ea1-8fe3-9259e62e34db"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3978aaba-3ed6-40d9-a112-d4810dd41d7a",
                            Email = "B18099197@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099197@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099197",
                            PasswordHash = "AQAAAAEAACcQAAAAELqy5CX8VhCeoNGCK5lEud/HCmP7frVU4E7Bjd5LeTo2z7pqPa51QhYKXtW88/7Thg==",
                            PhoneNumber = "0981774461197",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "db27ccd2-55b5-4b37-8511-2fde3409a561",
                            TwoFactorEnabled = false,
                            UserName = "B18099197"
                        },
                        new
                        {
                            Id = new Guid("c9d49df6-86d3-4eed-b145-83f7a89d4e28"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f5ecd250-176e-4e89-81dd-8042fbaeafdd",
                            Email = "B18099198@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099198@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099198",
                            PasswordHash = "AQAAAAEAACcQAAAAENi0VW9binv+eJW15NZkDKzfJNHExB9LD9LbUpqEGnTil9cH/nNYcCmMcCeeat3xHQ==",
                            PhoneNumber = "0981774461198",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4dbc0911-6e8e-4d23-ae61-7dec8eee5e82",
                            TwoFactorEnabled = false,
                            UserName = "B18099198"
                        },
                        new
                        {
                            Id = new Guid("5c5839b0-ed68-4539-8729-074e1bd0715a"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "14d6679c-4e20-4087-9c02-62f3bae93eb3",
                            Email = "B18099199@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099199@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099199",
                            PasswordHash = "AQAAAAEAACcQAAAAEDcrlZ6Rvqbo29JydI6CR/q4x1IQzw87/v+3uKuSwjysdQYb4rLsrIAlG3CSvjsjBA==",
                            PhoneNumber = "0981774461199",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5605d827-4511-4a7b-98a0-ebf656bb6713",
                            TwoFactorEnabled = false,
                            UserName = "B18099199"
                        },
                        new
                        {
                            Id = new Guid("0cdaa3a4-1d98-470a-82c6-e4f5f52e7606"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f66eb3f5-3697-48e3-8424-fc1a2218a24d",
                            Email = "B18099200@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099200@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099200",
                            PasswordHash = "AQAAAAEAACcQAAAAEJumRup5stGM4bozDXiFXhSUUeEVNejIrssDn/B5Y5WxtQrYCfyFV4SQ9qNU9YfTTg==",
                            PhoneNumber = "0981774461200",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f32c19f1-5d6a-4368-b53f-baf289812429",
                            TwoFactorEnabled = false,
                            UserName = "B18099200"
                        },
                        new
                        {
                            Id = new Guid("ba22fff6-ba45-43a7-9524-cf8bbd987330"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "920be0c0-5a1a-412f-8bbc-51410bcae066",
                            Email = "B18099201@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099201@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099201",
                            PasswordHash = "AQAAAAEAACcQAAAAECzsgh8KITy5i8iF4m/68VaGEbN3MI4XWBvT7l659/WSG4gS3KELDAhZ1GZzyYBiWQ==",
                            PhoneNumber = "0981774461201",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "2126fdcd-9ad4-4967-930c-d745993fc3f8",
                            TwoFactorEnabled = false,
                            UserName = "B18099201"
                        },
                        new
                        {
                            Id = new Guid("87dbd58a-08be-4527-9f0b-a5637720c6bd"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c8137cc0-e41c-421b-a5ce-4c8c239391b3",
                            Email = "B18099202@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099202@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099202",
                            PasswordHash = "AQAAAAEAACcQAAAAEGv6X2hhgGEhB+/yO6jTp9xtNvl/vjCamOw3w/5b6M91KcZV0JcHa5lX4QBO3rV+2w==",
                            PhoneNumber = "0981774461202",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8a706557-e330-4ec4-8252-0e8a49f1f861",
                            TwoFactorEnabled = false,
                            UserName = "B18099202"
                        },
                        new
                        {
                            Id = new Guid("aff5e306-75cb-4779-b1ab-3d6cf23de72f"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "052396a6-41a6-4816-9767-f020444c737a",
                            Email = "B18099203@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099203@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099203",
                            PasswordHash = "AQAAAAEAACcQAAAAEJGPo/Pz2j/Lfnx45h9g4BX7gJIryYK0JB8Qum3D9WkxCZuC8jB/OZ99/IAVQE+xTg==",
                            PhoneNumber = "0981774461203",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f0b54e56-48f0-43f0-87c2-43798e47594e",
                            TwoFactorEnabled = false,
                            UserName = "B18099203"
                        },
                        new
                        {
                            Id = new Guid("98dccdd4-d8ae-4d50-bf78-709f0aaa21d5"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "88c9d1ac-c5c0-489b-95e7-bca61f6c87a7",
                            Email = "B18099204@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099204@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099204",
                            PasswordHash = "AQAAAAEAACcQAAAAEPAX2ossLtsExK0secFmaKbg/c9zScSfWntfLaEeJtGBaZzoSQWEwxy1C3R3Skbx0g==",
                            PhoneNumber = "0981774461204",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3bbc1e34-ef72-4b57-82ed-dd2a6bebc944",
                            TwoFactorEnabled = false,
                            UserName = "B18099204"
                        },
                        new
                        {
                            Id = new Guid("e2c45fb3-91b5-4945-a4f3-06ff08602135"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "1fee437d-d5bc-4069-96bd-4faeebdbe7c9",
                            Email = "B18099205@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099205@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099205",
                            PasswordHash = "AQAAAAEAACcQAAAAEEQiVg0Opbvgm/fYNHxLgJi7brAaeqNF46l2d3taZ+Poh1L5Thn7CvsjFuN7xsK+Ww==",
                            PhoneNumber = "0981774461205",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "de07c768-13f4-430b-a4d9-028d772f0050",
                            TwoFactorEnabled = false,
                            UserName = "B18099205"
                        },
                        new
                        {
                            Id = new Guid("3f87e1c7-be78-484f-8f0f-6789984920b2"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "591d2d4e-9d82-43a3-afe5-8d6a57c046b3",
                            Email = "B18099206@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099206@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099206",
                            PasswordHash = "AQAAAAEAACcQAAAAEMbMxTHQ2QuFZTPaNZq8z+oPSkDNcm+6DSk8td3kkUIMhV5qvk8qE/fZL7/BYo8HaA==",
                            PhoneNumber = "0981774461206",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d8e70cc3-1225-4925-a93d-d48edec6dcce",
                            TwoFactorEnabled = false,
                            UserName = "B18099206"
                        },
                        new
                        {
                            Id = new Guid("24d83dd1-5d54-4226-ba5d-ae95b87dbc39"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "783195e9-4c34-4a65-b728-ad711eff913c",
                            Email = "B18099207@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099207@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099207",
                            PasswordHash = "AQAAAAEAACcQAAAAELCXDX6EiSJlyb9qtT6KjgIS8R5eR7JDM4rxt5mBmActP/4m3lz7Qnu09GnFrWbVJQ==",
                            PhoneNumber = "0981774461207",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5fe60b33-3a1b-4f59-bcb1-687a572fdd4a",
                            TwoFactorEnabled = false,
                            UserName = "B18099207"
                        },
                        new
                        {
                            Id = new Guid("049d0711-2893-4e0c-9830-79fcb87006ed"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "08c79412-3658-4900-b66e-2bf68352d6e6",
                            Email = "B18099208@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099208@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099208",
                            PasswordHash = "AQAAAAEAACcQAAAAEHYgi8y2qNY6bRIIap10V36VbH/VxbDtruDAX/dMuP4fF/Ggs3oPX8qpCebIxrFixw==",
                            PhoneNumber = "0981774461208",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d1b5a983-b38b-4450-b478-2e3b9efbb83f",
                            TwoFactorEnabled = false,
                            UserName = "B18099208"
                        },
                        new
                        {
                            Id = new Guid("5f01fe3c-3a60-4b2b-aa73-babce7c66c13"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "92a76d9c-e4ab-444a-9ba6-3612b4ff31b8",
                            Email = "B18099209@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099209@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099209",
                            PasswordHash = "AQAAAAEAACcQAAAAEBDnPqIAP6eZ8mB1EFxU7b9GwKXgJkg8U/SR9VzirEiRZsMdh18YzQMKGVLHygX/5g==",
                            PhoneNumber = "0981774461209",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "2b84e2a5-f57e-4617-8565-a79dd0e9e2f5",
                            TwoFactorEnabled = false,
                            UserName = "B18099209"
                        },
                        new
                        {
                            Id = new Guid("4e76012a-7b95-4513-9d46-91cd17741a2c"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "31cf4812-c755-484b-8aff-1b2d98725d08",
                            Email = "B18099210@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099210@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099210",
                            PasswordHash = "AQAAAAEAACcQAAAAECVTUW1R93mU/5o+vfdC3tksrc58tbPLGmgFX4jiF9D/ITzyNJDrH9oeDAzPTGDXSQ==",
                            PhoneNumber = "0981774461210",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7f875316-67e4-4e0b-911c-8d1834f9fcb7",
                            TwoFactorEnabled = false,
                            UserName = "B18099210"
                        },
                        new
                        {
                            Id = new Guid("e1607665-0b43-4b68-8132-86554a0e5f07"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "42e9db36-b723-4db1-bbd3-8410666e2e3d",
                            Email = "B18099211@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099211@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099211",
                            PasswordHash = "AQAAAAEAACcQAAAAEK0i+vlu+5zaUTYT2Zy4VBdkefn8Mr21tVQ2mqiWF1awGNh3jU50I5/g9VlQm+BY0A==",
                            PhoneNumber = "0981774461211",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5178ec25-093e-4f66-90b3-cdb406894b9d",
                            TwoFactorEnabled = false,
                            UserName = "B18099211"
                        },
                        new
                        {
                            Id = new Guid("a8502205-a79d-47dc-b8f9-8b8df983fe3f"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "de2bb21b-0ea9-4467-8278-4ffcfd806de2",
                            Email = "B18099212@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099212@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099212",
                            PasswordHash = "AQAAAAEAACcQAAAAEHkcjT0eznww5st1jUfpsg0FghjxTO8mqniqQz7yM6yngE7PkltvgL5rHNUB7cyNcw==",
                            PhoneNumber = "0981774461212",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3df3ab9b-de61-422b-a749-fe439c9565c9",
                            TwoFactorEnabled = false,
                            UserName = "B18099212"
                        },
                        new
                        {
                            Id = new Guid("47024bc0-76fc-49dd-9560-5577b470e180"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d74e0cd4-a82a-4c8e-b937-637f8ef1cb57",
                            Email = "B18099213@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099213@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099213",
                            PasswordHash = "AQAAAAEAACcQAAAAEC5QN20gNcq88I92M1wJHsA8MKoWFlVj9ZjIG3LmDe/GOgNK3wG70c9Wa2AiYctgjA==",
                            PhoneNumber = "0981774461213",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f4828127-0367-44d6-a47f-a78095593960",
                            TwoFactorEnabled = false,
                            UserName = "B18099213"
                        },
                        new
                        {
                            Id = new Guid("6ce9d59b-0a62-4a94-b515-39084e7da946"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "cf9cd0dd-ec63-4676-8f33-e3d6f11d1671",
                            Email = "B18099214@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099214@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099214",
                            PasswordHash = "AQAAAAEAACcQAAAAEIPKx/qi7whQB2M/zDwL/HF0u82DY44xZI6lLqbBhDSzaBRqqi0el/ywELJ68ZWRuA==",
                            PhoneNumber = "0981774461214",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "fda0d222-d255-4949-af4b-08077af4d28d",
                            TwoFactorEnabled = false,
                            UserName = "B18099214"
                        },
                        new
                        {
                            Id = new Guid("0d5327a5-6b00-4c5b-8983-3ec8d6e965fc"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "2bd0a1f9-bbaf-4b17-a4d1-aaeecdfbeab0",
                            Email = "B18099215@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099215@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099215",
                            PasswordHash = "AQAAAAEAACcQAAAAEC6j/GaUFF7G+d/fDjmoR1Vyp68Lp+fATBqpGPz1ZsnSUA3lagy5kaBHYueE+pwkAg==",
                            PhoneNumber = "0981774461215",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c77fb032-8408-4068-9359-437d54c6e7e0",
                            TwoFactorEnabled = false,
                            UserName = "B18099215"
                        },
                        new
                        {
                            Id = new Guid("e00e393d-f54a-4d26-b6bc-8749ec429fc9"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "23d14291-6e6c-4275-a954-c2c744a6b3cf",
                            Email = "B18099216@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099216@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099216",
                            PasswordHash = "AQAAAAEAACcQAAAAEK0IlAcC9+zlaRVXSMTx0yH6G+ZtdXrMHEgC3fZGFivf3HlGMqNHU5Q+C/55DJabtA==",
                            PhoneNumber = "0981774461216",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f4d1e058-3605-4ab9-92e6-eb4ab39cee77",
                            TwoFactorEnabled = false,
                            UserName = "B18099216"
                        },
                        new
                        {
                            Id = new Guid("b7fa6ab5-f298-4577-9c95-bb613ed53280"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "674da917-a58b-40a2-b524-d035ea6be743",
                            Email = "B18099217@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099217@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099217",
                            PasswordHash = "AQAAAAEAACcQAAAAEKUm+FVRy/pU+7yS+l6koLlLa4QwdshDoFE3RB1PG6b9MQkJU1dHY26G25gNgSBAvQ==",
                            PhoneNumber = "0981774461217",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "24ff9401-4423-494a-a004-b3fc74b3945e",
                            TwoFactorEnabled = false,
                            UserName = "B18099217"
                        },
                        new
                        {
                            Id = new Guid("c7f17152-c5df-4389-9bc5-dd5beb67968f"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fd937f37-18d6-45f9-bb64-25f557f087fe",
                            Email = "B18099218@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099218@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099218",
                            PasswordHash = "AQAAAAEAACcQAAAAEL0uqSZzGC9/j3pLvaRS2BPQuRr15K4DFHB/i0zZz1cpQPeBP8qk8jAsAY3Ifg7aNg==",
                            PhoneNumber = "0981774461218",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0c6a267d-38cb-4c19-b057-183e2886aca3",
                            TwoFactorEnabled = false,
                            UserName = "B18099218"
                        },
                        new
                        {
                            Id = new Guid("7860d176-cd9b-4fe6-9cdc-c6829bff2304"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b00efa33-51a0-4bdf-82df-746a78f969b8",
                            Email = "B18099219@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099219@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099219",
                            PasswordHash = "AQAAAAEAACcQAAAAEEXghBz6Ko6G6RjRuQ/Zz2zLXYhuDsfa1jMFDbOnp0lMZZY6ch1fRAvTP6bhxul2Lg==",
                            PhoneNumber = "0981774461219",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "63304498-8647-4842-ba1d-580fb4b6248c",
                            TwoFactorEnabled = false,
                            UserName = "B18099219"
                        },
                        new
                        {
                            Id = new Guid("0747e4f7-b6cd-473d-b17a-d0c8e3066f2f"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b43fbb3c-8e10-45be-9bdd-154ec941d6bf",
                            Email = "B18099220@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099220@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099220",
                            PasswordHash = "AQAAAAEAACcQAAAAEBrXd4hhXlX/gZZk/ayhRIBVnAuGD4DmGyE+yXvKYq5W3yEhys2PN1WDtigi4uPtIQ==",
                            PhoneNumber = "0981774461220",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "98cba86c-7642-437a-b414-82a39f7ac1ae",
                            TwoFactorEnabled = false,
                            UserName = "B18099220"
                        },
                        new
                        {
                            Id = new Guid("7c3810f4-46c5-4fe6-9641-71f4c7c646b4"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "23fd726e-8ea2-4a1b-a034-d2eecf71564e",
                            Email = "B18099221@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099221@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099221",
                            PasswordHash = "AQAAAAEAACcQAAAAEB0yn+F8oUg6cYrjNAMQW/B3G3xJWo8lxr2C4WCWZMdc0vHaBC4/j6cQDTMw3fY8tg==",
                            PhoneNumber = "0981774461221",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "569f85f1-ab2c-4a44-ba8c-9ab0c377b49c",
                            TwoFactorEnabled = false,
                            UserName = "B18099221"
                        },
                        new
                        {
                            Id = new Guid("6d9d1618-d183-4711-977e-fb333baa8035"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0f42340e-9f92-4566-9fa5-4a35f8b1cb6f",
                            Email = "B18099222@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099222@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099222",
                            PasswordHash = "AQAAAAEAACcQAAAAEEyifNkXeH+H/3r3C522Wo0wcwWfDAHlYCIFW6gPznOR5VM9UBRFF9qc03b7WCt5hA==",
                            PhoneNumber = "0981774461222",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4ee3929b-e62c-439e-b934-6de4f0510b70",
                            TwoFactorEnabled = false,
                            UserName = "B18099222"
                        },
                        new
                        {
                            Id = new Guid("13b3e888-a382-4658-a846-80f55bc6fb37"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "935e9197-3748-4d9c-af62-a1a657f12d95",
                            Email = "B18099223@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099223@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099223",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ06BLygL7SmMZQH3W+jSx/Xu0xYXs0sZEwtx5ebBqd+PSxzGENeA6yl1AXDSJz6ng==",
                            PhoneNumber = "0981774461223",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "caecc79a-f184-4993-9b01-443bdb56aebc",
                            TwoFactorEnabled = false,
                            UserName = "B18099223"
                        },
                        new
                        {
                            Id = new Guid("3a69e6e1-c0fb-44f1-aafc-61fccc441229"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "db92a367-3753-42c9-8366-4c5f684e74c1",
                            Email = "B18099224@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099224@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099224",
                            PasswordHash = "AQAAAAEAACcQAAAAECyOvZ7UITwcR7mIGvvqPj+oFvbiFcRXRwDnaLHl7AHda8BO/gVEBjz0UKUlZjiXnA==",
                            PhoneNumber = "0981774461224",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a3cd5180-2325-4c94-a922-58562daf5f61",
                            TwoFactorEnabled = false,
                            UserName = "B18099224"
                        },
                        new
                        {
                            Id = new Guid("e6316e92-49ce-45df-b25c-2b6a9792f261"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f92dbbc5-1979-41f5-8221-e5c7e923b90e",
                            Email = "B18099225@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Đỗ Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099225@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099225",
                            PasswordHash = "AQAAAAEAACcQAAAAEELvKNrjgR6/BLfi2MJF+fmQnOPsaeujP0p5ly3cICSCrw1lpb81tcQ2STeo3Tpzyw==",
                            PhoneNumber = "0981774461225",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b2ae6c41-60af-4dc7-83a6-a4b092e33446",
                            TwoFactorEnabled = false,
                            UserName = "B18099225"
                        },
                        new
                        {
                            Id = new Guid("559fae44-8558-4b2e-ae62-c76f0ca4b65d"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fd5933bf-4126-4ecd-87f7-cf3a79c2ccc6",
                            Email = "B18099226@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099226@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099226",
                            PasswordHash = "AQAAAAEAACcQAAAAEBaiVKzdj5tFv1Pxb3Xl27vq1TU8X7FtZnR4htOXL8pyQbVw5jdtZha6ZWQdFXa5Fw==",
                            PhoneNumber = "0981774461226",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "348da7a3-1984-4508-bdeb-9b1ff73e2ed9",
                            TwoFactorEnabled = false,
                            UserName = "B18099226"
                        },
                        new
                        {
                            Id = new Guid("717e7689-05f3-4c31-a82a-174ae6453cc6"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fc9455c1-3668-4154-9e20-632607d0c2b0",
                            Email = "B18099227@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099227@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099227",
                            PasswordHash = "AQAAAAEAACcQAAAAEGmUgA73w6+HxYIdq3H+h/88FOAJDAdrdOEbTPlyNgTeIZH8oKVgds0ldG6flbegKw==",
                            PhoneNumber = "0981774461227",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0de66383-10eb-4843-89e9-cf62796cd14e",
                            TwoFactorEnabled = false,
                            UserName = "B18099227"
                        },
                        new
                        {
                            Id = new Guid("a1cc5915-f635-4813-a91f-2998de193566"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6d68b32c-b445-4acd-b6e9-6f12630fd71a",
                            Email = "B18099228@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099228@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099228",
                            PasswordHash = "AQAAAAEAACcQAAAAEMxZ7AnrNKNUynb70pNFRCJ2TVSzZz+H0ni10TzNR3GLS++b68xxuG2yPJca1V94eQ==",
                            PhoneNumber = "0981774461228",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "75adbba8-9ed9-41f4-95df-2fe2f4a4bcea",
                            TwoFactorEnabled = false,
                            UserName = "B18099228"
                        },
                        new
                        {
                            Id = new Guid("1074b04d-e70a-4e15-b789-a210b8fc64d6"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "277e381e-1df1-450d-b640-146a9538be1e",
                            Email = "B18099229@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099229@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099229",
                            PasswordHash = "AQAAAAEAACcQAAAAEEX7PB9a/ZRqmrNu4KI9cZZxs3xF2p4vo8616GBN2nYSz5lKhab9VU7iqJ0jittg+g==",
                            PhoneNumber = "0981774461229",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7bdb4646-e045-4e7c-aedb-346472559ef7",
                            TwoFactorEnabled = false,
                            UserName = "B18099229"
                        },
                        new
                        {
                            Id = new Guid("b5fe3cd8-1256-463f-9062-e26d905f640d"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4f8029ae-f4f2-470a-8ab2-9842c14c17ae",
                            Email = "B18099230@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099230@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099230",
                            PasswordHash = "AQAAAAEAACcQAAAAEKhhku+tLvYxzAxPWMRlSVtIWhazKqYnpI/tLdRkXOcHUH4dhPIv4ILLE15hU6cZfQ==",
                            PhoneNumber = "0981774461230",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "23e71693-2330-48d5-afa4-5ac2af0be756",
                            TwoFactorEnabled = false,
                            UserName = "B18099230"
                        },
                        new
                        {
                            Id = new Guid("15c42bb2-37a3-49f9-859f-119ca3b42c20"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "1128bdc8-af50-4b5c-a5b6-d0f48d74aea2",
                            Email = "B18099231@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099231@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099231",
                            PasswordHash = "AQAAAAEAACcQAAAAEC61OBwxesb3MF2mrAPjNozkXqdlR0fix+E2s0hESUOTGZbMzc4Xppb8qqgzLQ9z1Q==",
                            PhoneNumber = "0981774461231",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "08d8b2ad-ce81-4e3a-a6e6-57a7b3d0de78",
                            TwoFactorEnabled = false,
                            UserName = "B18099231"
                        },
                        new
                        {
                            Id = new Guid("2efca73d-089c-433a-a62d-3eb8fe224980"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "12baed25-d7d6-420b-b9c9-b9ce9a1803b2",
                            Email = "B18099232@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099232@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099232",
                            PasswordHash = "AQAAAAEAACcQAAAAEMuaBT8boUHnmiHKPPq7tRzYfy2YdqwA9vEAdVtMH841B6vqr08+TDEzRSz693ozrw==",
                            PhoneNumber = "0981774461232",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1ebc33b9-ea8b-40ae-9cea-4c4a5d2e8d2f",
                            TwoFactorEnabled = false,
                            UserName = "B18099232"
                        },
                        new
                        {
                            Id = new Guid("eb2ad632-a9df-4617-a0af-24b1cbecaf7a"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3c082cce-031f-438d-88e5-99c6799cb774",
                            Email = "B18099233@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099233@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099233",
                            PasswordHash = "AQAAAAEAACcQAAAAEKgP6UsCHYnFxqToJXGPQIoF+R/naf2r1kqq6cJtmeex0Own9OuFeTb+dMaCk7nzhQ==",
                            PhoneNumber = "0981774461233",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7be2ade3-9c4d-4aa6-be33-8e63de71f2bf",
                            TwoFactorEnabled = false,
                            UserName = "B18099233"
                        },
                        new
                        {
                            Id = new Guid("b7b8e098-07c8-4f93-a4da-216f21c92980"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f092b21f-e352-4b75-bb4f-c5ecee3e40d7",
                            Email = "B18099234@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099234@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099234",
                            PasswordHash = "AQAAAAEAACcQAAAAEHd/P4XLf/xnYV1/Y84FanuBY9iP2HZ4apexzMKXDVinOYgCy0E4FIXJUX32nH3jAw==",
                            PhoneNumber = "0981774461234",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "2844d8aa-94dd-4af9-b226-6432a6cb0eb0",
                            TwoFactorEnabled = false,
                            UserName = "B18099234"
                        },
                        new
                        {
                            Id = new Guid("90022be0-2de5-4ea3-afc7-9d93d2fe56c0"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4a0f94d9-914a-48ec-a0e7-7eba6ab9d441",
                            Email = "B18099235@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099235@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099235",
                            PasswordHash = "AQAAAAEAACcQAAAAEPtrNqWWjei8MKsH5vNlAN1eaROODSKi0B+270AyXHxqqbOYZREzeQl9iXtjKMbgKw==",
                            PhoneNumber = "0981774461235",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1b90f374-9b26-4698-840e-5153e71bf774",
                            TwoFactorEnabled = false,
                            UserName = "B18099235"
                        },
                        new
                        {
                            Id = new Guid("290053b1-5997-4822-9dc4-8e318761d6aa"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "937ac6ef-baf1-4f5a-9be4-5d55209c0ad4",
                            Email = "B18099236@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099236@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099236",
                            PasswordHash = "AQAAAAEAACcQAAAAEK4jHms9KUEBHI2/dDGTKqlguAUdS1AMpthlNknSAHcDj83SpbxJPTMlEndZtBUPqg==",
                            PhoneNumber = "0981774461236",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1eecaa67-6ab6-47d5-9603-5d92e2570222",
                            TwoFactorEnabled = false,
                            UserName = "B18099236"
                        },
                        new
                        {
                            Id = new Guid("920ba2d9-efae-4528-ba2b-b28e9c0c362c"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7f294cfe-c575-4393-90ef-f9e247a8316c",
                            Email = "B18099237@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099237@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099237",
                            PasswordHash = "AQAAAAEAACcQAAAAEF+BFIQrkxzzzDltC5wnpgzD+rHFkJZPIMCMKzHc5iwBRUp36LY8xUpTedMCNY30Og==",
                            PhoneNumber = "0981774461237",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ce69fc0e-d4ad-44e0-908f-f01d82ec40cc",
                            TwoFactorEnabled = false,
                            UserName = "B18099237"
                        },
                        new
                        {
                            Id = new Guid("ed80b63f-3476-4ecb-8b72-90c81251d3be"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ef3fc7d4-5869-4f45-99ab-fd33ca52986a",
                            Email = "B18099238@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099238@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099238",
                            PasswordHash = "AQAAAAEAACcQAAAAEMjtI7PbWpumoNAK/Ce03bj1EQvoNTRLMPAbnWzdEVrKL5RndZtJuYgMk6/YXgP1bw==",
                            PhoneNumber = "0981774461238",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b9f6f555-9d4f-4cf9-be44-e87d949b3527",
                            TwoFactorEnabled = false,
                            UserName = "B18099238"
                        },
                        new
                        {
                            Id = new Guid("cb17cf1a-6b63-4585-a8b5-d02f80d2fe4a"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5821af83-b1fe-4e90-853c-f54b784ccc69",
                            Email = "B18099239@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099239@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099239",
                            PasswordHash = "AQAAAAEAACcQAAAAEBRAUyAoN3szKRcK2dou7qaxpY8Ukl3v4DHIb6SQ2XNV0oJ10M6eoMlvzE7xFl/MNA==",
                            PhoneNumber = "0981774461239",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "357c1acf-8dfb-46c1-84d7-e62df2d590d3",
                            TwoFactorEnabled = false,
                            UserName = "B18099239"
                        },
                        new
                        {
                            Id = new Guid("69e735a5-1326-4932-acf0-331b42e0d58e"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9797c970-7274-490d-8214-ad52dcabfbfd",
                            Email = "B18099240@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099240@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099240",
                            PasswordHash = "AQAAAAEAACcQAAAAEM7hLxLbR5G8zqSrDjdw+l1pbhMRvdCofzghLzg+d8WM4NL8x6M/YITcSaczzo+fdw==",
                            PhoneNumber = "0981774461240",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e3c68670-f859-4d7c-bff1-64cdb9966bc2",
                            TwoFactorEnabled = false,
                            UserName = "B18099240"
                        },
                        new
                        {
                            Id = new Guid("9324178a-f398-4e69-bab0-23897f36bb24"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "58793d03-0744-4817-b251-1f511336b4c9",
                            Email = "B18099241@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099241@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099241",
                            PasswordHash = "AQAAAAEAACcQAAAAENr0Vaj85ZnykJKvsSas0Ov26Q2BgJvwVBoNJ1EsTlbCCEecvQWmHA0xZ50GzcwK0A==",
                            PhoneNumber = "0981774461241",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "73a92d73-8be7-484e-8b35-5b54aae8dfe7",
                            TwoFactorEnabled = false,
                            UserName = "B18099241"
                        },
                        new
                        {
                            Id = new Guid("2af57213-22fa-4fcc-9c18-fa424d54371f"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a5ebe826-6e8f-43a0-90f5-bb2ba4991f5e",
                            Email = "B18099242@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099242@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099242",
                            PasswordHash = "AQAAAAEAACcQAAAAECC69ScuGwWIMQAfc00lnVH1eFNROVyTUKRRvzdxF2koW6wdhhRPbZGGl5fzZk93jQ==",
                            PhoneNumber = "0981774461242",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "925eca3b-40f1-4b91-babd-dbdb59657211",
                            TwoFactorEnabled = false,
                            UserName = "B18099242"
                        },
                        new
                        {
                            Id = new Guid("25c59a1f-d9d0-4f6c-a391-3467bd68b36a"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "cecff2b7-5524-4567-b347-202d071580ac",
                            Email = "B18099243@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099243@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099243",
                            PasswordHash = "AQAAAAEAACcQAAAAEFya8yKm6F3U+b6Th0tC7bSkisw4hnkmPYQrvZ9gEqJGfajaZskeh5DCyuPLYFBHbQ==",
                            PhoneNumber = "0981774461243",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "85e73331-616d-45bd-9733-c5e7ddae42ac",
                            TwoFactorEnabled = false,
                            UserName = "B18099243"
                        },
                        new
                        {
                            Id = new Guid("0c3ebc2a-cfde-4471-919c-d56c61db0473"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ab9b10c9-666d-4a3e-93d9-e481ebfe52fd",
                            Email = "B18099244@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099244@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099244",
                            PasswordHash = "AQAAAAEAACcQAAAAENvfauiuJsUtpFkM4Xs4Oy0VjUvE84ZJ8BfV/NS/GngyPB+P3qEbMW9Ucbx6KDCKmA==",
                            PhoneNumber = "0981774461244",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e639a56a-ed7a-44e2-8f54-e48809184b13",
                            TwoFactorEnabled = false,
                            UserName = "B18099244"
                        },
                        new
                        {
                            Id = new Guid("30fdfbac-9093-4fa1-8404-a4d5e30b3b47"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e21aae1d-a58e-401e-9590-5b713421ff38",
                            Email = "B18099245@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099245@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099245",
                            PasswordHash = "AQAAAAEAACcQAAAAEM0uSzA3MEw4oMahnWFHD/PjkfcEtWrNfBDyFiqajTBpkdX+6emZCtl+Nrco9kifBA==",
                            PhoneNumber = "0981774461245",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8c95471f-7c74-44e7-86ef-85b125c35949",
                            TwoFactorEnabled = false,
                            UserName = "B18099245"
                        },
                        new
                        {
                            Id = new Guid("8a80c189-c866-4a48-b887-cd772d106aa0"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0bc0be85-cd3d-4951-b544-260fd686e4ff",
                            Email = "B18099246@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099246@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099246",
                            PasswordHash = "AQAAAAEAACcQAAAAEG/UidLIKvTjZQ1phwby4MEfzyftV4s03bwkbFohnpAvTZGZeviP+RcWv1DFJFq2Jg==",
                            PhoneNumber = "0981774461246",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "383206e8-3ba8-4607-af14-bdf3701d35c5",
                            TwoFactorEnabled = false,
                            UserName = "B18099246"
                        },
                        new
                        {
                            Id = new Guid("23fa2d22-5c26-42bd-991b-82ef19a66060"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ec594f46-c5e3-4d6a-9d6f-5c39a01cc3b7",
                            Email = "B18099247@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099247@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099247",
                            PasswordHash = "AQAAAAEAACcQAAAAEJnnRwez7A1fCCoCSvqwAkmpQnhy1d/dbklLt/YVMyBFWSe6bNcwVEANLsAlS3rQsA==",
                            PhoneNumber = "0981774461247",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "905c7186-28a9-46de-bba2-d386fd133f24",
                            TwoFactorEnabled = false,
                            UserName = "B18099247"
                        },
                        new
                        {
                            Id = new Guid("d9b7128e-5c58-499a-9843-c527a16745c5"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "26fa48f2-5649-4e63-a060-951daecb34a1",
                            Email = "B18099248@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099248@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099248",
                            PasswordHash = "AQAAAAEAACcQAAAAEFISCsr3yHF+Tyw9Zz/VTPAPkxWtfTdiITDNtllB3DJnOWH6S54lcK5V+xRvB/CQqA==",
                            PhoneNumber = "0981774461248",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "36a68046-d4bb-444f-b057-33e9ed768b86",
                            TwoFactorEnabled = false,
                            UserName = "B18099248"
                        },
                        new
                        {
                            Id = new Guid("30b25c79-dbc5-41f6-8934-69f4f71b3598"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a78c90dd-e7df-4362-bbfb-ebe142377531",
                            Email = "B18099249@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Trung",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099249@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099249",
                            PasswordHash = "AQAAAAEAACcQAAAAEBH6JkHSCikrS/+D5ynnNdcLWnokvLYsfhb1fEPSV9BGG+raNvvxOEmfY+ZMWPO9Jw==",
                            PhoneNumber = "0981774461249",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6ea8c8cc-cd3b-4016-89a5-67a186dc9768",
                            TwoFactorEnabled = false,
                            UserName = "B18099249"
                        },
                        new
                        {
                            Id = new Guid("2307dd86-70b5-42d4-848d-d8a9f619236c"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7e753f11-1a79-4240-8e2a-87f7b0a177fe",
                            Email = "B18099250@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099250@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099250",
                            PasswordHash = "AQAAAAEAACcQAAAAEHNoR7QDFnqcXfuhOLcLqbR2z/b+GruBilbh84LxBRjsHl1fyosgC+ZFjqzO3KwxuA==",
                            PhoneNumber = "0981774461250",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "616b85a8-f668-4161-9b2d-6bd49a56e556",
                            TwoFactorEnabled = false,
                            UserName = "B18099250"
                        },
                        new
                        {
                            Id = new Guid("27f47fff-2190-418e-a5ea-8ea5878af3ae"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d7208830-3598-4b53-9fb9-242979af9d1c",
                            Email = "B18099251@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099251@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099251",
                            PasswordHash = "AQAAAAEAACcQAAAAEFaD58UYOtde1nq4CjUMKOqi3QExAlrIMaogw4CqX61PP+F8q3ILj1+NChwIj+zTsw==",
                            PhoneNumber = "0981774461251",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "1451124c-8c25-4e5a-9f80-435affba0b5a",
                            TwoFactorEnabled = false,
                            UserName = "B18099251"
                        },
                        new
                        {
                            Id = new Guid("d89edb22-9f86-4a86-91cc-953fe5dc1612"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "51659191-2fc7-4858-9072-695c9ccac569",
                            Email = "B18099252@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099252@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099252",
                            PasswordHash = "AQAAAAEAACcQAAAAEDeyb26I2coTsQT1g+ZeF1css7TEqgPZTDyQSkRG5VHlGULAUO0zfMZvq2wbtNggGQ==",
                            PhoneNumber = "0981774461252",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4ef2eb27-cff5-4d3d-9042-3a55a75cca92",
                            TwoFactorEnabled = false,
                            UserName = "B18099252"
                        },
                        new
                        {
                            Id = new Guid("95bea5b6-a046-41db-ac2c-e1139a592332"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "041beb80-a2d4-4ba0-9556-3542f0786c3a",
                            Email = "B18099253@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099253@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099253",
                            PasswordHash = "AQAAAAEAACcQAAAAEB9XF84ESegnFgo3E6Q3Q0RN6YsDLIaeHq71MBh2X3kzJvRnZsoppu9FXS2pf3ALSA==",
                            PhoneNumber = "0981774461253",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "687eaeb8-da6c-44de-9d3d-d18c4227c064",
                            TwoFactorEnabled = false,
                            UserName = "B18099253"
                        },
                        new
                        {
                            Id = new Guid("0fa1e14d-4011-40af-b3db-d6dd90089a01"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0381ba43-3c53-4fc4-9b69-e6f76e3c2d95",
                            Email = "B18099254@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099254@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099254",
                            PasswordHash = "AQAAAAEAACcQAAAAEILSmodMLYy1rSIJXm1pWklu+EM3kNu0c2IKLXrcAJpk/7sSXaZMonScEYYg+wpjTw==",
                            PhoneNumber = "0981774461254",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e39b2b1e-382e-405d-b6f8-2286d1cb0965",
                            TwoFactorEnabled = false,
                            UserName = "B18099254"
                        },
                        new
                        {
                            Id = new Guid("129126ed-fc1f-4217-aa40-eefc4c8652d0"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6bf02957-04f1-4bc6-952f-ae83ce143473",
                            Email = "B18099255@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099255@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099255",
                            PasswordHash = "AQAAAAEAACcQAAAAEJ/GUZ++CWVrdRlhAJbWmsmKVS3qs4LoChSKYLREjxiqwbKKvQCFXd+oBi/9oWYw9A==",
                            PhoneNumber = "0981774461255",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "82851360-09c0-4928-9ca2-7f0f5e38bdab",
                            TwoFactorEnabled = false,
                            UserName = "B18099255"
                        },
                        new
                        {
                            Id = new Guid("d2ab768b-d650-4b06-a57d-2d7d0bc63813"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "09e1b2da-3989-4e13-838b-89a14c550a5a",
                            Email = "B18099256@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099256@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099256",
                            PasswordHash = "AQAAAAEAACcQAAAAELvpBtOshdEF7oJi8o9wJnWKAXNMpbYrUWkxCt0mICHqQ+NakpxV6iTgndlXviQgSg==",
                            PhoneNumber = "0981774461256",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6aad3d66-a776-41f7-9a01-28ab2594289b",
                            TwoFactorEnabled = false,
                            UserName = "B18099256"
                        },
                        new
                        {
                            Id = new Guid("23343a5b-3e9c-42ba-8d98-bf4413ffb0d1"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a3d23331-d364-4bd5-96db-c7dd56145207",
                            Email = "B18099257@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099257@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099257",
                            PasswordHash = "AQAAAAEAACcQAAAAEGyKdNwqu0xyK1UArJW2RumWbI5J8FKMPa+K2AjTt45PffXEyRkTJKLWF6Xn/WlHQw==",
                            PhoneNumber = "0981774461257",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c442354d-2886-4cf4-b549-321547940ff9",
                            TwoFactorEnabled = false,
                            UserName = "B18099257"
                        },
                        new
                        {
                            Id = new Guid("8005ba7b-d4b8-4706-86bd-618758b211c0"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b249c7a3-7f9b-49b6-9518-f730abdf81ab",
                            Email = "B18099258@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099258@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099258",
                            PasswordHash = "AQAAAAEAACcQAAAAECgPin5/8C/tIm02YYwxRwDal3enE5sdhK0dwfyPk7vYQZgS/9hXEs33RKr63NOCow==",
                            PhoneNumber = "0981774461258",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "cd0484c7-182a-4096-a392-6918fce20785",
                            TwoFactorEnabled = false,
                            UserName = "B18099258"
                        },
                        new
                        {
                            Id = new Guid("aae82d33-8d1b-4634-90a2-169e74800e2e"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f23a55f4-4d1c-4698-8c1f-885b92571f0c",
                            Email = "B18099259@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099259@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099259",
                            PasswordHash = "AQAAAAEAACcQAAAAELBAqRhQTTowNEmw+PPqIyMA9a7TYEhRU/XLTU0HeH9g/5G1QyClDmYkqtEcGAhCKw==",
                            PhoneNumber = "0981774461259",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "615aaf57-bd77-49de-8f43-16b65a690963",
                            TwoFactorEnabled = false,
                            UserName = "B18099259"
                        },
                        new
                        {
                            Id = new Guid("1ea0c3c4-900e-40d9-99d2-2eb8f240a744"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3009e4ad-a264-47e0-a762-17c257e1ee46",
                            Email = "B18099260@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099260@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099260",
                            PasswordHash = "AQAAAAEAACcQAAAAEFl4I2x8biCvay+qSAKp/BdJB7CwZ59OZ+2uJ0sMCah9xNb3SyHWFi+uCuLCQ+aXxg==",
                            PhoneNumber = "0981774461260",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ae011e95-36ef-4fbb-b216-84ea66602cc6",
                            TwoFactorEnabled = false,
                            UserName = "B18099260"
                        },
                        new
                        {
                            Id = new Guid("ed67b0c8-b211-48f8-ae85-34564f4629f8"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "91d37c3b-5132-4c48-a4e6-e446aa818ebe",
                            Email = "B18099261@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099261@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099261",
                            PasswordHash = "AQAAAAEAACcQAAAAEHza6PyW30tUoGwicHjybOT9Lv9TRsY4GksdAbfS5CJH0DLK9UY6nGTrX/UI0OIzYQ==",
                            PhoneNumber = "0981774461261",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "44e80e0e-3bc6-419c-b466-6dd7e6507111",
                            TwoFactorEnabled = false,
                            UserName = "B18099261"
                        },
                        new
                        {
                            Id = new Guid("765974e9-db14-4a38-993f-c541da5d5996"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fe5e9d22-4bec-4001-a4f0-43e023481007",
                            Email = "B18099262@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099262@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099262",
                            PasswordHash = "AQAAAAEAACcQAAAAEOZl7O9se87ylu6cLsCWZUIRi03vwlbuwb1X05r81Uhs5Ix8+4YbZCdilwXYFJSLQg==",
                            PhoneNumber = "0981774461262",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "01e1d784-7320-45b7-96f2-5453289a63c6",
                            TwoFactorEnabled = false,
                            UserName = "B18099262"
                        },
                        new
                        {
                            Id = new Guid("37f49058-2255-418c-8024-57d6b84bdc1e"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "74bd5f7c-fdb6-4596-ba8d-9f292060a2c3",
                            Email = "B18099263@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099263@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099263",
                            PasswordHash = "AQAAAAEAACcQAAAAEOSlRbjwHtzvYZ8xBeHcgot5pZpxu7niKA74huqeIrOxtlhthPqVWR5KaFkjjcrW2A==",
                            PhoneNumber = "0981774461263",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "31d2d8e2-13da-45a2-b39a-c0fa2fe211ba",
                            TwoFactorEnabled = false,
                            UserName = "B18099263"
                        },
                        new
                        {
                            Id = new Guid("bd342e77-34b4-4c9b-b723-f7c184129b8c"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f3dd0ee2-7763-41f3-8164-9d25f4ace8e1",
                            Email = "B18099264@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099264@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099264",
                            PasswordHash = "AQAAAAEAACcQAAAAEAN7E81Lb7JsPc3Xug44WlsgGYLyG+v5qExCECFpK2g0/fzrXJ8gVh9p91+b6HhqNw==",
                            PhoneNumber = "0981774461264",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e63ad5ed-f618-47b2-8385-18f5dfd9130e",
                            TwoFactorEnabled = false,
                            UserName = "B18099264"
                        },
                        new
                        {
                            Id = new Guid("c75efa30-51e7-465b-abd0-0d39e869587f"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "681f0bc7-2ce2-4fbe-b448-e25b2926231d",
                            Email = "B18099265@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099265@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099265",
                            PasswordHash = "AQAAAAEAACcQAAAAEPHU19PFwWB1SeBNp1JgQJBLzB0PYmcTXZSCCrYbaA1+q9wCkHY1QgWbH85zLN/3qQ==",
                            PhoneNumber = "0981774461265",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "160eeb5d-7fee-4106-9460-71331cc768b1",
                            TwoFactorEnabled = false,
                            UserName = "B18099265"
                        },
                        new
                        {
                            Id = new Guid("b112a17e-e7ad-49f8-a9ee-b206b13ce2ee"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "aea50336-01fd-4eb8-ad38-3cb16016e66d",
                            Email = "B18099266@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099266@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099266",
                            PasswordHash = "AQAAAAEAACcQAAAAEJjmjmRtOBDxz09XLHWo1pTtYcrm/hWosmuN+pPOQiLN4+feyfexJGX2W/wIRdhj5Q==",
                            PhoneNumber = "0981774461266",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e59c78d4-e653-49d6-804e-c7d8174f21e3",
                            TwoFactorEnabled = false,
                            UserName = "B18099266"
                        },
                        new
                        {
                            Id = new Guid("22992e67-305a-466d-a1be-707fa8b37b08"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b6307a81-3452-47a0-92b8-4f33e672fb6d",
                            Email = "B18099267@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099267@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099267",
                            PasswordHash = "AQAAAAEAACcQAAAAEM/D8rrwGwuzw+8lIT95e7A6G7ipLOc2SUNs5rtjegwCGuuEtyu4tc8eg76+k2uEyA==",
                            PhoneNumber = "0981774461267",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "6aef423e-6f41-472e-bb27-01225fbad7d8",
                            TwoFactorEnabled = false,
                            UserName = "B18099267"
                        },
                        new
                        {
                            Id = new Guid("a48602b9-1f8a-4240-b394-0a19a01a0cd0"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "11b5ef4c-acda-4495-9b7b-563932655c5f",
                            Email = "B18099268@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099268@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099268",
                            PasswordHash = "AQAAAAEAACcQAAAAEMGXqw7HAqySV+vtcCfkXccKPEOkY+g7E/4IGOR3gKQAvU2rPFV8bZ/kgcGU1YVUUg==",
                            PhoneNumber = "0981774461268",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "573ed6b4-79ad-478b-a60d-2caeeebe9353",
                            TwoFactorEnabled = false,
                            UserName = "B18099268"
                        },
                        new
                        {
                            Id = new Guid("a2da14ec-3748-4d93-a0e8-702738386d40"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9e65e417-f4c2-4b4b-8bff-62d2ddc77314",
                            Email = "B18099269@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099269@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099269",
                            PasswordHash = "AQAAAAEAACcQAAAAEP8BHI4gtBV3mhly3XPYn83rMaz4vvjG3HweCVKU3m9vResLRnKJXUWXsQX4AQ+3Ag==",
                            PhoneNumber = "0981774461269",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d1496434-6986-498c-9c2e-865736039f16",
                            TwoFactorEnabled = false,
                            UserName = "B18099269"
                        },
                        new
                        {
                            Id = new Guid("57677f45-f195-4462-8271-501207360e58"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ab61f649-3023-4c83-bad1-da1bb97c8c90",
                            Email = "B18099270@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Trúc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099270@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099270",
                            PasswordHash = "AQAAAAEAACcQAAAAEPET/Oe5MCL3r7WOiGhWvN49B2+penltQ4/0g025PejMaH9KA+dWd50EwjeVyItZPQ==",
                            PhoneNumber = "0981774461270",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b4309bd8-9876-4b06-ad94-519610afb8ba",
                            TwoFactorEnabled = false,
                            UserName = "B18099270"
                        },
                        new
                        {
                            Id = new Guid("496b8668-9b42-4344-bf6b-3a59b5fc5359"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "206e990f-c7c5-4287-83c4-f26ce012f9f4",
                            Email = "B18099271@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099271@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099271",
                            PasswordHash = "AQAAAAEAACcQAAAAEF2c7heYVereYvT6UIjvoyn+m21E+8CJ/Fyhnm+iDj+J58J6UAEPxJHX3hcLFM8UrA==",
                            PhoneNumber = "0981774461271",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "2f735206-c353-4885-981f-cecf28a48a94",
                            TwoFactorEnabled = false,
                            UserName = "B18099271"
                        },
                        new
                        {
                            Id = new Guid("f0fb7d04-d4b1-4e52-b072-0e99de40a3e5"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3e7baded-516f-4bc7-b129-db3214f5c3ea",
                            Email = "B18099272@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099272@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099272",
                            PasswordHash = "AQAAAAEAACcQAAAAECMvlwAUStOJ9ONOQOOGR2CiMPkCFphKg0hlbWpBBKI3/4PwaLn10kyvfXI+LMBmOw==",
                            PhoneNumber = "0981774461272",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "3818a6cd-737c-45d5-89eb-b79208cc07fc",
                            TwoFactorEnabled = false,
                            UserName = "B18099272"
                        },
                        new
                        {
                            Id = new Guid("8d051f8e-9d84-4cc9-90b8-bf58ee39a34e"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e6093788-f2ff-4f45-9fe1-2c5c99673718",
                            Email = "B18099273@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099273@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099273",
                            PasswordHash = "AQAAAAEAACcQAAAAEPq8yeIc6t7ZNx+LUiHEVb+pC2k1LrSR2JMnqJpTXrzhMOib99Vxfc7idTFHJC6KHw==",
                            PhoneNumber = "0981774461273",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "50297b28-7137-4863-aca0-5392c8b28c57",
                            TwoFactorEnabled = false,
                            UserName = "B18099273"
                        },
                        new
                        {
                            Id = new Guid("696fcae1-07d7-48bb-aeb6-f5a3567a19c0"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6114f078-04bf-4ee3-b616-440473b83383",
                            Email = "B18099274@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Phạm Thị Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099274@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099274",
                            PasswordHash = "AQAAAAEAACcQAAAAEJNwgkc2o/uaTjIgi8mTOqQiuLPwh4a+DeDhz/2rEbSobnXZkAtnhdx81bFx+lfdgA==",
                            PhoneNumber = "0981774461274",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "567ceced-2151-4d29-b827-b9177f44ec97",
                            TwoFactorEnabled = false,
                            UserName = "B18099274"
                        },
                        new
                        {
                            Id = new Guid("4d9d2c15-bdf6-4211-8dda-cc80b669755c"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6c11f75c-34eb-4789-989f-66274d24fe6e",
                            Email = "B18099275@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099275@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099275",
                            PasswordHash = "AQAAAAEAACcQAAAAEOIHTH01WBJsDAaJEQrNMU+z0V9U68EGZFrJzuLep1XmaQC0OtLM5hJEgT0j0/70gA==",
                            PhoneNumber = "0981774461275",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "4793616a-0cf6-47eb-a933-5979b741dc54",
                            TwoFactorEnabled = false,
                            UserName = "B18099275"
                        },
                        new
                        {
                            Id = new Guid("854a1de0-42f0-4c80-9570-298a2ea4c1f0"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "281b966f-5824-4e8c-b841-2d91371a3cdd",
                            Email = "B18099276@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099276@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099276",
                            PasswordHash = "AQAAAAEAACcQAAAAEAIqW3nVbpN02YxpQJOzioclxJp0LS4MhhQoqRY8lj6PoTx+F1m+xRVkoZ+tpC6jNA==",
                            PhoneNumber = "0981774461276",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7e73cd83-1200-4dc5-8e4a-0e83247d1bf4",
                            TwoFactorEnabled = false,
                            UserName = "B18099276"
                        },
                        new
                        {
                            Id = new Guid("45675f17-ed01-4627-b320-550b81d1895c"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "891b6be9-395f-4c00-bb82-f253a972a9e1",
                            Email = "B18099277@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099277@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099277",
                            PasswordHash = "AQAAAAEAACcQAAAAEOB6/iLXySvUhwLf5YLAphKF8eoyBJUpwnSNxMq65UeuFhvA1fWNwy56S7XGTLfVfw==",
                            PhoneNumber = "0981774461277",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "925b17bd-368c-4dc6-9069-8df42cf57840",
                            TwoFactorEnabled = false,
                            UserName = "B18099277"
                        },
                        new
                        {
                            Id = new Guid("bbd850cb-3ea8-47b7-8e67-4799b79dd4b4"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "e83851e1-3a6a-4c05-8c2d-0134c78c2f02",
                            Email = "B18099278@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Nhựt",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099278@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099278",
                            PasswordHash = "AQAAAAEAACcQAAAAEPKz1YI1u/IOw34SPaOq6JjTBQY2PELkgfzottZmotP1TMbbl4VIQzO0OxpXAceYHw==",
                            PhoneNumber = "0981774461278",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "14c74bdb-847f-440e-be18-338074f3b022",
                            TwoFactorEnabled = false,
                            UserName = "B18099278"
                        },
                        new
                        {
                            Id = new Guid("43c0f9e8-a21f-43b2-949e-850d9ecf40f5"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "9506866d-b141-4868-b5ee-47234382f50f",
                            Email = "B18099279@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099279@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099279",
                            PasswordHash = "AQAAAAEAACcQAAAAEIVvaUdZXgZEf475iASlMtEePqqMkRCM4nqJZIb1LYiWWMzWwU5d2so4omBdtCFgcA==",
                            PhoneNumber = "0981774461279",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "489c8c0e-9042-4bd4-a0bf-3b1a3bbba1d6",
                            TwoFactorEnabled = false,
                            UserName = "B18099279"
                        },
                        new
                        {
                            Id = new Guid("9ac029c2-60a9-43b7-aaff-2a8440035f39"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "255b7cc2-2090-4873-a009-7a9df0c92f43",
                            Email = "B18099280@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099280@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099280",
                            PasswordHash = "AQAAAAEAACcQAAAAEDYYH9/v0OsPWbCwIx6lm9rZB1Y5sdTH7jyJ5enMTRMJljxWpQMGbZ4nBoxw58G/QA==",
                            PhoneNumber = "0981774461280",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "def9f2af-e94e-4f2b-ac3b-e502b387ddf6",
                            TwoFactorEnabled = false,
                            UserName = "B18099280"
                        },
                        new
                        {
                            Id = new Guid("0395246e-3cab-4e29-9711-092650e643ac"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c8fa9cfa-1996-4f5e-bca0-6b35a34e602e",
                            Email = "B18099281@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099281@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099281",
                            PasswordHash = "AQAAAAEAACcQAAAAEGAjHmB+r1lKa9HG3ULoEqX0Z4K65yBnMrB35XflR4wOJHaBFO0ul9U6lk2Kapy7rA==",
                            PhoneNumber = "0981774461281",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "f20aabd6-0003-44f2-86a2-97ed8e109ffb",
                            TwoFactorEnabled = false,
                            UserName = "B18099281"
                        },
                        new
                        {
                            Id = new Guid("98df4859-492b-400e-9bff-9c106ac355fd"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c20d30b9-5c1d-4f89-9baf-4b4bd1e91d75",
                            Email = "B18099282@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Hảo",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099282@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099282",
                            PasswordHash = "AQAAAAEAACcQAAAAEAeEJgVh5rsHVTZwbKF92Xc69Z1S6g3AyWwHtTYqGKFARpiESkfoUsEsiBnCjgy2jg==",
                            PhoneNumber = "0981774461282",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "40216fd2-a099-413b-bc58-1a0825f341e7",
                            TwoFactorEnabled = false,
                            UserName = "B18099282"
                        },
                        new
                        {
                            Id = new Guid("b943af61-6212-46b7-b5f0-ad7412e6d600"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "a0d6135c-f90b-4e80-9bcf-3938d97580aa",
                            Email = "B18099283@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099283@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099283",
                            PasswordHash = "AQAAAAEAACcQAAAAEEQA5Li92OmS0iqDHRvvAIYmskDLsRZP+v4Nc1FWPnQEf7uLisTe5dOKfji9pHePag==",
                            PhoneNumber = "0981774461283",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "917f2692-620d-40b6-8ae6-f2af4d07c1f4",
                            TwoFactorEnabled = false,
                            UserName = "B18099283"
                        },
                        new
                        {
                            Id = new Guid("c2b58604-3210-456d-ae23-df85644b555c"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3e91147f-8b1c-434a-b621-53aa499cdc68",
                            Email = "B18099284@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Văn Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099284@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099284",
                            PasswordHash = "AQAAAAEAACcQAAAAEC4MRAjJ2PPIk6UmF6KwzWljFaX3khq11tbH7R98EMHrI+Zw1N6IG81rAGnQ/jKlEg==",
                            PhoneNumber = "0981774461284",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "08dc18a4-e918-4718-924b-e7bf2fb5762c",
                            TwoFactorEnabled = false,
                            UserName = "B18099284"
                        },
                        new
                        {
                            Id = new Guid("aae9d43f-8ed3-4d2a-8d76-72b0d837efb3"),
                            AccessFailedCount = 0,
                            Address = "Rạch Giá, Kiên Giang",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f7e83965-d0f0-45e9-858a-637e73590194",
                            Email = "B18099285@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099285@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099285",
                            PasswordHash = "AQAAAAEAACcQAAAAECIq5PEWVFiGFMVgLetS0XeWu6UyEoyIyd0l5z9/+0Pn4310H3uGbAS4Ix6RDRl52A==",
                            PhoneNumber = "0981774461285",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8dd1d422-278a-4260-917e-c8529e469306",
                            TwoFactorEnabled = false,
                            UserName = "B18099285"
                        },
                        new
                        {
                            Id = new Guid("f16d9e63-f743-41d3-a2ba-787186a8b719"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "03b4b17a-7fa5-4786-a19d-b06cad6fd49c",
                            Email = "B18099286@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099286@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099286",
                            PasswordHash = "AQAAAAEAACcQAAAAEN2LHoiiHHPawlgvJdBByKGgBxhDSq/md5cnJR8jMJnBX6VP46k+0f+Cx95Q+0JLCA==",
                            PhoneNumber = "0981774461286",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "03fe9765-0288-4cb5-a7dd-d6934d4adb4c",
                            TwoFactorEnabled = false,
                            UserName = "B18099286"
                        },
                        new
                        {
                            Id = new Guid("687c621b-7490-41ac-b133-586cb7bf93f0"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5b5286d4-b334-409c-ab0e-1c6d0c465950",
                            Email = "B18099287@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Hoàng Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099287@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099287",
                            PasswordHash = "AQAAAAEAACcQAAAAEBkmpgXAZLQ5VM1RTJ5udH83xWYYpLRvBx1F/X6geNtMkfR9V+oLtlVpstsb2lDFTQ==",
                            PhoneNumber = "0981774461287",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c9f47e82-68de-4622-abb6-cb344f26fbab",
                            TwoFactorEnabled = false,
                            UserName = "B18099287"
                        },
                        new
                        {
                            Id = new Guid("7ad19b1e-fd5e-4aee-ad80-d206e07ee20c"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "4b369487-49dd-4bf6-bacd-e22ad1b5d608",
                            Email = "B18099288@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Vy",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099288@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099288",
                            PasswordHash = "AQAAAAEAACcQAAAAEOmHVFsyVLIb/6ZZ4tRQkyBb6XguGc+d0HJWbjfTxx0EFkzQIV03EaaPnP+JImFqIw==",
                            PhoneNumber = "0981774461288",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "af30bb9e-9f56-468b-b53d-efe3c13dea73",
                            TwoFactorEnabled = false,
                            UserName = "B18099288"
                        },
                        new
                        {
                            Id = new Guid("ff8c4b26-5b08-4375-923a-22a4aa54a897"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "15cce8ae-5625-4164-8e18-15d387c307f3",
                            Email = "B18099289@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099289@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099289",
                            PasswordHash = "AQAAAAEAACcQAAAAEEZGGgZoXGmrR9unSz/e/0nHpuwmBX7U4f+SlRcawDfl7rqcun4xC9g7iyodJYmRiw==",
                            PhoneNumber = "0981774461289",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "b05f12a6-aea5-430d-b39f-7ea8461cf7d0",
                            TwoFactorEnabled = false,
                            UserName = "B18099289"
                        },
                        new
                        {
                            Id = new Guid("dd0160a4-501c-4f69-a41a-45b2d93969be"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "33af303e-7eb6-4d93-a020-b27b982bb880",
                            Email = "B18099290@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099290@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099290",
                            PasswordHash = "AQAAAAEAACcQAAAAEFiZbESf3tOlfl9UM/tXj/2cLH3pRnfgeYWIpoUAlH/lsBknOx/EItb5e0juvA4AYg==",
                            PhoneNumber = "0981774461290",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "57e1eb2c-115e-457f-a387-5560b49bf414",
                            TwoFactorEnabled = false,
                            UserName = "B18099290"
                        },
                        new
                        {
                            Id = new Guid("f4a99026-6133-4da8-a597-633c700b8588"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7b4bd07d-2141-4b0e-ac19-6dec60ab0bd1",
                            Email = "B18099291@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099291@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099291",
                            PasswordHash = "AQAAAAEAACcQAAAAENM6Ls2MgKFDOKKS8PHerV6xK9C3VRC18K8jJ7MGMWvEblEglZIZAqrVUsTHq7VBjQ==",
                            PhoneNumber = "0981774461291",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c7e86377-2e7e-4fd2-b0ef-c6fa153422ac",
                            TwoFactorEnabled = false,
                            UserName = "B18099291"
                        },
                        new
                        {
                            Id = new Guid("8a6be835-409f-4308-918d-3f395efd9dfd"),
                            AccessFailedCount = 0,
                            Address = "Hà Tiên, Kiên Giang",
                            Birthday = new DateTime(2003, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "bd566766-79bb-426d-9a5f-43b91da9538a",
                            Email = "B18099292@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trần Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099292@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099292",
                            PasswordHash = "AQAAAAEAACcQAAAAEF6cLIXBy1nOZU2Ucy9D3CslTbPpC4kSKPE91ezAZ+Uu+4qH7cACV0Al9Vmnkqwn7Q==",
                            PhoneNumber = "0981774461292",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d06416b2-0954-4a4d-82bc-12497218c980",
                            TwoFactorEnabled = false,
                            UserName = "B18099292"
                        },
                        new
                        {
                            Id = new Guid("c837618c-dc3f-468b-b237-36f91fe28c89"),
                            AccessFailedCount = 0,
                            Address = "Phong Điền, Cần Thơ",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "95f4945f-1a4a-4267-ae38-de18e72bd500",
                            Email = "B18099293@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Nguyễn Thịnh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099293@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099293",
                            PasswordHash = "AQAAAAEAACcQAAAAEGK/IJ9bQrP2ODjHCSfuA+AQq63kMIegJeXqypejgKnm9Tl5IOwifjxdMvMTUmWB7A==",
                            PhoneNumber = "0981774461293",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "8b04517b-9e3f-4d50-9e69-8140bb94ed52",
                            TwoFactorEnabled = false,
                            UserName = "B18099293"
                        },
                        new
                        {
                            Id = new Guid("087afe30-2643-46e6-9e33-b296b5608b6b"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2001, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d5ad8012-bc52-40b1-95f1-28b80080799c",
                            Email = "B18099294@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Nhẫn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099294@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099294",
                            PasswordHash = "AQAAAAEAACcQAAAAEMM52RQNN480OTsK+/ocmb0pLxdAljiJdMDnNgRj8IDZij7WJRFjb+KuubBYTQjA5w==",
                            PhoneNumber = "0981774461294",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "31814944-c909-4df0-bcd8-d2d12f9c8934",
                            TwoFactorEnabled = false,
                            UserName = "B18099294"
                        },
                        new
                        {
                            Id = new Guid("d7032b13-1712-4afa-a15a-316dcd84b37a"),
                            AccessFailedCount = 0,
                            Address = "Phú Quốc, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b0554c1e-0d7f-434a-8101-a33f694e558a",
                            Email = "B18099295@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Lâm",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099295@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099295",
                            PasswordHash = "AQAAAAEAACcQAAAAEPWrDNnvoqgXT/4EE9uWy9cC8FCT6b4ezzWnB/xQIfxPvFoIWHPTIYm6BeI5fGLx/A==",
                            PhoneNumber = "0981774461295",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "ccf2f8ec-5ef7-48e7-8138-cfe531f9115d",
                            TwoFactorEnabled = false,
                            UserName = "B18099295"
                        },
                        new
                        {
                            Id = new Guid("71e479af-3f35-4b06-bce1-a3bd1f4b89f6"),
                            AccessFailedCount = 0,
                            Address = "Ninh Kiêu, Cần Thơ",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7549891f-68d9-4122-92c0-f572792a9f8d",
                            Email = "B18099296@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Trương Văn Khánh",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099296@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099296",
                            PasswordHash = "AQAAAAEAACcQAAAAELUfcW0Fc3q/IGGNA0Y/L3NW7NWdCHw0UB8p5qufW74Mm1+Y77QSUEzTivx2dNjIlQ==",
                            PhoneNumber = "0981774461296",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "372b7bb6-63ea-49ab-aa35-b33a4430c027",
                            TwoFactorEnabled = false,
                            UserName = "B18099296"
                        },
                        new
                        {
                            Id = new Guid("ce967a78-4b40-4382-9fe7-05d0b36829d0"),
                            AccessFailedCount = 0,
                            Address = "Tam Bình, Vĩnh Long",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "80393000-cff6-4f9d-ba2b-7adff63fa84a",
                            Email = "B18099297@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Văn Toàn",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099297@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099297",
                            PasswordHash = "AQAAAAEAACcQAAAAEHcIf2Z1QwAJH/oNuv95Ub6cpP2MVMdUAokaMgJpeJI3A1sGxFpd3AP+1YKRVrXIKA==",
                            PhoneNumber = "0981774461297",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "0e53d1a1-68a8-4c6b-bc76-4edeb16e77be",
                            TwoFactorEnabled = false,
                            UserName = "B18099297"
                        },
                        new
                        {
                            Id = new Guid("976fe0c7-9396-4458-9e29-d8baa2d2d89f"),
                            AccessFailedCount = 0,
                            Address = "Tháp Mười, Đồng Tháp",
                            Birthday = new DateTime(2002, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "586a8b6a-85cf-4ca1-873d-c3c690dbda94",
                            Email = "B18099298@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Thái Lộc",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099298@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099298",
                            PasswordHash = "AQAAAAEAACcQAAAAEI0UdSE7ODo/01vOuI0awXyophvJgUOBsg8GR3A0xuPSHl7B6TsYSvrZa48vk3Mi3g==",
                            PhoneNumber = "0981774461298",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c0793ad6-2066-44a2-845b-9f5c56762a4e",
                            TwoFactorEnabled = false,
                            UserName = "B18099298"
                        },
                        new
                        {
                            Id = new Guid("e91a793c-9caa-48ff-a09c-1de8bd093fb2"),
                            AccessFailedCount = 0,
                            Address = "Giồng Riềng, Kiên Giang",
                            Birthday = new DateTime(2000, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "008ed52d-cb4a-483c-8bd5-525d0fa691d1",
                            Email = "B18099299@student.ctu.edu.vn",
                            EmailConfirmed = true,
                            FullName = "Lê Nghĩa",
                            LockoutEnabled = false,
                            NormalizedEmail = "B18099299@STUDENT.CTU.EDU.VN",
                            NormalizedUserName = "B18099299",
                            PasswordHash = "AQAAAAEAACcQAAAAEE7mq0055cAzhUVYSTziOQhgcIoa0wnCGuDxD7JATr9kFAneQj2OD8Kdariy+wIkHg==",
                            PhoneNumber = "0981774461299",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a980f606-22e3-422e-8725-dcf0907802a1",
                            TwoFactorEnabled = false,
                            UserName = "B18099299"
                        });
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Application", b =>
                {
                    b.Property<int>("IdApplication")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("NameApplication")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("IdApplication")
                        .HasName("PK_APPLICATION");

                    b.ToTable("Application");

                    b.HasData(
                        new
                        {
                            IdApplication = 2,
                            Description = "Không có",
                            NameApplication = "Đơn xin xác nhận (sử dụng trong trường)-(SV chỉ chọn 'Nộp đơn' không cần phải in đơn này)"
                        },
                        new
                        {
                            IdApplication = 4,
                            Description = "Không có",
                            NameApplication = "Đơn xin xác nhận (sử dụng ngoài trường - mẫu đơn này không dùng để vay vốn theo diện chính sách được)"
                        },
                        new
                        {
                            IdApplication = 5,
                            Description = "Không có",
                            NameApplication = "Đơn xin tạm nghỉ học: SV in đơn cho PH ký, GVCV xác nhận, SV nộp tại VPK, Khoa ký xong SV nộp PCTSV"
                        },
                        new
                        {
                            IdApplication = 6,
                            Description = "Không có",
                            NameApplication = "Đơn xin tạm nghỉ học (Để điều trị bệnh: PH ký; GVCV ký; SV nộp tại VPK, Khoa ký xong SV nộp PCTSV)"
                        },
                        new
                        {
                            IdApplication = 7,
                            Description = "Không có",
                            NameApplication = "Đơn xin thôi học (SV in đơn cho phụ huynh ký và nộp tại VPK, Khoa ký xong SV nộp tại PCTSV)"
                        },
                        new
                        {
                            IdApplication = 8,
                            Description = "Không có",
                            NameApplication = "Đơn xét trợ cấp khó khăn đột xuất (SV in đơn, gởi BCS và GVCV xác nhận, sau đó nộp tại VPK)"
                        },
                        new
                        {
                            IdApplication = 9,
                            Description = "Không có",
                            NameApplication = "Đơn xin trợ cấp khó khăn đột xuất"
                        },
                        new
                        {
                            IdApplication = 10,
                            Description = "Không có",
                            NameApplication = "Đơn xin bảo lưu học phần (SV in đơn và nộp tại thư viện khoa CNTT&TT)"
                        },
                        new
                        {
                            IdApplication = 11,
                            Description = "Không có",
                            NameApplication = "Đơn xin miễn học phần Ngoại ngữ, Tin học, GDQP, GDTC (SV in đơn và nộp tại thư viện Khoa CNTT&TT)"
                        },
                        new
                        {
                            IdApplication = 12,
                            Description = "Không có",
                            NameApplication = "Đơn xác nhận (sử dụng  ngoài trường - không cần ghi lý do)-SV chỉ chọn 'Nộp đơn' không cần phải in"
                        },
                        new
                        {
                            IdApplication = 13,
                            Description = "Không có",
                            NameApplication = "Đơn xin vắng thi (Điểm I)"
                        },
                        new
                        {
                            IdApplication = 14,
                            Description = "Không có",
                            NameApplication = "Đơn đề nghị xét miễn và công nhận điểm HP do đã tham gia học tập ở nước ngoài"
                        });
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameClass")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Teacher")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("teacher");

                    b.HasKey("ClassId");

                    b.ToTable("Class");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            NameClass = "Công nghệ thông tin 1",
                            Teacher = "Lâm Nhựt Khang"
                        },
                        new
                        {
                            ClassId = 2,
                            NameClass = "Công nghệ thông tin 2",
                            Teacher = "Trần Cao Đệ"
                        },
                        new
                        {
                            ClassId = 3,
                            NameClass = "Công nghệ thông tin 3",
                            Teacher = "Lâm Nhựt Khang"
                        },
                        new
                        {
                            ClassId = 4,
                            NameClass = "Công nghệ thông tin 4",
                            Teacher = "Thái Minh Tuấn"
                        },
                        new
                        {
                            ClassId = 5,
                            NameClass = "Công nghệ thông tin 5",
                            Teacher = "Thái Minh Tuấn"
                        });
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Course", b =>
                {
                    b.Property<string>("IdCourse")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<string>("NameCourse")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCourse")
                        .HasName("PK__Course__E0B50B816A385DF6");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            IdCourse = "K44",
                            NameCourse = "Khóa 44"
                        },
                        new
                        {
                            IdCourse = "K45",
                            NameCourse = "Khóa 45"
                        },
                        new
                        {
                            IdCourse = "K46",
                            NameCourse = "Khóa 46"
                        },
                        new
                        {
                            IdCourse = "K47",
                            NameCourse = "Khóa 47"
                        },
                        new
                        {
                            IdCourse = "K48",
                            NameCourse = "Khóa 48"
                        });
                });

            modelBuilder.Entity("SupportRegister.Data.Models.DetailRegisterScoreboard", b =>
                {
                    b.Property<int>("RegisId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("YearSemesterIdStart")
                        .HasColumnType("int");

                    b.Property<int>("YearSemesterIdEnd")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("SemesterEnd")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SemesterStart")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("YearEnd")
                        .HasColumnType("int");

                    b.Property<int>("YearStart")
                        .HasColumnType("int");

                    b.HasKey("RegisId", "StudentId", "YearSemesterIdStart", "YearSemesterIdEnd")
                        .HasName("PK__DetailRe__B873A826F6F01A76");

                    b.HasIndex("YearSemesterIdEnd");

                    b.HasIndex("YearSemesterIdStart");

                    b.HasIndex(new[] { "StudentId" }, "IX_DetailRegisterScoreboard_StudentId");

                    b.ToTable("DetailRegisterScoreboard");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.EmailAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAdmin1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("EmailAdmin");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("EmailAdmin");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Feedback", b =>
                {
                    b.Property<int>("IdFeedback")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentFeedback")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("TitleFeedback")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdFeedback")
                        .HasName("PK_FEEDBACKS");

                    b.HasIndex("StudentId");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            IdFeedback = 1,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi1",
                            StudentId = 195,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 1"
                        },
                        new
                        {
                            IdFeedback = 2,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi2",
                            StudentId = 184,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 2"
                        },
                        new
                        {
                            IdFeedback = 3,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi3",
                            StudentId = 257,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 3"
                        },
                        new
                        {
                            IdFeedback = 4,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi4",
                            StudentId = 24,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 4"
                        },
                        new
                        {
                            IdFeedback = 5,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi5",
                            StudentId = 64,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 5"
                        },
                        new
                        {
                            IdFeedback = 6,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi6",
                            StudentId = 174,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 6"
                        },
                        new
                        {
                            IdFeedback = 7,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi7",
                            StudentId = 122,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 7"
                        },
                        new
                        {
                            IdFeedback = 8,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi8",
                            StudentId = 175,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 8"
                        },
                        new
                        {
                            IdFeedback = 9,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi9",
                            StudentId = 106,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 9"
                        },
                        new
                        {
                            IdFeedback = 10,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi10",
                            StudentId = 24,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 10"
                        },
                        new
                        {
                            IdFeedback = 11,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi11",
                            StudentId = 89,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 11"
                        },
                        new
                        {
                            IdFeedback = 12,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi12",
                            StudentId = 209,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 12"
                        },
                        new
                        {
                            IdFeedback = 13,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi13",
                            StudentId = 168,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 13"
                        },
                        new
                        {
                            IdFeedback = 14,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi14",
                            StudentId = 237,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 14"
                        },
                        new
                        {
                            IdFeedback = 15,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi15",
                            StudentId = 270,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 15"
                        },
                        new
                        {
                            IdFeedback = 16,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi16",
                            StudentId = 53,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 16"
                        },
                        new
                        {
                            IdFeedback = 17,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi17",
                            StudentId = 257,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 17"
                        },
                        new
                        {
                            IdFeedback = 18,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi18",
                            StudentId = 275,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 18"
                        },
                        new
                        {
                            IdFeedback = 19,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi19",
                            StudentId = 118,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 19"
                        },
                        new
                        {
                            IdFeedback = 20,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi20",
                            StudentId = 105,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 20"
                        },
                        new
                        {
                            IdFeedback = 21,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi21",
                            StudentId = 15,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 21"
                        },
                        new
                        {
                            IdFeedback = 22,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi22",
                            StudentId = 64,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 22"
                        },
                        new
                        {
                            IdFeedback = 23,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi23",
                            StudentId = 8,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 23"
                        },
                        new
                        {
                            IdFeedback = 24,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi24",
                            StudentId = 230,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 24"
                        },
                        new
                        {
                            IdFeedback = 25,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi25",
                            StudentId = 23,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 25"
                        },
                        new
                        {
                            IdFeedback = 26,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi26",
                            StudentId = 70,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 26"
                        },
                        new
                        {
                            IdFeedback = 27,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi27",
                            StudentId = 284,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 27"
                        },
                        new
                        {
                            IdFeedback = 28,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi28",
                            StudentId = 42,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 28"
                        },
                        new
                        {
                            IdFeedback = 29,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi29",
                            StudentId = 235,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 29"
                        },
                        new
                        {
                            IdFeedback = 30,
                            ContentFeedback = "Nội dung của phản hồi do sinh viên gửi30",
                            StudentId = 296,
                            TitleFeedback = "Sinh Viên Gửi Phản Hồi 30"
                        });
                });

            modelBuilder.Entity("SupportRegister.Data.Models.MinusPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRegis")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameMinus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("MinusPoints");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.RegisterApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime");

                    b.Property<string>("Dear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("IdStatus");

                    b.HasIndex("StudentId");

                    b.ToTable("RegisterApplication");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 1",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(3418),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(3143),
                            Dear = "Kính gửi: 1",
                            IdStatus = 2,
                            StudentId = 59
                        },
                        new
                        {
                            Id = 2,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 2",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5121),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5117),
                            Dear = "Kính gửi: 2",
                            IdStatus = 1,
                            StudentId = 26
                        },
                        new
                        {
                            Id = 3,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 3",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5162),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5161),
                            Dear = "Kính gửi: 3",
                            IdStatus = 2,
                            StudentId = 84
                        },
                        new
                        {
                            Id = 4,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 4",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5201),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5200),
                            Dear = "Kính gửi: 4",
                            IdStatus = 2,
                            StudentId = 158
                        },
                        new
                        {
                            Id = 5,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 5",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5228),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5227),
                            Dear = "Kính gửi: 5",
                            IdStatus = 4,
                            StudentId = 31
                        },
                        new
                        {
                            Id = 6,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 6",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5259),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5257),
                            Dear = "Kính gửi: 6",
                            IdStatus = 4,
                            StudentId = 257
                        },
                        new
                        {
                            Id = 7,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 7",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5288),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5286),
                            Dear = "Kính gửi: 7",
                            IdStatus = 1,
                            StudentId = 81
                        },
                        new
                        {
                            Id = 8,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 8",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5315),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5314),
                            Dear = "Kính gửi: 8",
                            IdStatus = 1,
                            StudentId = 164
                        },
                        new
                        {
                            Id = 9,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 9",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5344),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5342),
                            Dear = "Kính gửi: 9",
                            IdStatus = 1,
                            StudentId = 189
                        },
                        new
                        {
                            Id = 10,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 10",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5379),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5378),
                            Dear = "Kính gửi: 10",
                            IdStatus = 5,
                            StudentId = 206
                        },
                        new
                        {
                            Id = 11,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 11",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5408),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5406),
                            Dear = "Kính gửi: 11",
                            IdStatus = 5,
                            StudentId = 148
                        },
                        new
                        {
                            Id = 12,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 12",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5434),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5433),
                            Dear = "Kính gửi: 12",
                            IdStatus = 1,
                            StudentId = 89
                        },
                        new
                        {
                            Id = 13,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 13",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5462),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5461),
                            Dear = "Kính gửi: 13",
                            IdStatus = 5,
                            StudentId = 80
                        },
                        new
                        {
                            Id = 14,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 14",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5488),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5487),
                            Dear = "Kính gửi: 14",
                            IdStatus = 3,
                            StudentId = 87
                        },
                        new
                        {
                            Id = 15,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 15",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5514),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5513),
                            Dear = "Kính gửi: 15",
                            IdStatus = 2,
                            StudentId = 244
                        },
                        new
                        {
                            Id = 16,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 16",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5598),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5596),
                            Dear = "Kính gửi: 16",
                            IdStatus = 2,
                            StudentId = 13
                        },
                        new
                        {
                            Id = 17,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 17",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5628),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5627),
                            Dear = "Kính gửi: 17",
                            IdStatus = 2,
                            StudentId = 134
                        },
                        new
                        {
                            Id = 18,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 18",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5656),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5654),
                            Dear = "Kính gửi: 18",
                            IdStatus = 2,
                            StudentId = 37
                        },
                        new
                        {
                            Id = 19,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 19",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5682),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5681),
                            Dear = "Kính gửi: 19",
                            IdStatus = 3,
                            StudentId = 48
                        },
                        new
                        {
                            Id = 20,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 20",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5709),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5707),
                            Dear = "Kính gửi: 20",
                            IdStatus = 1,
                            StudentId = 30
                        },
                        new
                        {
                            Id = 21,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 21",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5736),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5735),
                            Dear = "Kính gửi: 21",
                            IdStatus = 4,
                            StudentId = 135
                        },
                        new
                        {
                            Id = 22,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 22",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5764),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5763),
                            Dear = "Kính gửi: 22",
                            IdStatus = 1,
                            StudentId = 140
                        },
                        new
                        {
                            Id = 23,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 23",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5791),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5790),
                            Dear = "Kính gửi: 23",
                            IdStatus = 5,
                            StudentId = 211
                        },
                        new
                        {
                            Id = 24,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 24",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5817),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5816),
                            Dear = "Kính gửi: 24",
                            IdStatus = 2,
                            StudentId = 240
                        },
                        new
                        {
                            Id = 25,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 25",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5843),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5841),
                            Dear = "Kính gửi: 25",
                            IdStatus = 2,
                            StudentId = 215
                        },
                        new
                        {
                            Id = 26,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 26",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5868),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5867),
                            Dear = "Kính gửi: 26",
                            IdStatus = 4,
                            StudentId = 244
                        },
                        new
                        {
                            Id = 27,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 27",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5895),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5893),
                            Dear = "Kính gửi: 27",
                            IdStatus = 5,
                            StudentId = 198
                        },
                        new
                        {
                            Id = 28,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 28",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5923),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5922),
                            Dear = "Kính gửi: 28",
                            IdStatus = 3,
                            StudentId = 173
                        },
                        new
                        {
                            Id = 29,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 29",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5950),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5949),
                            Dear = "Kính gửi: 29",
                            IdStatus = 5,
                            StudentId = 168
                        },
                        new
                        {
                            Id = 30,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 30",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5987),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(5986),
                            Dear = "Kính gửi: 30",
                            IdStatus = 2,
                            StudentId = 183
                        },
                        new
                        {
                            Id = 31,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 31",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6014),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6012),
                            Dear = "Kính gửi: 31",
                            IdStatus = 4,
                            StudentId = 276
                        },
                        new
                        {
                            Id = 32,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 32",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6042),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6040),
                            Dear = "Kính gửi: 32",
                            IdStatus = 5,
                            StudentId = 197
                        },
                        new
                        {
                            Id = 33,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 33",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6067),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6066),
                            Dear = "Kính gửi: 33",
                            IdStatus = 3,
                            StudentId = 63
                        },
                        new
                        {
                            Id = 34,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 34",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6097),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6095),
                            Dear = "Kính gửi: 34",
                            IdStatus = 4,
                            StudentId = 149
                        },
                        new
                        {
                            Id = 35,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 35",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6123),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6122),
                            Dear = "Kính gửi: 35",
                            IdStatus = 2,
                            StudentId = 263
                        },
                        new
                        {
                            Id = 36,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 36",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6149),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6148),
                            Dear = "Kính gửi: 36",
                            IdStatus = 3,
                            StudentId = 5
                        },
                        new
                        {
                            Id = 37,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 37",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6176),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6175),
                            Dear = "Kính gửi: 37",
                            IdStatus = 1,
                            StudentId = 225
                        },
                        new
                        {
                            Id = 38,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 38",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6203),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6202),
                            Dear = "Kính gửi: 38",
                            IdStatus = 5,
                            StudentId = 32
                        },
                        new
                        {
                            Id = 39,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 39",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6229),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6228),
                            Dear = "Kính gửi: 39",
                            IdStatus = 5,
                            StudentId = 53
                        },
                        new
                        {
                            Id = 40,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 40",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6258),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6257),
                            Dear = "Kính gửi: 40",
                            IdStatus = 2,
                            StudentId = 45
                        },
                        new
                        {
                            Id = 41,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 41",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6285),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6284),
                            Dear = "Kính gửi: 41",
                            IdStatus = 4,
                            StudentId = 152
                        },
                        new
                        {
                            Id = 42,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 42",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6311),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6310),
                            Dear = "Kính gửi: 42",
                            IdStatus = 4,
                            StudentId = 203
                        },
                        new
                        {
                            Id = 43,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 43",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6344),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6343),
                            Dear = "Kính gửi: 43",
                            IdStatus = 3,
                            StudentId = 143
                        },
                        new
                        {
                            Id = 44,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 44",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6371),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6369),
                            Dear = "Kính gửi: 44",
                            IdStatus = 1,
                            StudentId = 84
                        },
                        new
                        {
                            Id = 45,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 45",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6398),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6397),
                            Dear = "Kính gửi: 45",
                            IdStatus = 2,
                            StudentId = 43
                        },
                        new
                        {
                            Id = 46,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 46",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6426),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6424),
                            Dear = "Kính gửi: 46",
                            IdStatus = 2,
                            StudentId = 99
                        },
                        new
                        {
                            Id = 47,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 47",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6452),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6451),
                            Dear = "Kính gửi: 47",
                            IdStatus = 3,
                            StudentId = 134
                        },
                        new
                        {
                            Id = 48,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 48",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6479),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6478),
                            Dear = "Kính gửi: 48",
                            IdStatus = 5,
                            StudentId = 94
                        },
                        new
                        {
                            Id = 49,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 49",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6592),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6591),
                            Dear = "Kính gửi: 49",
                            IdStatus = 4,
                            StudentId = 241
                        },
                        new
                        {
                            Id = 50,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 50",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6627),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6626),
                            Dear = "Kính gửi: 50",
                            IdStatus = 4,
                            StudentId = 280
                        },
                        new
                        {
                            Id = 51,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 51",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6654),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6653),
                            Dear = "Kính gửi: 51",
                            IdStatus = 5,
                            StudentId = 18
                        },
                        new
                        {
                            Id = 52,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 52",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6680),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6679),
                            Dear = "Kính gửi: 52",
                            IdStatus = 3,
                            StudentId = 29
                        },
                        new
                        {
                            Id = 53,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 53",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6707),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6706),
                            Dear = "Kính gửi: 53",
                            IdStatus = 2,
                            StudentId = 176
                        },
                        new
                        {
                            Id = 54,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 54",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6734),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6732),
                            Dear = "Kính gửi: 54",
                            IdStatus = 4,
                            StudentId = 34
                        },
                        new
                        {
                            Id = 55,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 55",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6760),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6759),
                            Dear = "Kính gửi: 55",
                            IdStatus = 2,
                            StudentId = 280
                        },
                        new
                        {
                            Id = 56,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 56",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6790),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6789),
                            Dear = "Kính gửi: 56",
                            IdStatus = 4,
                            StudentId = 157
                        },
                        new
                        {
                            Id = 57,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 57",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6818),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6817),
                            Dear = "Kính gửi: 57",
                            IdStatus = 2,
                            StudentId = 186
                        },
                        new
                        {
                            Id = 58,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 58",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6845),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6844),
                            Dear = "Kính gửi: 58",
                            IdStatus = 1,
                            StudentId = 226
                        },
                        new
                        {
                            Id = 59,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 59",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6871),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6870),
                            Dear = "Kính gửi: 59",
                            IdStatus = 2,
                            StudentId = 210
                        },
                        new
                        {
                            Id = 60,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 60",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6898),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6897),
                            Dear = "Kính gửi: 60",
                            IdStatus = 2,
                            StudentId = 265
                        },
                        new
                        {
                            Id = 61,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 61",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6925),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6924),
                            Dear = "Kính gửi: 61",
                            IdStatus = 1,
                            StudentId = 209
                        },
                        new
                        {
                            Id = 62,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 62",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6953),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6952),
                            Dear = "Kính gửi: 62",
                            IdStatus = 3,
                            StudentId = 53
                        },
                        new
                        {
                            Id = 63,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 63",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6981),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6979),
                            Dear = "Kính gửi: 63",
                            IdStatus = 3,
                            StudentId = 285
                        },
                        new
                        {
                            Id = 64,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 64",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7009),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7008),
                            Dear = "Kính gửi: 64",
                            IdStatus = 1,
                            StudentId = 2
                        },
                        new
                        {
                            Id = 65,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 65",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7035),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7034),
                            Dear = "Kính gửi: 65",
                            IdStatus = 3,
                            StudentId = 250
                        },
                        new
                        {
                            Id = 66,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 66",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7064),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7063),
                            Dear = "Kính gửi: 66",
                            IdStatus = 1,
                            StudentId = 187
                        },
                        new
                        {
                            Id = 67,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 67",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7093),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7091),
                            Dear = "Kính gửi: 67",
                            IdStatus = 2,
                            StudentId = 15
                        },
                        new
                        {
                            Id = 68,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 68",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7125),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7124),
                            Dear = "Kính gửi: 68",
                            IdStatus = 5,
                            StudentId = 135
                        },
                        new
                        {
                            Id = 69,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 69",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7152),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7151),
                            Dear = "Kính gửi: 69",
                            IdStatus = 4,
                            StudentId = 237
                        },
                        new
                        {
                            Id = 70,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 70",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7179),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7178),
                            Dear = "Kính gửi: 70",
                            IdStatus = 2,
                            StudentId = 23
                        },
                        new
                        {
                            Id = 71,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 71",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7206),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7204),
                            Dear = "Kính gửi: 71",
                            IdStatus = 4,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 72,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 72",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7233),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7231),
                            Dear = "Kính gửi: 72",
                            IdStatus = 2,
                            StudentId = 209
                        },
                        new
                        {
                            Id = 73,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 73",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7259),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7258),
                            Dear = "Kính gửi: 73",
                            IdStatus = 1,
                            StudentId = 227
                        },
                        new
                        {
                            Id = 74,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 74",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7285),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7284),
                            Dear = "Kính gửi: 74",
                            IdStatus = 2,
                            StudentId = 59
                        },
                        new
                        {
                            Id = 75,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 75",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7312),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7310),
                            Dear = "Kính gửi: 75",
                            IdStatus = 5,
                            StudentId = 33
                        },
                        new
                        {
                            Id = 76,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 76",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7339),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7338),
                            Dear = "Kính gửi: 76",
                            IdStatus = 1,
                            StudentId = 204
                        },
                        new
                        {
                            Id = 77,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 77",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7366),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7364),
                            Dear = "Kính gửi: 77",
                            IdStatus = 2,
                            StudentId = 108
                        },
                        new
                        {
                            Id = 78,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 78",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7392),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7391),
                            Dear = "Kính gửi: 78",
                            IdStatus = 5,
                            StudentId = 253
                        },
                        new
                        {
                            Id = 79,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 79",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7418),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7417),
                            Dear = "Kính gửi: 79",
                            IdStatus = 3,
                            StudentId = 63
                        },
                        new
                        {
                            Id = 80,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 80",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7446),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7444),
                            Dear = "Kính gửi: 80",
                            IdStatus = 2,
                            StudentId = 285
                        },
                        new
                        {
                            Id = 81,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 81",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7476),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7475),
                            Dear = "Kính gửi: 81",
                            IdStatus = 5,
                            StudentId = 56
                        },
                        new
                        {
                            Id = 82,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 82",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7503),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7501),
                            Dear = "Kính gửi: 82",
                            IdStatus = 4,
                            StudentId = 112
                        },
                        new
                        {
                            Id = 83,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 83",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7529),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7528),
                            Dear = "Kính gửi: 83",
                            IdStatus = 1,
                            StudentId = 49
                        },
                        new
                        {
                            Id = 84,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 84",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7557),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7556),
                            Dear = "Kính gửi: 84",
                            IdStatus = 5,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 85,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 85",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7586),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7584),
                            Dear = "Kính gửi: 85",
                            IdStatus = 4,
                            StudentId = 42
                        },
                        new
                        {
                            Id = 86,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 86",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7613),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7611),
                            Dear = "Kính gửi: 86",
                            IdStatus = 4,
                            StudentId = 281
                        },
                        new
                        {
                            Id = 87,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 87",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7638),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7637),
                            Dear = "Kính gửi: 87",
                            IdStatus = 4,
                            StudentId = 160
                        },
                        new
                        {
                            Id = 88,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 88",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7664),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7662),
                            Dear = "Kính gửi: 88",
                            IdStatus = 2,
                            StudentId = 296
                        },
                        new
                        {
                            Id = 89,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 89",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7691),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7690),
                            Dear = "Kính gửi: 89",
                            IdStatus = 2,
                            StudentId = 293
                        },
                        new
                        {
                            Id = 90,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 90",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7719),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7718),
                            Dear = "Kính gửi: 90",
                            IdStatus = 5,
                            StudentId = 222
                        },
                        new
                        {
                            Id = 91,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 91",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7747),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7746),
                            Dear = "Kính gửi: 91",
                            IdStatus = 1,
                            StudentId = 233
                        },
                        new
                        {
                            Id = 92,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 92",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7774),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7773),
                            Dear = "Kính gửi: 92",
                            IdStatus = 2,
                            StudentId = 101
                        },
                        new
                        {
                            Id = 93,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 93",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7799),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7798),
                            Dear = "Kính gửi: 93",
                            IdStatus = 4,
                            StudentId = 78
                        },
                        new
                        {
                            Id = 94,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 94",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7825),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7823),
                            Dear = "Kính gửi: 94",
                            IdStatus = 4,
                            StudentId = 18
                        },
                        new
                        {
                            Id = 95,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 95",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7854),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7852),
                            Dear = "Kính gửi: 95",
                            IdStatus = 4,
                            StudentId = 136
                        },
                        new
                        {
                            Id = 96,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 96",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7880),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7879),
                            Dear = "Kính gửi: 96",
                            IdStatus = 2,
                            StudentId = 61
                        },
                        new
                        {
                            Id = 97,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 97",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7906),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7905),
                            Dear = "Kính gửi: 97",
                            IdStatus = 5,
                            StudentId = 264
                        },
                        new
                        {
                            Id = 98,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 98",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7932),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7931),
                            Dear = "Kính gửi: 98",
                            IdStatus = 5,
                            StudentId = 157
                        },
                        new
                        {
                            Id = 99,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 99",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7960),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7959),
                            Dear = "Kính gửi: 99",
                            IdStatus = 2,
                            StudentId = 158
                        },
                        new
                        {
                            Id = 100,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 100",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7986),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7985),
                            Dear = "Kính gửi: 100",
                            IdStatus = 1,
                            StudentId = 103
                        },
                        new
                        {
                            Id = 101,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 101",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8013),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8012),
                            Dear = "Kính gửi: 101",
                            IdStatus = 5,
                            StudentId = 53
                        },
                        new
                        {
                            Id = 102,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 102",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8040),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8039),
                            Dear = "Kính gửi: 102",
                            IdStatus = 4,
                            StudentId = 224
                        },
                        new
                        {
                            Id = 103,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 103",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8066),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8065),
                            Dear = "Kính gửi: 103",
                            IdStatus = 1,
                            StudentId = 72
                        },
                        new
                        {
                            Id = 104,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 104",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8092),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8091),
                            Dear = "Kính gửi: 104",
                            IdStatus = 5,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 105,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 105",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8119),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8118),
                            Dear = "Kính gửi: 105",
                            IdStatus = 4,
                            StudentId = 24
                        },
                        new
                        {
                            Id = 106,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 106",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8145),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8144),
                            Dear = "Kính gửi: 106",
                            IdStatus = 3,
                            StudentId = 180
                        },
                        new
                        {
                            Id = 107,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 107",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8173),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8171),
                            Dear = "Kính gửi: 107",
                            IdStatus = 2,
                            StudentId = 30
                        },
                        new
                        {
                            Id = 108,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 108",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8202),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8200),
                            Dear = "Kính gửi: 108",
                            IdStatus = 3,
                            StudentId = 266
                        },
                        new
                        {
                            Id = 109,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 109",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8228),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8227),
                            Dear = "Kính gửi: 109",
                            IdStatus = 2,
                            StudentId = 79
                        },
                        new
                        {
                            Id = 110,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 110",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8254),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8252),
                            Dear = "Kính gửi: 110",
                            IdStatus = 2,
                            StudentId = 31
                        },
                        new
                        {
                            Id = 111,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 111",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8281),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8279),
                            Dear = "Kính gửi: 111",
                            IdStatus = 5,
                            StudentId = 160
                        },
                        new
                        {
                            Id = 112,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 112",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8307),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8306),
                            Dear = "Kính gửi: 112",
                            IdStatus = 2,
                            StudentId = 238
                        },
                        new
                        {
                            Id = 113,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 113",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8333),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8332),
                            Dear = "Kính gửi: 113",
                            IdStatus = 1,
                            StudentId = 42
                        },
                        new
                        {
                            Id = 114,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 114",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8361),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8359),
                            Dear = "Kính gửi: 114",
                            IdStatus = 1,
                            StudentId = 47
                        },
                        new
                        {
                            Id = 115,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 115",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8388),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8386),
                            Dear = "Kính gửi: 115",
                            IdStatus = 5,
                            StudentId = 40
                        },
                        new
                        {
                            Id = 116,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 116",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8421),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8419),
                            Dear = "Kính gửi: 116",
                            IdStatus = 3,
                            StudentId = 89
                        },
                        new
                        {
                            Id = 117,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 117",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8453),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8452),
                            Dear = "Kính gửi: 117",
                            IdStatus = 5,
                            StudentId = 204
                        },
                        new
                        {
                            Id = 118,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 118",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8480),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8479),
                            Dear = "Kính gửi: 118",
                            IdStatus = 4,
                            StudentId = 241
                        },
                        new
                        {
                            Id = 119,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 119",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8506),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8505),
                            Dear = "Kính gửi: 119",
                            IdStatus = 4,
                            StudentId = 110
                        },
                        new
                        {
                            Id = 120,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 120",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8532),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8531),
                            Dear = "Kính gửi: 120",
                            IdStatus = 3,
                            StudentId = 129
                        },
                        new
                        {
                            Id = 121,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 121",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8563),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8562),
                            Dear = "Kính gửi: 121",
                            IdStatus = 5,
                            StudentId = 200
                        },
                        new
                        {
                            Id = 122,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 122",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8590),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8588),
                            Dear = "Kính gửi: 122",
                            IdStatus = 5,
                            StudentId = 11
                        },
                        new
                        {
                            Id = 123,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 123",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8616),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8615),
                            Dear = "Kính gửi: 123",
                            IdStatus = 4,
                            StudentId = 82
                        },
                        new
                        {
                            Id = 124,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 124",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8642),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8641),
                            Dear = "Kính gửi: 124",
                            IdStatus = 3,
                            StudentId = 149
                        },
                        new
                        {
                            Id = 125,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 125",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8669),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8668),
                            Dear = "Kính gửi: 125",
                            IdStatus = 5,
                            StudentId = 66
                        },
                        new
                        {
                            Id = 126,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 126",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8697),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8695),
                            Dear = "Kính gửi: 126",
                            IdStatus = 5,
                            StudentId = 167
                        },
                        new
                        {
                            Id = 127,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 127",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8723),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8722),
                            Dear = "Kính gửi: 127",
                            IdStatus = 5,
                            StudentId = 187
                        },
                        new
                        {
                            Id = 128,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 128",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8749),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8748),
                            Dear = "Kính gửi: 128",
                            IdStatus = 5,
                            StudentId = 133
                        },
                        new
                        {
                            Id = 129,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 129",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8776),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8775),
                            Dear = "Kính gửi: 129",
                            IdStatus = 5,
                            StudentId = 44
                        },
                        new
                        {
                            Id = 130,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 130",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8805),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8804),
                            Dear = "Kính gửi: 130",
                            IdStatus = 4,
                            StudentId = 215
                        },
                        new
                        {
                            Id = 131,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 131",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8836),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8835),
                            Dear = "Kính gửi: 131",
                            IdStatus = 3,
                            StudentId = 159
                        },
                        new
                        {
                            Id = 132,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 132",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8864),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8863),
                            Dear = "Kính gửi: 132",
                            IdStatus = 2,
                            StudentId = 52
                        },
                        new
                        {
                            Id = 133,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 133",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8890),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8889),
                            Dear = "Kính gửi: 133",
                            IdStatus = 5,
                            StudentId = 273
                        },
                        new
                        {
                            Id = 134,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 134",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8915),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8914),
                            Dear = "Kính gửi: 134",
                            IdStatus = 2,
                            StudentId = 250
                        },
                        new
                        {
                            Id = 135,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 135",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8942),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8941),
                            Dear = "Kính gửi: 135",
                            IdStatus = 1,
                            StudentId = 106
                        },
                        new
                        {
                            Id = 136,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 136",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8970),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8968),
                            Dear = "Kính gửi: 136",
                            IdStatus = 3,
                            StudentId = 250
                        },
                        new
                        {
                            Id = 137,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 137",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8996),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(8995),
                            Dear = "Kính gửi: 137",
                            IdStatus = 2,
                            StudentId = 241
                        },
                        new
                        {
                            Id = 138,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 138",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9034),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9032),
                            Dear = "Kính gửi: 138",
                            IdStatus = 3,
                            StudentId = 172
                        },
                        new
                        {
                            Id = 139,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 139",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9071),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9070),
                            Dear = "Kính gửi: 139",
                            IdStatus = 3,
                            StudentId = 45
                        },
                        new
                        {
                            Id = 140,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 140",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9098),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9097),
                            Dear = "Kính gửi: 140",
                            IdStatus = 4,
                            StudentId = 34
                        },
                        new
                        {
                            Id = 141,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 141",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9126),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9125),
                            Dear = "Kính gửi: 141",
                            IdStatus = 4,
                            StudentId = 26
                        },
                        new
                        {
                            Id = 142,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 142",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9151),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9150),
                            Dear = "Kính gửi: 142",
                            IdStatus = 5,
                            StudentId = 298
                        },
                        new
                        {
                            Id = 143,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 143",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9178),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9177),
                            Dear = "Kính gửi: 143",
                            IdStatus = 4,
                            StudentId = 182
                        },
                        new
                        {
                            Id = 144,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 144",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9204),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9203),
                            Dear = "Kính gửi: 144",
                            IdStatus = 3,
                            StudentId = 295
                        },
                        new
                        {
                            Id = 145,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 145",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9235),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9233),
                            Dear = "Kính gửi: 145",
                            IdStatus = 4,
                            StudentId = 180
                        },
                        new
                        {
                            Id = 146,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 146",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9262),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9261),
                            Dear = "Kính gửi: 146",
                            IdStatus = 5,
                            StudentId = 198
                        },
                        new
                        {
                            Id = 147,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 147",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9289),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9288),
                            Dear = "Kính gửi: 147",
                            IdStatus = 2,
                            StudentId = 126
                        },
                        new
                        {
                            Id = 148,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 148",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9316),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9315),
                            Dear = "Kính gửi: 148",
                            IdStatus = 1,
                            StudentId = 112
                        },
                        new
                        {
                            Id = 149,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 149",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9343),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9342),
                            Dear = "Kính gửi: 149",
                            IdStatus = 4,
                            StudentId = 19
                        },
                        new
                        {
                            Id = 150,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 150",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9370),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9369),
                            Dear = "Kính gửi: 150",
                            IdStatus = 5,
                            StudentId = 212
                        },
                        new
                        {
                            Id = 151,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 151",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9397),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9395),
                            Dear = "Kính gửi: 151",
                            IdStatus = 2,
                            StudentId = 35
                        },
                        new
                        {
                            Id = 152,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 152",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9486),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9484),
                            Dear = "Kính gửi: 152",
                            IdStatus = 2,
                            StudentId = 192
                        },
                        new
                        {
                            Id = 153,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 153",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9514),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9513),
                            Dear = "Kính gửi: 153",
                            IdStatus = 3,
                            StudentId = 88
                        },
                        new
                        {
                            Id = 154,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 154",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9540),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9539),
                            Dear = "Kính gửi: 154",
                            IdStatus = 2,
                            StudentId = 212
                        },
                        new
                        {
                            Id = 155,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 155",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9568),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9566),
                            Dear = "Kính gửi: 155",
                            IdStatus = 3,
                            StudentId = 254
                        },
                        new
                        {
                            Id = 156,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 156",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9595),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9594),
                            Dear = "Kính gửi: 156",
                            IdStatus = 1,
                            StudentId = 262
                        },
                        new
                        {
                            Id = 157,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 157",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9622),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9621),
                            Dear = "Kính gửi: 157",
                            IdStatus = 1,
                            StudentId = 171
                        },
                        new
                        {
                            Id = 158,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 158",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9655),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9654),
                            Dear = "Kính gửi: 158",
                            IdStatus = 1,
                            StudentId = 142
                        },
                        new
                        {
                            Id = 159,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 159",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9682),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9681),
                            Dear = "Kính gửi: 159",
                            IdStatus = 3,
                            StudentId = 182
                        },
                        new
                        {
                            Id = 160,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 160",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9709),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9708),
                            Dear = "Kính gửi: 160",
                            IdStatus = 4,
                            StudentId = 75
                        },
                        new
                        {
                            Id = 161,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 161",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9736),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9734),
                            Dear = "Kính gửi: 161",
                            IdStatus = 1,
                            StudentId = 257
                        },
                        new
                        {
                            Id = 162,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 162",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9764),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9763),
                            Dear = "Kính gửi: 162",
                            IdStatus = 1,
                            StudentId = 57
                        },
                        new
                        {
                            Id = 163,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 163",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9790),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9789),
                            Dear = "Kính gửi: 163",
                            IdStatus = 5,
                            StudentId = 136
                        },
                        new
                        {
                            Id = 164,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 164",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9816),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9815),
                            Dear = "Kính gửi: 164",
                            IdStatus = 1,
                            StudentId = 143
                        },
                        new
                        {
                            Id = 165,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 165",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9841),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9840),
                            Dear = "Kính gửi: 165",
                            IdStatus = 4,
                            StudentId = 7
                        },
                        new
                        {
                            Id = 166,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 166",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9868),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9867),
                            Dear = "Kính gửi: 166",
                            IdStatus = 1,
                            StudentId = 180
                        },
                        new
                        {
                            Id = 167,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 167",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9893),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9892),
                            Dear = "Kính gửi: 167",
                            IdStatus = 1,
                            StudentId = 135
                        },
                        new
                        {
                            Id = 168,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 168",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9919),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9918),
                            Dear = "Kính gửi: 168",
                            IdStatus = 5,
                            StudentId = 265
                        },
                        new
                        {
                            Id = 169,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 169",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9945),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9944),
                            Dear = "Kính gửi: 169",
                            IdStatus = 3,
                            StudentId = 40
                        },
                        new
                        {
                            Id = 170,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 170",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9972),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9971),
                            Dear = "Kính gửi: 170",
                            IdStatus = 1,
                            StudentId = 187
                        },
                        new
                        {
                            Id = 171,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 171",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9999),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(9998),
                            Dear = "Kính gửi: 171",
                            IdStatus = 1,
                            StudentId = 248
                        },
                        new
                        {
                            Id = 172,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 172",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(29),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(28),
                            Dear = "Kính gửi: 172",
                            IdStatus = 3,
                            StudentId = 63
                        },
                        new
                        {
                            Id = 173,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 173",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(57),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(56),
                            Dear = "Kính gửi: 173",
                            IdStatus = 2,
                            StudentId = 155
                        },
                        new
                        {
                            Id = 174,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 174",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(84),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(82),
                            Dear = "Kính gửi: 174",
                            IdStatus = 5,
                            StudentId = 94
                        },
                        new
                        {
                            Id = 175,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 175",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(110),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(109),
                            Dear = "Kính gửi: 175",
                            IdStatus = 1,
                            StudentId = 291
                        },
                        new
                        {
                            Id = 176,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 176",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(137),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(136),
                            Dear = "Kính gửi: 176",
                            IdStatus = 1,
                            StudentId = 120
                        },
                        new
                        {
                            Id = 177,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 177",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(165),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(163),
                            Dear = "Kính gửi: 177",
                            IdStatus = 5,
                            StudentId = 150
                        },
                        new
                        {
                            Id = 178,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 178",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(192),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(191),
                            Dear = "Kính gửi: 178",
                            IdStatus = 1,
                            StudentId = 164
                        },
                        new
                        {
                            Id = 179,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 179",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(219),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(218),
                            Dear = "Kính gửi: 179",
                            IdStatus = 4,
                            StudentId = 8
                        },
                        new
                        {
                            Id = 180,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 180",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(245),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(244),
                            Dear = "Kính gửi: 180",
                            IdStatus = 4,
                            StudentId = 148
                        },
                        new
                        {
                            Id = 181,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 181",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(271),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(270),
                            Dear = "Kính gửi: 181",
                            IdStatus = 2,
                            StudentId = 224
                        },
                        new
                        {
                            Id = 182,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 182",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(298),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(297),
                            Dear = "Kính gửi: 182",
                            IdStatus = 5,
                            StudentId = 4
                        },
                        new
                        {
                            Id = 183,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 183",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(324),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(322),
                            Dear = "Kính gửi: 183",
                            IdStatus = 2,
                            StudentId = 93
                        },
                        new
                        {
                            Id = 184,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 184",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(351),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(350),
                            Dear = "Kính gửi: 184",
                            IdStatus = 5,
                            StudentId = 226
                        },
                        new
                        {
                            Id = 185,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 185",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(382),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(381),
                            Dear = "Kính gửi: 185",
                            IdStatus = 5,
                            StudentId = 45
                        },
                        new
                        {
                            Id = 186,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 186",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(409),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(408),
                            Dear = "Kính gửi: 186",
                            IdStatus = 4,
                            StudentId = 290
                        },
                        new
                        {
                            Id = 187,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 187",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(436),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(435),
                            Dear = "Kính gửi: 187",
                            IdStatus = 1,
                            StudentId = 124
                        },
                        new
                        {
                            Id = 188,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 188",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(463),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(461),
                            Dear = "Kính gửi: 188",
                            IdStatus = 1,
                            StudentId = 37
                        },
                        new
                        {
                            Id = 189,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 189",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(489),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(488),
                            Dear = "Kính gửi: 189",
                            IdStatus = 1,
                            StudentId = 252
                        },
                        new
                        {
                            Id = 190,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 190",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(516),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(514),
                            Dear = "Kính gửi: 190",
                            IdStatus = 2,
                            StudentId = 204
                        },
                        new
                        {
                            Id = 191,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 191",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(542),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(541),
                            Dear = "Kính gửi: 191",
                            IdStatus = 5,
                            StudentId = 168
                        },
                        new
                        {
                            Id = 192,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 192",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(569),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(567),
                            Dear = "Kính gửi: 192",
                            IdStatus = 4,
                            StudentId = 214
                        },
                        new
                        {
                            Id = 193,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 193",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(595),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(594),
                            Dear = "Kính gửi: 193",
                            IdStatus = 3,
                            StudentId = 27
                        },
                        new
                        {
                            Id = 194,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 194",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(623),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(622),
                            Dear = "Kính gửi: 194",
                            IdStatus = 3,
                            StudentId = 238
                        },
                        new
                        {
                            Id = 195,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 195",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(650),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(649),
                            Dear = "Kính gửi: 195",
                            IdStatus = 4,
                            StudentId = 36
                        },
                        new
                        {
                            Id = 196,
                            ApplicationId = 5,
                            Content = "Lý do xin xác nhận: 196",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(675),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(674),
                            Dear = "Kính gửi: 196",
                            IdStatus = 5,
                            StudentId = 99
                        },
                        new
                        {
                            Id = 197,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 197",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(701),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(700),
                            Dear = "Kính gửi: 197",
                            IdStatus = 4,
                            StudentId = 292
                        },
                        new
                        {
                            Id = 198,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 198",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(728),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(727),
                            Dear = "Kính gửi: 198",
                            IdStatus = 1,
                            StudentId = 216
                        },
                        new
                        {
                            Id = 199,
                            ApplicationId = 2,
                            Content = "Lý do xin xác nhận: 199",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(760),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(759),
                            Dear = "Kính gửi: 199",
                            IdStatus = 2,
                            StudentId = 14
                        },
                        new
                        {
                            Id = 200,
                            ApplicationId = 4,
                            Content = "Lý do xin xác nhận: 200",
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(787),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 669, DateTimeKind.Local).AddTicks(786),
                            Dear = "Kính gửi: 200",
                            IdStatus = 4,
                            StudentId = 270
                        });
                });

            modelBuilder.Entity("SupportRegister.Data.Models.RegisterScoreboard", b =>
                {
                    b.Property<int>("IdRegisterScoreboard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateReceived")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdStatus")
                        .HasColumnType("int");

                    b.HasKey("IdRegisterScoreboard")
                        .HasName("PK_REGISTERSCOREBOARD");

                    b.HasIndex("IdStatus");

                    b.ToTable("RegisterScoreboard");

                    b.HasData(
                        new
                        {
                            IdRegisterScoreboard = 1,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(3368),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 654, DateTimeKind.Local).AddTicks(6408),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 2,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5552),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5543),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 3,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5594),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5592),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 4,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5617),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5616),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 5,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5638),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5637),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 6,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5673),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5671),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 7,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5695),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5694),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 8,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5717),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5715),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 9,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5740),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5738),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 10,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5791),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5790),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 11,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5814),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5813),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 12,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5835),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5833),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 13,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5855),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5854),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 14,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5876),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5875),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 15,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5905),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5896),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 16,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5927),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5925),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 17,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5948),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5946),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 18,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5971),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5970),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 19,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5992),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(5991),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 20,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6013),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6012),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 21,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6035),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6034),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 22,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6056),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6055),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 23,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6077),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6076),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 24,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6098),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6097),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 25,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6119),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6118),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 26,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6139),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6138),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 27,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6164),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6162),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 28,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6185),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6184),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 29,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6207),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6205),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 30,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6229),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6228),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 31,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6251),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6250),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 32,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6272),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6271),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 33,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6295),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6293),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 34,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6319),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6317),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 35,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6341),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6340),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 36,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6363),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6362),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 37,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6385),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6384),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 38,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6406),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6405),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 39,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6429),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6427),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 40,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6450),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6448),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 41,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6471),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6469),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 42,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6493),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6491),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 43,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6518),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6517),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 44,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6539),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6538),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 45,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6561),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6559),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 46,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6582),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6581),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 47,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6604),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6603),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 48,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6626),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6624),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 49,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6648),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6646),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 50,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6669),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6667),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 51,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6689),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6688),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 52,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6711),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6710),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 53,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6731),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6730),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 54,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6753),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6751),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 55,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6774),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6773),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 56,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6795),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6794),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 57,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6817),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6815),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 58,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6839),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6838),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 59,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6860),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6858),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 60,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6893),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6892),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 61,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6916),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6914),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 62,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6937),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6936),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 63,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6959),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6957),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 64,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6980),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6978),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 65,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7000),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(6999),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 66,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7024),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7022),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 67,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7045),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7043),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 68,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7067),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7066),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 69,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7089),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7087),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 70,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7109),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7108),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 71,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7130),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7129),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 72,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7151),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7150),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 73,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7172),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7170),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 74,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7193),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7192),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 75,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7218),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7217),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 76,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7335),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7238),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 77,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7358),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7357),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 78,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7378),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7377),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 79,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7398),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7396),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 80,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7418),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7417),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 81,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7440),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7438),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 82,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7461),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7459),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 83,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7481),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7479),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 84,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7501),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7500),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 85,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7523),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7521),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 86,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7544),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7542),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 87,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7565),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7564),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 88,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7587),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7586),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 89,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7610),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7609),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 90,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7639),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7637),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 91,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7660),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7658),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 92,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7682),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7681),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 93,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7708),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7706),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 94,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7728),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7726),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 95,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7851),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7849),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 96,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7873),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7871),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 97,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7893),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7892),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 98,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7914),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7913),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 99,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7935),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7933),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 100,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7956),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7954),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 101,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7978),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7976),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 102,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7999),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(7998),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 103,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8021),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8019),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 104,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8042),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8040),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 105,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8063),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8061),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 106,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8083),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8081),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 107,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8104),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8102),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 108,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8128),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8127),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 109,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8150),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8149),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 110,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8176),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8174),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 111,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8198),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8196),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 112,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8224),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8223),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 113,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8246),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8245),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 114,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8267),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8266),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 115,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8288),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8287),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 116,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8308),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8307),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 117,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8329),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8328),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 118,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8351),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8350),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 119,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8371),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8370),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 120,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8393),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8391),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 121,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8414),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8412),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 122,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8435),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8432),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 123,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8456),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8455),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 124,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8476),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8475),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 125,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8496),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8495),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 126,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8517),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8516),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 127,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8542),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8541),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 128,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8563),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8562),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 129,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8584),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8583),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 130,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8610),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8608),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 131,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8631),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8630),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 132,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8653),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8651),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 133,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8673),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8671),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 134,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8693),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8692),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 135,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8713),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8712),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 136,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8735),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8734),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 137,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8756),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8754),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 138,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8777),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8775),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 139,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8798),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8796),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 140,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8823),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8822),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 141,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8843),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8842),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 142,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8864),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8863),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 143,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8885),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8883),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 144,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8905),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8904),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 145,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8926),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8925),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 146,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8947),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8945),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 147,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8967),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8965),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 148,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8987),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(8985),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 149,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9007),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9006),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 150,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9027),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9026),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 151,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9050),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9047),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 152,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9070),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9069),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 153,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9091),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9089),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 154,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9111),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9109),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 155,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9132),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9130),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 156,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9153),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9151),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 157,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9175),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9172),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 158,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9202),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9200),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 159,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9223),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9221),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 160,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9243),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9242),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 161,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9264),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9263),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 162,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9284),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9283),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 163,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9305),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9304),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 164,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9327),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9325),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 165,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9347),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9346),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 166,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9368),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9367),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 167,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9389),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9388),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 168,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9410),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9409),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 169,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9431),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9429),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 170,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9451),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9450),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 171,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9472),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9471),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 172,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9493),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9491),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 173,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9515),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9514),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 174,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9537),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9536),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 175,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9562),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9561),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 176,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9583),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9582),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 177,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9604),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9603),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 178,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9625),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9624),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 179,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9646),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9645),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 180,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9667),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9666),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 181,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9689),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9688),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 182,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9710),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9708),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 183,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9730),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9728),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 184,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9750),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9749),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 185,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9772),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9770),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 186,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9795),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9793),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 187,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9816),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9814),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 188,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9836),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9835),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 189,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9856),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9855),
                            IdStatus = 3
                        },
                        new
                        {
                            IdRegisterScoreboard = 190,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9877),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9876),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 191,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9898),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9896),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 192,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9922),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9921),
                            IdStatus = 4
                        },
                        new
                        {
                            IdRegisterScoreboard = 193,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9943),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9941),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 194,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9964),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9962),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 195,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9986),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 667, DateTimeKind.Local).AddTicks(9984),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 196,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(7),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(6),
                            IdStatus = 1
                        },
                        new
                        {
                            IdRegisterScoreboard = 197,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(27),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(26),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 198,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(49),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(47),
                            IdStatus = 5
                        },
                        new
                        {
                            IdRegisterScoreboard = 199,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(69),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(68),
                            IdStatus = 2
                        },
                        new
                        {
                            IdRegisterScoreboard = 200,
                            DateReceived = new DateTime(2022, 11, 19, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(89),
                            DateRegister = new DateTime(2022, 11, 17, 17, 54, 59, 668, DateTimeKind.Local).AddTicks(88),
                            IdStatus = 2
                        });
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Semester", b =>
                {
                    b.Property<int>("IdSemester")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameSemester")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("IdSemester")
                        .HasName("PK_SEMESTER");

                    b.ToTable("Semester");

                    b.HasData(
                        new
                        {
                            IdSemester = 1,
                            NameSemester = "Học kỳ I"
                        },
                        new
                        {
                            IdSemester = 2,
                            NameSemester = "Học kỳ II"
                        },
                        new
                        {
                            IdSemester = 3,
                            NameSemester = "Học kỳ hè"
                        });
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Đăng ký"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hủy đăng ký"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Xác nhận yêu cầu"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Lưu đơn"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Đã in"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Đã nhận"
                        });
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("IdCourse")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .IsFixedLength(true);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("YearEnd")
                        .HasColumnType("int");

                    b.Property<int>("YearStart")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.HasIndex("IdCourse");

                    b.HasIndex("UserId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("ed67b0c8-b211-48f8-ae85-34564f4629f8"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 2,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("c1400430-6785-4c37-9bde-3bc2cea7b75e"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 3,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("30b25c79-dbc5-41f6-8934-69f4f71b3598"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 4,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("43c0f9e8-a21f-43b2-949e-850d9ecf40f5"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 5,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("290053b1-5997-4822-9dc4-8e318761d6aa"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 6,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("d89edb22-9f86-4a86-91cc-953fe5dc1612"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 7,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("fe4c6c23-0cfc-4b25-aeb0-d4c160c48306"),
                            YearEnd = 2024,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 8,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("0803dc46-770f-461c-9e73-94deffbc55d7"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 9,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("15c42bb2-37a3-49f9-859f-119ca3b42c20"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 10,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("611dfe3b-6099-4dc5-81ac-59f0bea04757"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 11,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("1074b04d-e70a-4e15-b789-a210b8fc64d6"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 12,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("f16d9e63-f743-41d3-a2ba-787186a8b719"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 13,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("0cdaa3a4-1d98-470a-82c6-e4f5f52e7606"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 14,
                            ClassId = 1,
                            IdCourse = "K46",
                            UserId = new Guid("afca891b-c143-4bd1-b2d0-d26cc8775e17"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 15,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("9a645d43-0bc2-4008-a790-1a6d3b996543"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 16,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("8be85bd5-1095-46dd-98de-f158021c9f12"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 17,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("87dbd58a-08be-4527-9f0b-a5637720c6bd"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 18,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("882dc940-9666-4e52-82b1-83f4b2bb603f"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 19,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("dd60dbb4-2ca7-4ce3-b6bc-b0d17ffb300b"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 20,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("71e479af-3f35-4b06-bce1-a3bd1f4b89f6"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 21,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("ec7919a8-a3c2-470d-bf29-e5c186a4ac14"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 22,
                            ClassId = 4,
                            IdCourse = "K46",
                            UserId = new Guid("d9b7128e-5c58-499a-9843-c527a16745c5"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 23,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("765974e9-db14-4a38-993f-c541da5d5996"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 24,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("c837618c-dc3f-468b-b237-36f91fe28c89"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 25,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("087afe30-2643-46e6-9e33-b296b5608b6b"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 26,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("0afc92af-e16b-4086-bbb1-a7bb3fb0a254"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 27,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("50521053-b9d9-464d-b5e8-00c48fc4995c"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 28,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("aff5e306-75cb-4779-b1ab-3d6cf23de72f"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 29,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("3f87e1c7-be78-484f-8f0f-6789984920b2"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 30,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("e0ee13a6-a833-40a6-b8a4-a7a021ba3338"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 31,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("25711150-b78e-4046-a858-1f526eae5443"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 32,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("c0dbe0c0-f0c3-4843-9d17-295d90644139"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 33,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("f3205131-ae39-4762-a936-f8cfed27d96b"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 34,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("09a1b152-971e-4a25-b550-85439e305fe5"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 35,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("4e76012a-7b95-4513-9d46-91cd17741a2c"),
                            YearEnd = 2024,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 36,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("e1607665-0b43-4b68-8132-86554a0e5f07"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 37,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("db77656b-6e0a-49ea-95d1-44d2cfc58558"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 38,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("0d5327a5-6b00-4c5b-8983-3ec8d6e965fc"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 39,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("dad2543e-6ce6-4db3-be0e-42361aae6382"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 40,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("496b8668-9b42-4344-bf6b-3a59b5fc5359"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 41,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("9cdce684-615e-47be-a1bb-1992bb1a63a5"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 42,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("98c56511-afa2-4f6e-b110-4d44836299e8"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 43,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("8a80c189-c866-4a48-b887-cd772d106aa0"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 44,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("05ef55e7-1566-4e42-a955-020e90a69802"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 45,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("e920a5a4-3415-4a1d-8e2a-8982c4386ea6"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 46,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("bd94c7d1-68d8-4447-9654-0d820a8ccc69"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 47,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("d7032b13-1712-4afa-a15a-316dcd84b37a"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 48,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("e6d2c7ba-035a-4d54-8bb9-00db7e5c6173"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 49,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("25711150-b78e-4046-a858-1f526eae5443"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 50,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("d2ab768b-d650-4b06-a57d-2d7d0bc63813"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 51,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("2a867f04-0fca-4dce-9ab2-27f49d9c7613"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 52,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("1b3baea5-cd59-4166-9ed6-feb23a451b82"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 53,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("84fdf487-ca09-4e9f-901f-55d988398187"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 54,
                            ClassId = 4,
                            IdCourse = "K46",
                            UserId = new Guid("c86a5fb6-07df-4994-8f29-028964372568"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 55,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("78bcc23e-c49f-47ba-a5c0-2bb504be62e1"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 56,
                            ClassId = 1,
                            IdCourse = "K46",
                            UserId = new Guid("5dd9a5d7-c2ca-40c7-a066-f626a8f2d2d2"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 57,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("5af29074-61c8-4718-9389-53e98d3572df"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 58,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("462617dd-e276-4066-946a-79736c9f4d91"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 59,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("f7833a56-4305-4e12-b4ed-5673277653f3"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 60,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("90022be0-2de5-4ea3-afc7-9d93d2fe56c0"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 61,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("8ac6839e-3dc9-447e-ac60-675f2ceb7b92"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 62,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("a48602b9-1f8a-4240-b394-0a19a01a0cd0"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 63,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("9324178a-f398-4e69-bab0-23897f36bb24"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 64,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("3d44ceab-8216-47bf-90c1-b1ac5607ebc4"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 65,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("98dccdd4-d8ae-4d50-bf78-709f0aaa21d5"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 66,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("4d2b4f64-2d07-4d55-b46e-eb4a54774e70"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 67,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("a01af778-d757-4022-8673-44baab055929"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 68,
                            ClassId = 1,
                            IdCourse = "K46",
                            UserId = new Guid("ed80b63f-3476-4ecb-8b72-90c81251d3be"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 69,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("15c42bb2-37a3-49f9-859f-119ca3b42c20"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 70,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("eef44e4d-8de7-4675-8949-84bf629809b9"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 71,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("aa14e86a-6f2c-4200-850c-7dd7360a08c9"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 72,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("c5a4ac50-9fdc-4715-bc0c-ba0645587b9d"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 73,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("bed10234-220c-4521-865f-92d9cc2b6f23"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 74,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("86cdf93f-7053-493d-a389-191383b73a9b"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 75,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("6ce9d59b-0a62-4a94-b515-39084e7da946"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 76,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("d623f5be-a2b6-4db3-9b6c-9f2e62175c88"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 77,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("8a6be835-409f-4308-918d-3f395efd9dfd"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 78,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("87dbd58a-08be-4527-9f0b-a5637720c6bd"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 79,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("87dbd58a-08be-4527-9f0b-a5637720c6bd"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 80,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("dabff61d-e067-4c3d-b0ba-834d4c466f97"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 81,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("ae14c8c6-f241-493d-8a7f-ef9a3b35894c"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 82,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("cc571974-7fc5-43f9-ab15-8f17111cd6f7"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 83,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("7c3810f4-46c5-4fe6-9641-71f4c7c646b4"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 84,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("29d46f1f-212a-4bc6-848a-ef55c142d330"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 85,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("0803dc46-770f-461c-9e73-94deffbc55d7"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 86,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("43c0f9e8-a21f-43b2-949e-850d9ecf40f5"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 87,
                            ClassId = 1,
                            IdCourse = "K46",
                            UserId = new Guid("86cdf93f-7053-493d-a389-191383b73a9b"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 88,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("3fd80720-04a1-4c86-954e-41377a8a2f4e"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 89,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("e6d2c7ba-035a-4d54-8bb9-00db7e5c6173"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 90,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("257a18c5-d271-43f1-b209-730e310cffce"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 91,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("7099201c-bc51-4f0e-a888-e68190a878ee"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 92,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("f0fb7d04-d4b1-4e52-b072-0e99de40a3e5"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 93,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("7e898cd0-2d72-4ac3-b1e6-601e3edfad00"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 94,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("522e0e93-008f-4d45-8ec8-1e370538edf4"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 95,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("37f49058-2255-418c-8024-57d6b84bdc1e"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 96,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("e7ce9ae0-5879-48d2-a52c-e933b77f1f1a"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 97,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("98abd83b-2b91-45c9-97f0-cbead87b40a2"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 98,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("d4cbee19-5748-44c4-a61d-dc2ddd2ac53c"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 99,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("95d89305-f31b-4c24-bd30-eda39134f9cd"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 100,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("81161214-bbb5-4fae-bce4-7613dc84bb3f"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 101,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("bbd850cb-3ea8-47b7-8e67-4799b79dd4b4"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 102,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("3e727ea2-c051-4eec-8823-830ad7188b3a"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 103,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("6838d7c4-66e5-4de7-a1b6-aa49064874fa"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 104,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("98abd83b-2b91-45c9-97f0-cbead87b40a2"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 105,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("f16d9e63-f743-41d3-a2ba-787186a8b719"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 106,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("6a5c4b2e-5a17-4300-8eb3-dc048436c2ab"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 107,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("4d9d2c15-bdf6-4211-8dda-cc80b669755c"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 108,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("634bcaf6-f0fb-4057-83c2-c4429a871287"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 109,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("a0efc4f1-e304-4c3d-ac7c-8ea7912c3500"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 110,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("6eecb6b8-67d5-420c-a111-933ca97a495c"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 111,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("05b854a7-dc47-4391-a239-f08becee68b2"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 112,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("c9d49df6-86d3-4eed-b145-83f7a89d4e28"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 113,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("d623f5be-a2b6-4db3-9b6c-9f2e62175c88"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 114,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("17557f2a-be60-49b2-9cab-1bea6fe0fa01"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 115,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("50521053-b9d9-464d-b5e8-00c48fc4995c"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 116,
                            ClassId = 4,
                            IdCourse = "K46",
                            UserId = new Guid("a55e3e12-6287-4c86-a86f-89f004f332ed"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 117,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("0fa1e14d-4011-40af-b3db-d6dd90089a01"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 118,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("eb2ad632-a9df-4617-a0af-24b1cbecaf7a"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 119,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("a0efc4f1-e304-4c3d-ac7c-8ea7912c3500"),
                            YearEnd = 2024,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 120,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("214abb3d-1d2c-4f84-8d1d-3f4710891cdd"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 121,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("8a80c189-c866-4a48-b887-cd772d106aa0"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 122,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("22f56273-134d-440f-8404-c93cb419f931"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 123,
                            ClassId = 4,
                            IdCourse = "K46",
                            UserId = new Guid("8a966b22-74b4-4fdf-b587-4d9f7365e7e9"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 124,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("5af29074-61c8-4718-9389-53e98d3572df"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 125,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("9a645d43-0bc2-4008-a790-1a6d3b996543"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 126,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("9cdce684-615e-47be-a1bb-1992bb1a63a5"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 127,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("22992e67-305a-466d-a1be-707fa8b37b08"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 128,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("98df4859-492b-400e-9bff-9c106ac355fd"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 129,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("5af29074-61c8-4718-9389-53e98d3572df"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 130,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("24d83dd1-5d54-4226-ba5d-ae95b87dbc39"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 131,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("a01af778-d757-4022-8673-44baab055929"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 132,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("47024bc0-76fc-49dd-9560-5577b470e180"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 133,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("a2424871-33a7-4936-9bec-e893532661d0"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 134,
                            ClassId = 1,
                            IdCourse = "K46",
                            UserId = new Guid("83eaaa1e-d4ef-49ed-ae42-ef89a4bc7373"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 135,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("7ad19b1e-fd5e-4aee-ad80-d206e07ee20c"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 136,
                            ClassId = 4,
                            IdCourse = "K46",
                            UserId = new Guid("3a69e6e1-c0fb-44f1-aafc-61fccc441229"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 137,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("e6316e92-49ce-45df-b25c-2b6a9792f261"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 138,
                            ClassId = 4,
                            IdCourse = "K46",
                            UserId = new Guid("e6d20114-5812-4bd7-8690-0b1dd547b13b"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 139,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("bd1f6efa-1629-48fe-9ec9-9f03e81d6117"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 140,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("480bd134-5225-4e70-958d-bd7e5824fea7"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 141,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("522e0e93-008f-4d45-8ec8-1e370538edf4"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 142,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("dbcb0cce-a5e9-436a-8f58-4b848e229a2e"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 143,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("f7833a56-4305-4e12-b4ed-5673277653f3"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 144,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("9ac029c2-60a9-43b7-aaff-2a8440035f39"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 145,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("ed67b0c8-b211-48f8-ae85-34564f4629f8"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 146,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("882dc940-9666-4e52-82b1-83f4b2bb603f"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 147,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("6ee1ee30-2953-4c3e-8ff8-0007b12bc8b9"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 148,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("c0dbe0c0-f0c3-4843-9d17-295d90644139"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 149,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("37f49058-2255-418c-8024-57d6b84bdc1e"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 150,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("ef18dd97-1744-4260-9ee4-2a6eadfb36b9"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 151,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("503e2155-7fc9-4f96-8bb2-04fe277cdb31"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 152,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("7c3810f4-46c5-4fe6-9641-71f4c7c646b4"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 153,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("45675f17-ed01-4627-b320-550b81d1895c"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 154,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("6794e692-75be-4592-a787-03eb61a336a8"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 155,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("90a694d2-d5e1-4c8e-a9d4-113f775ccd03"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 156,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("0d5327a5-6b00-4c5b-8983-3ec8d6e965fc"),
                            YearEnd = 2024,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 157,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("dc2c4ceb-be0b-4342-888b-c4a40c3d52a3"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 158,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("c9d49df6-86d3-4eed-b145-83f7a89d4e28"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 159,
                            ClassId = 1,
                            IdCourse = "K46",
                            UserId = new Guid("b157360a-7d09-4864-8ca6-9a9c85c7eb2b"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 160,
                            ClassId = 4,
                            IdCourse = "K46",
                            UserId = new Guid("290053b1-5997-4822-9dc4-8e318761d6aa"),
                            YearEnd = 2024,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 161,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("8a966b22-74b4-4fdf-b587-4d9f7365e7e9"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 162,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("bd1f6efa-1629-48fe-9ec9-9f03e81d6117"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 163,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("95bea5b6-a046-41db-ac2c-e1139a592332"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 164,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("c2b58604-3210-456d-ae23-df85644b555c"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 165,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("0e6c1b93-0b8a-45e0-bd03-9f25595c4906"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 166,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("c837618c-dc3f-468b-b237-36f91fe28c89"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 167,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("80f66855-695e-42bd-86df-adfcc096a6fa"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 168,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("dcffb626-b7a0-4204-9a5c-9361e5a9cd5b"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 169,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("c837618c-dc3f-468b-b237-36f91fe28c89"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 170,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("05ef55e7-1566-4e42-a955-020e90a69802"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 171,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("687c621b-7490-41ac-b133-586cb7bf93f0"),
                            YearEnd = 2024,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 172,
                            ClassId = 4,
                            IdCourse = "K46",
                            UserId = new Guid("bbd850cb-3ea8-47b7-8e67-4799b79dd4b4"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 173,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("9ac029c2-60a9-43b7-aaff-2a8440035f39"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 174,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("37f49058-2255-418c-8024-57d6b84bdc1e"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 175,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("cc571974-7fc5-43f9-ab15-8f17111cd6f7"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 176,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("df1a75f0-b38e-40fd-be92-d7dacf942841"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 177,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("90022be0-2de5-4ea3-afc7-9d93d2fe56c0"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 178,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("aa14e86a-6f2c-4200-850c-7dd7360a08c9"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 179,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("9ccd656b-8be9-4cd9-a456-4a4446c7a5e5"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 180,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("95bea5b6-a046-41db-ac2c-e1139a592332"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 181,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("6f71bdc6-4bbd-428a-9c11-f436d37c7737"),
                            YearEnd = 2024,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 182,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("1074b04d-e70a-4e15-b789-a210b8fc64d6"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 183,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("24d83dd1-5d54-4226-ba5d-ae95b87dbc39"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 184,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("cb17cf1a-6b63-4585-a8b5-d02f80d2fe4a"),
                            YearEnd = 2024,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 185,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("59640aa2-4d97-46a9-b27e-aabc7d0c8574"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 186,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("f4a99026-6133-4da8-a597-633c700b8588"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 187,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("9a493d2d-3671-4c4b-9dd2-492095e5ab56"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 188,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("78bcc23e-c49f-47ba-a5c0-2bb504be62e1"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 189,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("bb8fad11-9838-42f7-97b0-99e56ff1dced"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 190,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("0fa1e14d-4011-40af-b3db-d6dd90089a01"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 191,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("6ee1ee30-2953-4c3e-8ff8-0007b12bc8b9"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 192,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("50a3a8dc-d512-4f52-981b-b3942710e174"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 193,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("bd342e77-34b4-4c9b-b723-f7c184129b8c"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 194,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("6794e692-75be-4592-a787-03eb61a336a8"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 195,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("976fe0c7-9396-4458-9e29-d8baa2d2d89f"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 196,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("3e727ea2-c051-4eec-8823-830ad7188b3a"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 197,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("d8a24afc-ea59-4553-80f8-538d2787faae"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 198,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("d7032b13-1712-4afa-a15a-316dcd84b37a"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 199,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("b10e29d4-af91-4ef5-a7ca-76bad4515fb3"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 200,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("1b3baea5-cd59-4166-9ed6-feb23a451b82"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 201,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("611dfe3b-6099-4dc5-81ac-59f0bea04757"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 202,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("3abcd768-4197-4229-8273-befb3436932c"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 203,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("baa097d4-56d1-4741-8c47-9744c1e178a0"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 204,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("ae14c8c6-f241-493d-8a7f-ef9a3b35894c"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 205,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("1ce197a9-51ad-4e32-89cf-ccf1d414c087"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 206,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("c837618c-dc3f-468b-b237-36f91fe28c89"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 207,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("b691565f-72fb-4c5d-8451-63ff137f79ac"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 208,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("8a966b22-74b4-4fdf-b587-4d9f7365e7e9"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 209,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("ec7919a8-a3c2-470d-bf29-e5c186a4ac14"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 210,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("c5754a1f-458c-4f1f-8cfe-34446401d826"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 211,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("9279047b-0319-4c2e-a13b-65e247f027a8"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 212,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("dd0160a4-501c-4f69-a41a-45b2d93969be"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 213,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("22f56273-134d-440f-8404-c93cb419f931"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 214,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("98abd83b-2b91-45c9-97f0-cbead87b40a2"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 215,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("8a6be835-409f-4308-918d-3f395efd9dfd"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 216,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("f7833a56-4305-4e12-b4ed-5673277653f3"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 217,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("1074b04d-e70a-4e15-b789-a210b8fc64d6"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 218,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("3e727ea2-c051-4eec-8823-830ad7188b3a"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 219,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("95bea5b6-a046-41db-ac2c-e1139a592332"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 220,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("b99c7b85-53ee-4067-a41e-403545cdef54"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 221,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("59640aa2-4d97-46a9-b27e-aabc7d0c8574"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 222,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("15607863-96fb-4e17-bc19-8f85ee9eb85e"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 223,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("9ac029c2-60a9-43b7-aaff-2a8440035f39"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 224,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("23343a5b-3e9c-42ba-8d98-bf4413ffb0d1"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 225,
                            ClassId = 1,
                            IdCourse = "K46",
                            UserId = new Guid("ef18dd97-1744-4260-9ee4-2a6eadfb36b9"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 226,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("687c621b-7490-41ac-b133-586cb7bf93f0"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 227,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("9a493d2d-3671-4c4b-9dd2-492095e5ab56"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 228,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("7e898cd0-2d72-4ac3-b1e6-601e3edfad00"),
                            YearEnd = 2024,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 229,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("7099201c-bc51-4f0e-a888-e68190a878ee"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 230,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("cb17cf1a-6b63-4585-a8b5-d02f80d2fe4a"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 231,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("0cdaa3a4-1d98-470a-82c6-e4f5f52e7606"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 232,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("b5fe3cd8-1256-463f-9062-e26d905f640d"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 233,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("a1cc5915-f635-4813-a91f-2998de193566"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 234,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("f829d5ff-00be-4368-b49a-0588c291c448"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 235,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("dd60dbb4-2ca7-4ce3-b6bc-b0d17ffb300b"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 236,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("e91a793c-9caa-48ff-a09c-1de8bd093fb2"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 237,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("c0dbe0c0-f0c3-4843-9d17-295d90644139"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 238,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("0747e4f7-b6cd-473d-b17a-d0c8e3066f2f"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 239,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("e1607665-0b43-4b68-8132-86554a0e5f07"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 240,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("e1d51102-e29f-4ce2-9a9a-523ededa0f9d"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 241,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("bfefbec5-c208-42d7-9883-75ac611aa69f"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 242,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("214abb3d-1d2c-4f84-8d1d-3f4710891cdd"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 243,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("86cdf93f-7053-493d-a389-191383b73a9b"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 244,
                            ClassId = 4,
                            IdCourse = "K46",
                            UserId = new Guid("e6a497f9-2895-40ab-96a4-1a17c52655a0"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 245,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("8c9abf69-7fd0-41ee-adda-afc80d39c024"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 246,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("7ad19b1e-fd5e-4aee-ad80-d206e07ee20c"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 247,
                            ClassId = 1,
                            IdCourse = "K44",
                            UserId = new Guid("0afc92af-e16b-4086-bbb1-a7bb3fb0a254"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 248,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("bfefbec5-c208-42d7-9883-75ac611aa69f"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 249,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("e9a35a9e-b65b-406d-af8c-69d1fc2184f3"),
                            YearEnd = 2024,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 250,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("30b25c79-dbc5-41f6-8934-69f4f71b3598"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 251,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("30fdfbac-9093-4fa1-8404-a4d5e30b3b47"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 252,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("bed10234-220c-4521-865f-92d9cc2b6f23"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 253,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("3d44ceab-8216-47bf-90c1-b1ac5607ebc4"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 254,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("538aadc3-d225-4d2b-ae9e-2369f0b2cd1b"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 255,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("d87f20ae-a7ca-4ea1-8fe3-9259e62e34db"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 256,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("dc2c4ceb-be0b-4342-888b-c4a40c3d52a3"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 257,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("b1a6e79d-33b5-4be8-9aa7-60f6ebb15f75"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 258,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("e4dc4f3b-a64e-48a2-858b-6ddeea64d0bb"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 259,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("95d89305-f31b-4c24-bd30-eda39134f9cd"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 260,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("71e479af-3f35-4b06-bce1-a3bd1f4b89f6"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 261,
                            ClassId = 4,
                            IdCourse = "K47",
                            UserId = new Guid("5dd9a5d7-c2ca-40c7-a066-f626a8f2d2d2"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 262,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("c1400430-6785-4c37-9bde-3bc2cea7b75e"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 263,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("496b8668-9b42-4344-bf6b-3a59b5fc5359"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 264,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("64e720d4-9d05-485a-bd34-8ad675af5d95"),
                            YearEnd = 2023,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 265,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("5dd9a5d7-c2ca-40c7-a066-f626a8f2d2d2"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 266,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("3fd80720-04a1-4c86-954e-41377a8a2f4e"),
                            YearEnd = 2024,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 267,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("cc571974-7fc5-43f9-ab15-8f17111cd6f7"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 268,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("b7b8e098-07c8-4f93-a4da-216f21c92980"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 269,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("e85534cd-6c64-4c66-ab46-10aa135105b0"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 270,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("8ac6839e-3dc9-447e-ac60-675f2ceb7b92"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 271,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("e91e9822-dc84-46a3-baac-b57f3a3c7679"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 272,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("95d89305-f31b-4c24-bd30-eda39134f9cd"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 273,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("4d9d2c15-bdf6-4211-8dda-cc80b669755c"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 274,
                            ClassId = 3,
                            IdCourse = "K44",
                            UserId = new Guid("90022be0-2de5-4ea3-afc7-9d93d2fe56c0"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 275,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("98dccdd4-d8ae-4d50-bf78-709f0aaa21d5"),
                            YearEnd = 2024,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 276,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("6838d7c4-66e5-4de7-a1b6-aa49064874fa"),
                            YearEnd = 2024,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 277,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("7e898cd0-2d72-4ac3-b1e6-601e3edfad00"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 278,
                            ClassId = 2,
                            IdCourse = "K46",
                            UserId = new Guid("c86a5fb6-07df-4994-8f29-028964372568"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 279,
                            ClassId = 3,
                            IdCourse = "K46",
                            UserId = new Guid("1b3baea5-cd59-4166-9ed6-feb23a451b82"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 280,
                            ClassId = 1,
                            IdCourse = "K48",
                            UserId = new Guid("5c5839b0-ed68-4539-8729-074e1bd0715a"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 281,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("e0ee13a6-a833-40a6-b8a4-a7a021ba3338"),
                            YearEnd = 2022,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 282,
                            ClassId = 2,
                            IdCourse = "K48",
                            UserId = new Guid("882ccd9e-36cf-4940-88e5-ea7fbd477c37"),
                            YearEnd = 2023,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 283,
                            ClassId = 2,
                            IdCourse = "K45",
                            UserId = new Guid("22992e67-305a-466d-a1be-707fa8b37b08"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 284,
                            ClassId = 2,
                            IdCourse = "K47",
                            UserId = new Guid("50521053-b9d9-464d-b5e8-00c48fc4995c"),
                            YearEnd = 2024,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 285,
                            ClassId = 3,
                            IdCourse = "K48",
                            UserId = new Guid("882dc940-9666-4e52-82b1-83f4b2bb603f"),
                            YearEnd = 2025,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 286,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("3fd80720-04a1-4c86-954e-41377a8a2f4e"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 287,
                            ClassId = 4,
                            IdCourse = "K44",
                            UserId = new Guid("b7fa6ab5-f298-4577-9c95-bb613ed53280"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 288,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("a8502205-a79d-47dc-b8f9-8b8df983fe3f"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 289,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("611dfe3b-6099-4dc5-81ac-59f0bea04757"),
                            YearEnd = 2025,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 290,
                            ClassId = 2,
                            IdCourse = "K44",
                            UserId = new Guid("4ee8867c-feff-42a8-989f-803fb3421351"),
                            YearEnd = 2022,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 291,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("c2b58604-3210-456d-ae23-df85644b555c"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 292,
                            ClassId = 1,
                            IdCourse = "K45",
                            UserId = new Guid("32f88a33-e861-4dc3-af21-213ed3ac8a80"),
                            YearEnd = 2025,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 293,
                            ClassId = 1,
                            IdCourse = "K47",
                            UserId = new Guid("4757251e-a13e-4c5a-9a22-02394e7fee19"),
                            YearEnd = 2022,
                            YearStart = 2019
                        },
                        new
                        {
                            StudentId = 294,
                            ClassId = 4,
                            IdCourse = "K46",
                            UserId = new Guid("717e7689-05f3-4c31-a82a-174ae6453cc6"),
                            YearEnd = 2023,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 295,
                            ClassId = 3,
                            IdCourse = "K45",
                            UserId = new Guid("03b705af-6b55-4152-83fd-acbaa5423071"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 296,
                            ClassId = 4,
                            IdCourse = "K46",
                            UserId = new Guid("d623f5be-a2b6-4db3-9b6c-9f2e62175c88"),
                            YearEnd = 2022,
                            YearStart = 2020
                        },
                        new
                        {
                            StudentId = 297,
                            ClassId = 4,
                            IdCourse = "K45",
                            UserId = new Guid("4ee8867c-feff-42a8-989f-803fb3421351"),
                            YearEnd = 2023,
                            YearStart = 2021
                        },
                        new
                        {
                            StudentId = 298,
                            ClassId = 3,
                            IdCourse = "K47",
                            UserId = new Guid("b10e29d4-af91-4ef5-a7ca-76bad4515fb3"),
                            YearEnd = 2025,
                            YearStart = 2018
                        },
                        new
                        {
                            StudentId = 299,
                            ClassId = 4,
                            IdCourse = "K48",
                            UserId = new Guid("98c56511-afa2-4f6e-b110-4d44836299e8"),
                            YearEnd = 2024,
                            YearStart = 2021
                        });
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Year", b =>
                {
                    b.Property<int>("IdYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Year1")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("IdYear")
                        .HasName("PK_YEAR");

                    b.ToTable("Year");

                    b.HasData(
                        new
                        {
                            IdYear = 1,
                            Year1 = 2018
                        },
                        new
                        {
                            IdYear = 2,
                            Year1 = 2019
                        },
                        new
                        {
                            IdYear = 3,
                            Year1 = 2020
                        },
                        new
                        {
                            IdYear = 4,
                            Year1 = 2021
                        },
                        new
                        {
                            IdYear = 5,
                            Year1 = 2022
                        },
                        new
                        {
                            IdYear = 6,
                            Year1 = 2023
                        });
                });

            modelBuilder.Entity("SupportRegister.Data.Models.YearSemester", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("IdSemester")
                        .HasColumnType("int");

                    b.Property<int>("IdYear")
                        .HasColumnType("int");

                    b.Property<string>("YearSemester1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("YearSemester");

                    b.HasKey("Id");

                    b.HasIndex("IdSemester");

                    b.HasIndex("IdYear");

                    b.ToTable("YearSemester");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("SupportRegister.Data.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("SupportRegister.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("SupportRegister.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("SupportRegister.Data.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupportRegister.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("SupportRegister.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SupportRegister.Data.Models.DetailRegisterScoreboard", b =>
                {
                    b.HasOne("SupportRegister.Data.Models.RegisterScoreboard", "Regis")
                        .WithMany("DetailRegisterScoreboards")
                        .HasForeignKey("RegisId")
                        .HasConstraintName("Fk_detail_score")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupportRegister.Data.Models.Student", "Student")
                        .WithMany("DetailRegisterScoreboards")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("Fk_detail_stu")
                        .IsRequired();

                    b.HasOne("SupportRegister.Data.Models.YearSemester", "YearSemesterIdEndNavigation")
                        .WithMany("DetailRegisterScoreboardYearSemesterIdEndNavigations")
                        .HasForeignKey("YearSemesterIdEnd")
                        .HasConstraintName("Fk_detail_end")
                        .IsRequired();

                    b.HasOne("SupportRegister.Data.Models.YearSemester", "YearSemesterIdStartNavigation")
                        .WithMany("DetailRegisterScoreboardYearSemesterIdStartNavigations")
                        .HasForeignKey("YearSemesterIdStart")
                        .HasConstraintName("Fk_yearsemester_detail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regis");

                    b.Navigation("Student");

                    b.Navigation("YearSemesterIdEndNavigation");

                    b.Navigation("YearSemesterIdStartNavigation");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Feedback", b =>
                {
                    b.HasOne("SupportRegister.Data.Models.Student", "Student")
                        .WithMany("Feedbacks")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK_FEEDBACK_STUDENT")
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.MinusPoint", b =>
                {
                    b.HasOne("SupportRegister.Data.Models.Student", "Student")
                        .WithMany("MinusPoints")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.RegisterApplication", b =>
                {
                    b.HasOne("SupportRegister.Data.Models.Application", "Application")
                        .WithMany("RegisterApplications")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("Fk_regis_app")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupportRegister.Data.Models.Status", "IdStatusNavigation")
                        .WithMany("RegisterApplications")
                        .HasForeignKey("IdStatus")
                        .HasConstraintName("Fk_regisapp_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupportRegister.Data.Models.Student", "Student")
                        .WithMany("RegisterApplications")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("Fk_stu_detailapp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("IdStatusNavigation");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.RegisterScoreboard", b =>
                {
                    b.HasOne("SupportRegister.Data.Models.Status", "IdStatusNavigation")
                        .WithMany("RegisterScoreboards")
                        .HasForeignKey("IdStatus")
                        .HasConstraintName("Fk_status_score")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdStatusNavigation");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Student", b =>
                {
                    b.HasOne("SupportRegister.Data.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .HasConstraintName("Fk_student_class")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupportRegister.Data.Models.Course", "IdCourseNavigation")
                        .WithMany("Students")
                        .HasForeignKey("IdCourse")
                        .HasConstraintName("Fk_stu_course")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupportRegister.Data.Models.AppUser", "User")
                        .WithMany("Students")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_STUDENTS_USERS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("IdCourseNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.YearSemester", b =>
                {
                    b.HasOne("SupportRegister.Data.Models.Semester", "IdSemesterNavigation")
                        .WithMany("YearSemesters")
                        .HasForeignKey("IdSemester")
                        .HasConstraintName("Fk_semester")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SupportRegister.Data.Models.Year", "IdYearNavigation")
                        .WithMany("YearSemesters")
                        .HasForeignKey("IdYear")
                        .HasConstraintName("Fk_year_detail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdSemesterNavigation");

                    b.Navigation("IdYearNavigation");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.AppUser", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Application", b =>
                {
                    b.Navigation("RegisterApplications");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Course", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.RegisterScoreboard", b =>
                {
                    b.Navigation("DetailRegisterScoreboards");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Semester", b =>
                {
                    b.Navigation("YearSemesters");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Status", b =>
                {
                    b.Navigation("RegisterApplications");

                    b.Navigation("RegisterScoreboards");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Student", b =>
                {
                    b.Navigation("DetailRegisterScoreboards");

                    b.Navigation("Feedbacks");

                    b.Navigation("MinusPoints");

                    b.Navigation("RegisterApplications");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.Year", b =>
                {
                    b.Navigation("YearSemesters");
                });

            modelBuilder.Entity("SupportRegister.Data.Models.YearSemester", b =>
                {
                    b.Navigation("DetailRegisterScoreboardYearSemesterIdEndNavigations");

                    b.Navigation("DetailRegisterScoreboardYearSemesterIdStartNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
